{"version":3,"file":"static/js/5198.8aa5658e.chunk.js","mappings":"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","sources":["views/notifications/toasts/Toasts.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CButton,\n  CRow,\n  CCol,\n  CToast,\n  CToastBody,\n  CToastClose,\n  CToastHeader,\n  CToaster,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\n\nconst ExampleToast = () => {\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  const exampleToast = (\n    <CToast title=\"CoreUI for React.js\">\n      <CToastHeader closeButton>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n        </svg>\n        <strong className=\"me-auto\">CoreUI for React.js</strong>\n        <small>7 min ago</small>\n      </CToastHeader>\n      <CToastBody>Hello, world! This is a toast message.</CToastBody>\n    </CToast>\n  )\n  return (\n    <>\n      <CButton onClick={() => addToast(exampleToast)}>Send a toast</CButton>\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n    </>\n  )\n}\n\nconst Toasts = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Basic</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Toasts are as flexible as you need and have very little required markup. At a minimum,\n              we require a single element to contain your “toasted” content and strongly encourage a\n              dismiss button.\n            </p>\n            <DocsExample href=\"components/toast\">\n              <CToast title=\"CoreUI for React.js\" autohide={false} visible={true}>\n                <CToastHeader closeButton>\n                  <svg\n                    className=\"rounded me-2\"\n                    width=\"20\"\n                    height=\"20\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"xMidYMid slice\"\n                    focusable=\"false\"\n                    role=\"img\"\n                  >\n                    <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                  </svg>\n                  <strong className=\"me-auto\">CoreUI for React.js</strong>\n                  <small>7 min ago</small>\n                </CToastHeader>\n                <CToastBody>Hello, world! This is a toast message.</CToastBody>\n              </CToast>\n            </DocsExample>\n            <DocsExample href=\"components/toast\">{ExampleToast()}</DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Translucent</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Toasts are slightly translucent to blend in with what&#39;s below them.\n            </p>\n            <DocsExample href=\"components/toast#translucent\">\n              <div className=\"bg-dark p-3\">\n                <CToast title=\"CoreUI for React.js\" autohide={false} visible={true}>\n                  <CToastHeader closeButton>\n                    <svg\n                      className=\"rounded me-2\"\n                      width=\"20\"\n                      height=\"20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      preserveAspectRatio=\"xMidYMid slice\"\n                      focusable=\"false\"\n                      role=\"img\"\n                    >\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                    </svg>\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\n                    <small>7 min ago</small>\n                  </CToastHeader>\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                </CToast>\n              </div>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Stacking</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              You can stack toasts by wrapping them in a toast container, which will vertically add\n              some spacing.\n            </p>\n            <DocsExample href=\"components/toast#stacking\">\n              <CToaster>\n                <CToast title=\"CoreUI for React.js\" autohide={false} visible={true}>\n                  <CToastHeader closeButton>\n                    <svg\n                      className=\"rounded me-2\"\n                      width=\"20\"\n                      height=\"20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      preserveAspectRatio=\"xMidYMid slice\"\n                      focusable=\"false\"\n                      role=\"img\"\n                    >\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                    </svg>\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\n                    <small>7 min ago</small>\n                  </CToastHeader>\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                </CToast>\n                <CToast title=\"CoreUI for React.js\" autohide={false} visible={true}>\n                  <CToastHeader closeButton>\n                    <svg\n                      className=\"rounded me-2\"\n                      width=\"20\"\n                      height=\"20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      preserveAspectRatio=\"xMidYMid slice\"\n                      focusable=\"false\"\n                      role=\"img\"\n                    >\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                    </svg>\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\n                    <small>7 min ago</small>\n                  </CToastHeader>\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                </CToast>\n              </CToaster>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Customize your toasts by removing sub-components, tweaking them with{' '}\n              <a href=\"https://coreui.io/docs/4.0/utilities/api\">utilities</a>, or by adding your\n              own markup. Here we&#39;ve created a simpler toast by removing the default{' '}\n              <code>&lt;CToastHeader&gt;</code>, adding a custom hide icon from{' '}\n              <a href=\"https://icons.coreui.io\">CoreUI Icons</a>, and using some{' '}\n              <a href=\"https://coreui.io/docs/4.0/utilities/flex\">flexbox utilities</a> to adjust\n              the layout.\n            </p>\n            <DocsExample href=\"components/toast#custom-content\">\n              <CToast autohide={false} className=\"align-items-center\" visible={true}>\n                <div className=\"d-flex\">\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                  <CToastClose className=\"me-2 m-auto\" />\n                </div>\n              </CToast>\n            </DocsExample>\n            <p className=\"text-medium-emphasis small\">\n              Alternatively, you can also add additional controls and components to toasts.\n            </p>\n            <DocsExample href=\"components/toast#custom-content\">\n              <CToast autohide={false} visible={true}>\n                <CToastBody>\n                  Hello, world! This is a toast message.\n                  <div className=\"mt-2 pt-2 border-top\">\n                    <CButton type=\"button\" color=\"primary\" size=\"sm\">\n                      Take action\n                    </CButton>\n                    <CToastClose component={CButton} color=\"secondary\" size=\"sm\" className=\"ms-1\">\n                      Close\n                    </CToastClose>\n                  </div>\n                </CToastBody>\n              </CToast>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-medium-emphasis small\">\n              Building on the above example, you can create different toast color schemes with our{' '}\n              <a href=\"https://coreui.io/docs/4.0/utilities/colors\">color</a> and{' '}\n              <a href=\"https://coreui.io/docs/4.0//utilities/background\">background</a> utilities.\n              Here we&#39;ve set <code>color=&#34;primary&#34;</code> and added{' '}\n              <code>.text-white</code> class to the <code>&lt;Ctoast&gt;</code>, and then set{' '}\n              <code>white</code> property to our close button. For a crisp edge, we remove the\n              default border with <code>.border-0</code>.\n            </p>\n            <DocsExample href=\"components/toast#color-schemes\">\n              <CToast\n                autohide={false}\n                color=\"primary\"\n                className=\"text-white align-items-center\"\n                visible={true}\n              >\n                <div className=\"d-flex\">\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                  <CToastClose className=\"me-2 m-auto\" white />\n                </div>\n              </CToast>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Toasts\n"],"names":["ExampleToast","toast","addToast","useState","toaster","useRef","exampleToast","_jsxs","CToast","title","children","CToastHeader","closeButton","_jsx","className","width","height","xmlns","preserveAspectRatio","focusable","role","fill","CToastBody","_Fragment","CButton","onClick","CToaster","ref","push","placement","Toasts","CRow","CCol","xs","CCard","CCardHeader","CCardBody","DocsExample","href","autohide","visible","CToastClose","type","color","size","component","white"],"sourceRoot":""}