{"version":3,"file":"static/js/3539.1f70c517.chunk.js","mappings":"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","sources":["../node_modules/@coreui/utils/src/hexToRgba.ts","views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js","../node_modules/@coreui/icons/src/free/cil-arrow-bottom.ts","../node_modules/@coreui/icons/src/free/cil-arrow-top.ts","../node_modules/@coreui/icons/src/free/cil-calendar.ts","../node_modules/@coreui/icons/src/free/cil-cloud-download.ts","../node_modules/@coreui/icons/src/free/cil-options.ts","../node_modules/@coreui/icons/src/free/cil-people.ts","../node_modules/@coreui/icons/src/free/cil-user-female.ts","../node_modules/@coreui/utils/src/getStyle.ts"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (__COREUI_VERSION__): hexToRgba.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/* eslint-disable no-magic-numbers */\nconst hexToRgba = (color: string, opacity = 100) => {\n  if (typeof color === 'undefined') {\n    throw new TypeError('Hex color is not defined')\n  }\n\n  const hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i)\n\n  if (!hex) {\n    throw new Error(`${color} is not a valid hex color`)\n  }\n\n  let r\n  let g\n  let b\n\n  if (color.length === 7) {\n    r = parseInt(color.slice(1, 3), 16)\n    g = parseInt(color.slice(3, 5), 16)\n    b = parseInt(color.slice(5, 7), 16)\n  } else {\n    r = parseInt(color.slice(1, 2), 16)\n    g = parseInt(color.slice(2, 3), 16)\n    b = parseInt(color.slice(3, 5), 16)\n  }\n\n  return `rgba(${r}, ${g}, ${b}, ${opacity / 100})`\n}\n\nexport default hexToRgba\n","import React from 'react'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\n\nconst Dashboard = () => {\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      <WidgetsBrand withCharts />\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"primary\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Users\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"info\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"warning\"\n          value={\n            <>\n              2.49{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsA\n          className=\"mb-4\"\n          color=\"danger\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Sessions\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n                <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","export var cilArrowBottom = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='367.997 338.75 271.999 434.747 271.999 17.503 239.999 17.503 239.999 434.745 144.003 338.75 121.376 361.377 256 496 390.624 361.377 367.997 338.75' class='ci-primary'/>\"];\n","export var cilArrowTop = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='390.624 150.625 256 16 121.376 150.625 144.004 173.252 240.001 77.254 240.001 495.236 272.001 495.236 272.001 77.257 367.996 173.252 390.624 150.625' class='ci-primary'/>\"];\n","export var cilCalendar = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M472,96H384V40H352V96H160V40H128V96H40a24.028,24.028,0,0,0-24,24V456a24.028,24.028,0,0,0,24,24H472a24.028,24.028,0,0,0,24-24V120A24.028,24.028,0,0,0,472,96Zm-8,352H48V128h80v40h32V128H352v40h32V128h80Z' class='ci-primary'/><rect width='32' height='32' x='112' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='224' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='112' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='296' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='112' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='200' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='280' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='32' x='368' y='368' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"];\n","export var cilCloudDownload = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='272 434.744 272 209.176 240 209.176 240 434.744 188.118 382.862 165.49 405.489 256 496 346.51 405.489 323.882 382.862 272 434.744' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M400,161.176c0-79.4-64.6-144-144-144s-144,64.6-144,144a96,96,0,0,0,0,192h80v-32H112a64,64,0,0,1,0-128h32v-32a112,112,0,0,1,224,0v32h32a64,64,0,0,1,0,128H320v32h80a96,96,0,0,0,0-192Z' class='ci-primary'/>\"];\n","export var cilOptions = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M256,144a64,64,0,1,0-64-64A64.072,64.072,0,0,0,256,144Zm0-96a32,32,0,1,1-32,32A32.036,32.036,0,0,1,256,48Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,368a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,368Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,464Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M256,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,288Z' class='ci-primary'/>\"];\n","export var cilPeople = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M462.541,316.3l-64.344-42.1,24.774-45.418A79.124,79.124,0,0,0,432.093,192V120A103.941,103.941,0,0,0,257.484,43.523L279.232,67a71.989,71.989,0,0,1,120.861,53v72a46.809,46.809,0,0,1-5.215,21.452L355.962,284.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421V432h-72v32h104V378.494A74.061,74.061,0,0,0,462.541,316.3Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M318.541,348.3l-64.343-42.1,24.773-45.418A79.124,79.124,0,0,0,288.093,224V152A104.212,104.212,0,0,0,184.04,47.866C126.723,47.866,80.093,94.581,80.093,152v72a78,78,0,0,0,9.015,36.775l24.908,45.664L50.047,348.3A74.022,74.022,0,0,0,16.5,410.4L16,496H352.093V410.494A74.061,74.061,0,0,0,318.541,348.3ZM320.093,464H48.186l.31-53.506a42.158,42.158,0,0,1,19.073-35.421l88.682-58.029L117.2,245.452A46.838,46.838,0,0,1,112.093,224V152a72,72,0,1,1,144,0v72a46.809,46.809,0,0,1-5.215,21.452L211.962,316.8l89.058,58.274a42.16,42.16,0,0,1,19.073,35.421Z' class='ci-primary'/>\"];\n","export var cilUserFemale = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M403.6,343.656l-72.823-47.334L344.043,272h23.428a48,48,0,0,0,44.119-66.908L361.581,90.57a112.029,112.029,0,0,0-211.162,0L100.41,205.092A48,48,0,0,0,144.529,272h23.428l13.266,24.322L108.4,343.656A79.725,79.725,0,0,0,72,410.732V496H440V410.732A79.727,79.727,0,0,0,403.6,343.656ZM408,464H104V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479L186.953,240H144.529a16,16,0,0,1-14.72-22.27l50.172-114.9.448-1.143a80.029,80.029,0,0,1,151.142,0l.2.58L382.191,217.73A16,16,0,0,1,367.471,240H325.047L288.5,307.007l97.661,63.479h0A47.836,47.836,0,0,1,408,410.732Z' class='ci-primary'/>\"];\n","/**\n * --------------------------------------------------------------------------\n * CoreUI Utils (__COREUI_VERSION__): getStyle.ts\n * Licensed under MIT (https://github.com/coreui/coreui-utils/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst getStyle = (property: string, element?: Element) => {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  const _element = element ?? document.body\n\n  return window.getComputedStyle(_element, null).getPropertyValue(property).replace(/^\\s/, '')\n}\n\nexport default getStyle\n"],"names":["hexToRgba","color","opacity","TypeError","r","g","b","match","Error","concat","length","parseInt","slice","Dashboard","random","min","max","Math","floor","progressGroupExample2","title","icon","cilUser","value","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","tableExample","avatar","src","avatar1","status","user","name","new","registered","country","flag","cifUs","usage","period","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","_jsxs","_Fragment","children","_jsx","WidgetsDropdown","CCard","className","CCardBody","CRow","CCol","sm","id","CButton","CIcon","cilCloudDownload","CButtonGroup","map","active","CChartLine","style","height","marginTop","data","labels","datasets","label","backgroundColor","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","CCardFooter","xs","cols","md","item","index","CProgress","thin","WidgetsBrand","withCharts","CCardHeader","xl","value1","value2","size","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","CTableDataCell","CAvatar","_ref","chartOptions","lg","CWidgetStatsD","chart","CChart","type","values","cilCalendar","CWidgetStatsA","cilArrowBottom","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","pointBackgroundColor","drawBorder","cilArrowTop","CChartBar","barPercentage","drawTicks","property","element","window","document","_element","body","getComputedStyle","getPropertyValue","replace"],"sourceRoot":""}