{
	"id": "33f47e50e7f73e6b7ef039d57251cd33",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/core/MADeliveryStrategy.sol": {
				"content": "// SPDX-License-Identifier: APACHE 2.0\r\npragma solidity ^0.8.23;\r\n\r\nimport \"../interfaces/IMVersion.sol\";\r\nimport \"../interfaces/IMRegister.sol\";\r\nimport \"../interfaces/IMargariAlloStrategy.sol\";\r\nimport \"../interfaces/IMStructs.sol\";\r\nimport \"../interfaces/IMProject.sol\";\r\nimport \"../interfaces/IMargari.sol\";\r\n\r\nimport \"./MBaseStrategy.sol\";\r\n\r\n// Interfaces\r\nimport {IAllo} from \"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol\";\r\nimport {IRegistry} from \"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol\";\r\n\r\nimport {Metadata} from \"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract MADeliveryStrategy is IMargariAlloStrategy, IMVersion, MBaseStrategy { \r\n\r\n    string constant name = \"RESERVED_M_A_DELIVERY_STRATEGY\";\r\n    uint256 constant version = 3; \r\n\r\n    string constant ALLO_CA = \"RESERVED_ALLO_CORE\";\r\n    string constant ALLO_PROFILE_REGISTER_CA = \"RESERVED_ALLO_PROFILE_REGISTER\";\r\n    string constant MARGARI_CA = \"RESERVED_MARGARI_CORE\";\r\n\r\n    address immutable self; \r\n\r\n    IMRegister register; \r\n    address [] projects;\r\n\r\n    mapping(address=>uint256) allocationByProject;\r\n    mapping(address=>uint256) remainingAllocationByProject;\r\n    mapping(address=>uint256) totalPaidoutByProject; \r\n    mapping(address=>bool) isValidAllocatorByAddress; \r\n    mapping(uint256=>PaymentDirective) paymentDirectiveBySendId; \r\n    mapping(address=>uint256[]) sendIdsByRecipient; \r\n    mapping(address=>uint256) totalPaidByRecipient; \r\n\r\n    constructor(address _register, address _allo, string memory _name) MBaseStrategy(_allo, _name){\r\n        register = IMRegister(_register);\r\n        \r\n        self = address(this);\r\n    }\r\n\r\n    function initialize(uint256 _poolId, bytes memory _data) external{\r\n        poolId = _poolId; \r\n    }\r\n\r\n    function getName() pure external returns (string memory _name) {\r\n        return name; \r\n    }\r\n\r\n    function getVersion() pure external returns (uint256 _version) {\r\n        return version; \r\n    }\r\n\r\n    function getProjects() view external returns (address [] memory _projects) {\r\n        return projects; \r\n    }\r\n\r\n     /// @notice Checks if the allocator is valid\r\n    /// @param _allocator The allocator address\r\n    /// @return 'true' if the allocator is valid, otherwise 'false'\r\n    function _isValidAllocator(address _allocator) internal pure override returns (bool){\r\n        return true; \r\n    }\r\n\r\n    function addAllocator(address _allocator ) external returns (bool _added) {\r\n        isValidAllocatorByAddress[_allocator] = true; \r\n        return true; \r\n    }\r\n\r\n    /// @notice This will register a recipient, set their status (and any other strategy specific values), and\r\n    ///         return the ID of the recipient.\r\n    /// @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\r\n    ///      functions should be added to allow the owner to check this. The owner could also check attestations directly\r\n    ///      and then Accept for instance.\r\n    /// @param _data The data to use to register the recipient\r\n    /// @param _sender The address of the sender\r\n    /// @return The ID of the recipient\r\n    function _registerRecipient(bytes memory _data, address _sender) internal override returns (address){\r\n        address projectAddress_ = abi.decode(_data, (address)); \r\n        IMProject project_ = IMProject(projectAddress_);\r\n        Project memory descriptor_ = project_.getProjectDescriptor(); \r\n        require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \");\r\n        projects.push(projectAddress_);\r\n        return projectAddress_;\r\n    }\r\n\r\n    /// @notice This will allocate to a recipient.\r\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\r\n    /// @param _data The data to use to allocate to the recipient\r\n    /// @param _sender The address of the sender\r\n    function _allocate(bytes memory _data, address _sender) internal override{\r\n        \r\n        ProjectAllocation memory allocation_ = abi.decode(_data, (ProjectAllocation));\r\n        IMProject project_ = IMProject(allocation_.project);\r\n        Project memory descriptor_ = project_.getProjectDescriptor();\r\n\r\n        require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \");\r\n        allocationByProject[allocation_.project] = allocation_.newAllocation; \r\n        remainingAllocationByProject[allocation_.project] = allocationByProject[allocation_.project] - totalPaidoutByProject[allocation_.project];\r\n    }\r\n\r\n    /// @notice This will distribute funds (tokens) to recipients.\r\n    /// @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\r\n    /// this contract will need to track the amount paid already, so that it doesn't double pay.\r\n    /// @param _recipientIds The ids of the recipients to distribute to\r\n    /// @param _data Data required will depend on the strategy implementation\r\n    /// @param _sender The address of the sender\r\n    function _distribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal override {\r\n        \r\n        for(uint256 x = 0; x < _recipientIds.length; x++){\r\n            address projectAddress_ = _recipientIds[x];\r\n            IMProject project_ = IMProject(projectAddress_); \r\n            Project memory descriptor_ = project_.getProjectDescriptor();\r\n            require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \"recipient <> sender mis-match\");\r\n\r\n            IERC20 erc20_ = IERC20(descriptor_.payoutCurrency);\r\n            require(remainingAllocationByProject[_recipientIds[x]] >= descriptor_.budget, \"budget <> remaining allocation mis-match\");\r\n\r\n            remainingAllocationByProject[_recipientIds[x]] -= descriptor_.budget;\r\n\r\n            if(address(erc20_) == NATIVE){\r\n                require(self.balance >= descriptor_.budget, \"insufficient native token funds in pool \");\r\n            }\r\n            else {\r\n                require(erc20_.balanceOf(self) >= descriptor_.budget, \"insufficient funds in pool\");\r\n                erc20_.approve(register.getAddress(MARGARI_CA), descriptor_.budget);\r\n            }\r\n\r\n            PaymentDirective [] memory paymentDirectives_ = project_.getPaymentDirectives(); \r\n            (uint256 [] memory sendIds_, uint256 totalPaid_) = payoutDirectives(paymentDirectives_, projectAddress_);\r\n            \r\n            totalPaidByRecipient[projectAddress_] += totalPaid_;\r\n\r\n        }\r\n    }\r\n\r\n    function payoutDirectives(PaymentDirective [] memory paymentDirectives_, address _projectAddress) internal returns (uint256 [] memory _sendIds, uint256 _totalPaid){\r\n         IMargari margari = IMargari(register.getAddress(MARGARI_CA));\r\n         IMProject project_ = IMProject(_projectAddress);\r\n\r\n        _sendIds = new uint256[](paymentDirectives_.length);\r\n        for(uint256 y = 0; y < paymentDirectives_.length; y++){\r\n            PaymentDirective memory paymentDirective_ = paymentDirectives_[y];\r\n            _totalPaid += paymentDirective_.amount; \r\n            if(paymentDirective_.contributor.homeChain != register.getChainId()){\r\n                if(paymentDirective_.erc20 == NATIVE){\r\n                    _sendIds[y] = margari.sendFunds{value : paymentDirective_.amount}(paymentDirective_.contributor.homeChain, paymentDirective_.erc20, paymentDirective_.amount ,paymentDirective_.contributor.wallet,paymentDirective_.alloProfileId,paymentDirective_.projectId );\r\n                }\r\n                else {\r\n                    _sendIds[y] = margari.sendFunds(paymentDirective_.contributor.homeChain, paymentDirective_.erc20, paymentDirective_.amount ,paymentDirective_.contributor.wallet,paymentDirective_.alloProfileId,paymentDirective_.projectId );\r\n                }\r\n            }\r\n            else {\r\n                if(paymentDirective_.erc20 == NATIVE){\r\n                    payable(paymentDirective_.contributor.wallet).transfer(paymentDirective_.amount);\r\n                }\r\n                else {\r\n                    IERC20(paymentDirective_.erc20).transfer(paymentDirective_.contributor.wallet,paymentDirective_.amount );\r\n                }\r\n                _sendIds[y] = getIndex();\r\n            } \r\n            project_.updatePayoutStatus(paymentDirective_.deliverableId, PayoutStatus.PAID);\r\n\r\n            paymentDirectiveBySendId[_sendIds[y]] = paymentDirective_;\r\n            sendIdsByRecipient[_projectAddress].push(_sendIds[y]);\r\n        }\r\n        return (_sendIds, _totalPaid); \r\n    }\r\n\r\n    uint256 index = 1000; \r\n\r\n    function getIndex() internal returns (uint256 _index) {\r\n        _index = index; \r\n        index++;\r\n        return _index; \r\n    }\r\n\r\n\r\n    /// @notice This will get the payout summary for a recipient.\r\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\r\n    /// @param _recipientId The ID of the recipient\r\n    /// @param _data The data to use to get the payout summary for the recipient\r\n    /// @return The payout summary for the recipient\r\n    function _getPayout(address _recipientId, bytes memory _data)\r\n        internal\r\n        view\r\n        override\r\n        returns (PayoutSummary memory){\r\n\r\n            return PayoutSummary ({\r\n                recipientAddress : _recipientId, \r\n                amount : totalPaidByRecipient[_recipientId]\r\n            });\r\n\r\n    }\r\n\r\n    /// @notice This will get the status of a recipient.\r\n    /// @param _recipientId The ID of the recipient\r\n    /// @return The status of the recipient\r\n    function _getRecipientStatus(address _recipientId) internal view override returns (Status){\r\n\r\n    }\r\n\r\n    function onlyAdmin(address _sender, uint256 _poolId, bytes32 _alloProfileId) view internal returns (bool _isAdmin) {\r\n        IAllo allo = IAllo(register.getAddress(ALLO_CA));\r\n        IRegistry alloRegistry = allo.getRegistry(); \r\n        if(allo.isPoolManager(_poolId, _sender) \r\n            || allo.isPoolAdmin(_poolId, _sender) \r\n            || alloRegistry.isOwnerOfProfile(_alloProfileId, _sender)){\r\n            return true; \r\n        }\r\n        return false; \r\n\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity 0.8.23;\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Metadata\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Metadata is used to define the metadata for the protocol that is used throughout the system.\nstruct Metadata {\n    /// @notice Protocol ID corresponding to a specific protocol (currently using IPFS = 1)\n    uint256 protocol;\n    /// @notice Pointer (hash) to fetch metadata for the specified protocol\n    string pointer;\n}\n"
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// Internal Libraries\nimport {Metadata} from \"../libraries/Metadata.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title IRegistry Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Interface for the Registry contract and exposes all functions needed to use the Registry\n///         within the Allo protocol.\n/// @dev The Registry Interface is used to interact with the Allo protocol and create profiles\n///      that can be used to interact with the Allo protocol. The Registry is the main contract\n///      that all other contracts interact with to get the 'Profile' information needed to\n///      interact with the Allo protocol. The Registry is also used to create new profiles\n///      and update existing profiles. The Registry is also used to add and remove members\n///      from a profile. The Registry will not always be used in a strategy and will depend on\n///      the strategy being used.\ninterface IRegistry {\n    /// ======================\n    /// ======= Structs ======\n    /// ======================\n\n    /// @dev The Profile struct that all profiles are based from\n    struct Profile {\n        bytes32 id;\n        uint256 nonce;\n        string name;\n        Metadata metadata;\n        address owner;\n        address anchor;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @dev Emitted when a profile is created. This will return your anchor address.\n    event ProfileCreated(\n        bytes32 indexed profileId, uint256 nonce, string name, Metadata metadata, address owner, address anchor\n    );\n\n    /// @dev Emitted when a profile name is updated. This will update the anchor when the name is updated and return it.\n    event ProfileNameUpdated(bytes32 indexed profileId, string name, address anchor);\n\n    /// @dev Emitted when a profile's metadata is updated.\n    event ProfileMetadataUpdated(bytes32 indexed profileId, Metadata metadata);\n\n    /// @dev Emitted when a profile owner is updated.\n    event ProfileOwnerUpdated(bytes32 indexed profileId, address owner);\n\n    /// @dev Emitted when a profile pending owner is updated.\n    event ProfilePendingOwnerUpdated(bytes32 indexed profileId, address pendingOwner);\n\n    /// =========================\n    /// ==== View Functions =====\n    /// =========================\n\n    /// @dev Returns the 'Profile' for a '_profileId' passed\n    /// @param _profileId The 'profileId' to return the 'Profile' for\n    /// @return profile The 'Profile' for the '_profileId' passed\n    function getProfileById(bytes32 _profileId) external view returns (Profile memory profile);\n\n    /// @dev Returns the 'Profile' for an '_anchor' passed\n    /// @param _anchor The 'anchor' to return the 'Profile' for\n    /// @return profile The 'Profile' for the '_anchor' passed\n    function getProfileByAnchor(address _anchor) external view returns (Profile memory profile);\n\n    /// @dev Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is a member or owner of\n    /// @param _account The 'account' to check if they are a member or owner of the '_profileId' passed in\n    /// @return isOwnerOrMemberOfProfile A boolean if the '_account' is a member or owner of the '_profileId' passed in\n    function isOwnerOrMemberOfProfile(bytes32 _profileId, address _account)\n        external\n        view\n        returns (bool isOwnerOrMemberOfProfile);\n\n    /// @dev Returns a boolean if the '_account' is an owner of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is an owner of\n    /// @param _owner The 'owner' to check if they are an owner of the '_profileId' passed in\n    /// @return isOwnerOfProfile A boolean if the '_account' is an owner of the '_profileId' passed in\n    function isOwnerOfProfile(bytes32 _profileId, address _owner) external view returns (bool isOwnerOfProfile);\n\n    /// @dev Returns a boolean if the '_account' is a member of the '_profileId' passed in\n    /// @param _profileId The 'profileId' to check if the '_account' is a member of\n    /// @param _member The 'member' to check if they are a member of the '_profileId' passed in\n    /// @return isMemberOfProfile A boolean if the '_account' is a member of the '_profileId' passed in\n    function isMemberOfProfile(bytes32 _profileId, address _member) external view returns (bool isMemberOfProfile);\n\n    /// ====================================\n    /// ==== External/Public Functions =====\n    /// ====================================\n\n    /// @dev Creates a new 'Profile' and returns the 'profileId' of the new profile\n    ///\n    /// Note: The 'name' and 'nonce' are used to generate the 'anchor' address\n    ///\n    /// Requirements: None, anyone can create a new profile\n    ///\n    /// @param _nonce The nonce to use to generate the 'anchor' address\n    /// @param _name The name to use to generate the 'anchor' address\n    /// @param _metadata The 'Metadata' to use to generate the 'anchor' address\n    /// @param _owner The 'owner' to use to generate the 'anchor' address\n    /// @param _members The 'members' to use to generate the 'anchor' address\n    /// @return profileId The 'profileId' of the new profile\n    function createProfile(\n        uint256 _nonce,\n        string memory _name,\n        Metadata memory _metadata,\n        address _owner,\n        address[] memory _members\n    ) external returns (bytes32 profileId);\n\n    /// @dev Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address\n    ///\n    /// Requirements: Only the 'Profile' owner can update the name\n    ///\n    /// Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'\n    ///       so please use caution. You can always recreate your 'anchor' address by updating the name back\n    ///       to the original name used to create the profile.\n    ///\n    /// @param _profileId The 'profileId' to update the name for\n    /// @param _name The new 'name' value\n    /// @return anchor The new 'anchor' address\n    function updateProfileName(bytes32 _profileId, string memory _name) external returns (address anchor);\n\n    /// @dev Updates the 'Metadata' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can update the metadata\n    ///\n    /// @param _profileId The 'profileId' to update the metadata for\n    /// @param _metadata The new 'Metadata' value\n    function updateProfileMetadata(bytes32 _profileId, Metadata memory _metadata) external;\n\n    /// @dev Updates the pending 'owner' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can update the pending owner\n    ///\n    /// @param _profileId The 'profileId' to update the pending owner for\n    /// @param _pendingOwner The new pending 'owner' value\n    function updateProfilePendingOwner(bytes32 _profileId, address _pendingOwner) external;\n\n    /// @dev Accepts the pending 'owner' of the '_profileId' passed in\n    ///\n    /// Requirements: Only the pending owner can accept the ownership\n    ///\n    /// @param _profileId The 'profileId' to accept the ownership for\n    function acceptProfileOwnership(bytes32 _profileId) external;\n\n    /// @dev Adds members to the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can add members\n    ///\n    /// @param _profileId The 'profileId' to add members to\n    /// @param _members The members to add to the '_profileId' passed in\n    function addMembers(bytes32 _profileId, address[] memory _members) external;\n\n    /// @dev Removes members from the '_profileId' passed in\n    ///\n    /// Requirements: Only the 'Profile' owner can remove members\n    ///\n    /// @param _profileId The 'profileId' to remove members from\n    /// @param _members The members to remove from the '_profileId' passed in\n    function removeMembers(bytes32 _profileId, address[] memory _members) external;\n\n    /// @dev Recovers funds from the contract\n    ///\n    /// Requirements: Must be the Allo owner\n    ///\n    /// @param _token The token you want to use to recover funds\n    /// @param _recipient The recipient of the recovered funds\n    function recoverFunds(address _token, address _recipient) external;\n}\n"
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// Interfaces\nimport {IRegistry} from \"./IRegistry.sol\";\nimport {IStrategy} from \"./IStrategy.sol\";\n// Internal Libraries\nimport {Metadata} from \"../libraries/Metadata.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title Allo Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.\ninterface IAllo {\n    /// ======================\n    /// ======= Structs ======\n    /// ======================\n\n    /// @notice the Pool struct that all strategy pools are based from\n    struct Pool {\n        bytes32 profileId;\n        IStrategy strategy;\n        address token;\n        Metadata metadata;\n        bytes32 managerRole;\n        bytes32 adminRole;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @notice Event emitted when a new pool is created\n    /// @param poolId ID of the pool created\n    /// @param profileId ID of the profile the pool is associated with\n    /// @param strategy Address of the strategy contract\n    /// @param token Address of the token pool was funded with when created\n    /// @param amount Amount pool was funded with when created\n    /// @param metadata Pool metadata\n    event PoolCreated(\n        uint256 indexed poolId,\n        bytes32 indexed profileId,\n        IStrategy strategy,\n        address token,\n        uint256 amount,\n        Metadata metadata\n    );\n\n    /// @notice Emitted when a pools metadata is updated\n    /// @param poolId ID of the pool updated\n    /// @param metadata Pool metadata that was updated\n    event PoolMetadataUpdated(uint256 indexed poolId, Metadata metadata);\n\n    /// @notice Emitted when a pool is funded\n    /// @param poolId ID of the pool funded\n    /// @param amount Amount funded to the pool\n    /// @param fee Amount of the fee paid to the treasury\n    event PoolFunded(uint256 indexed poolId, uint256 amount, uint256 fee);\n\n    /// @notice Emitted when the base fee is paid\n    /// @param poolId ID of the pool the base fee was paid for\n    /// @param amount Amount of the base fee paid\n    event BaseFeePaid(uint256 indexed poolId, uint256 amount);\n\n    /// @notice Emitted when the treasury address is updated\n    /// @param treasury Address of the new treasury\n    event TreasuryUpdated(address treasury);\n\n    /// @notice Emitted when the percent fee is updated\n    /// @param percentFee New percentage for the fee\n    event PercentFeeUpdated(uint256 percentFee);\n\n    /// @notice Emitted when the base fee is updated\n    /// @param baseFee New base fee amount\n    event BaseFeeUpdated(uint256 baseFee);\n\n    /// @notice Emitted when the registry address is updated\n    /// @param registry Address of the new registry\n    event RegistryUpdated(address registry);\n\n    /// @notice Emitted when a strategy is approved and added to the cloneable strategies\n    /// @param strategy Address of the strategy approved\n    event StrategyApproved(address strategy);\n\n    /// @notice Emitted when a strategy is removed from the cloneable strategies\n    /// @param strategy Address of the strategy removed\n    event StrategyRemoved(address strategy);\n\n    /// ====================================\n    /// ==== External/Public Functions =====\n    /// ====================================\n\n    /// @notice Initialize the Allo contract\n    /// @param _owner Address of the owner\n    /// @param _registry Address of the registry contract\n    /// @param _treasury Address of the treasury\n    /// @param _percentFee Percentage for the fee\n    /// @param _baseFee Base fee amount\n    function initialize(\n        address _owner,\n        address _registry,\n        address payable _treasury,\n        uint256 _percentFee,\n        uint256 _baseFee\n    ) external;\n\n    /// @notice Updates a pools metadata.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to update\n    /// @param _metadata The new metadata to set\n    function updatePoolMetadata(uint256 _poolId, Metadata memory _metadata) external;\n\n    /// @notice Update the registry address.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _registry The new registry address\n    function updateRegistry(address _registry) external;\n\n    /// @notice Updates the treasury address.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _treasury The new treasury address\n    function updateTreasury(address payable _treasury) external;\n\n    /// @notice Updates the percentage for the fee.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _percentFee The new percentage for the fee\n    function updatePercentFee(uint256 _percentFee) external;\n\n    /// @notice Updates the base fee.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _baseFee The new base fee\n    function updateBaseFee(uint256 _baseFee) external;\n\n    /// @notice Adds a strategy to the cloneable strategies.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _strategy The address of the strategy to add\n    function addToCloneableStrategies(address _strategy) external;\n\n    /// @notice Removes a strategy from the cloneable strategies.\n    /// @dev 'msg.sender' must be the Allo contract owner.\n    /// @param _strategy The address of the strategy to remove\n    function removeFromCloneableStrategies(address _strategy) external;\n\n    /// @notice Adds a pool manager to the pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to add the manager to\n    /// @param _manager The address of the manager to add\n    function addPoolManager(uint256 _poolId, address _manager) external;\n\n    /// @notice Removes a pool manager from the pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _poolId The ID of the pool to remove the manager from\n    /// @param _manager The address of the manager to remove\n    function removePoolManager(uint256 _poolId, address _manager) external;\n\n    /// @notice Recovers funds from a pool.\n    /// @dev 'msg.sender' must be a pool admin.\n    /// @param _token The token to recover\n    /// @param _recipient The address to send the recovered funds to\n    function recoverFunds(address _token, address _recipient) external;\n\n    /// @notice Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\n    /// @param _poolId The ID of the pool to register the recipient for\n    function registerRecipient(uint256 _poolId, bytes memory _data) external payable returns (address);\n\n    /// @notice Registers a batch of recipients.\n    /// @param _poolIds The pool ID's to register the recipients for\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy\n    function batchRegisterRecipient(uint256[] memory _poolIds, bytes[] memory _data)\n        external\n        returns (address[] memory);\n\n    /// @notice Funds a pool.\n    /// @dev 'msg.value' must be greater than 0 if the token is the native token\n    ///       or '_amount' must be greater than 0 if the token is not the native token.\n    /// @param _poolId The ID of the pool to fund\n    /// @param _amount The amount to fund the pool with\n    function fundPool(uint256 _poolId, uint256 _amount) external payable;\n\n    /// @notice Allocates funds to a recipient.\n    /// @dev Each strategy will handle the allocation of funds differently.\n    /// @param _poolId The ID of the pool to allocate funds from\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy.\n    function allocate(uint256 _poolId, bytes memory _data) external payable;\n\n    /// @notice Allocates funds to multiple recipients.\n    /// @dev Each strategy will handle the allocation of funds differently\n    function batchAllocate(uint256[] calldata _poolIds, bytes[] memory _datas) external;\n\n    /// @notice Distributes funds to recipients and emits {Distributed} event if successful\n    /// @dev Each strategy will handle the distribution of funds differently\n    /// @param _poolId The ID of the pool to distribute from\n    /// @param _recipientIds The recipient ids to distribute to\n    /// @param _data The data to pass to the strategy and may be handled differently by each strategy\n    function distribute(uint256 _poolId, address[] memory _recipientIds, bytes memory _data) external;\n\n    /// =========================\n    /// ==== View Functions =====\n    /// =========================\n\n    /// @notice Checks if an address is a pool admin.\n    /// @param _poolId The ID of the pool to check\n    /// @param _address The address to check\n    /// @return 'true' if the '_address' is a pool admin, otherwise 'false'\n    function isPoolAdmin(uint256 _poolId, address _address) external view returns (bool);\n\n    /// @notice Checks if an address is a pool manager.\n    /// @param _poolId The ID of the pool to check\n    /// @param _address The address to check\n    /// @return 'true' if the '_address' is a pool manager, otherwise 'false'\n    function isPoolManager(uint256 _poolId, address _address) external view returns (bool);\n\n    /// @notice Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\n    /// @param _strategy The address of the strategy to check\n    /// @return 'true' if the '_strategy' is cloneable, otherwise 'false'\n    function isCloneableStrategy(address _strategy) external view returns (bool);\n\n    /// @notice Returns the address of the strategy for a given 'poolId'\n    /// @param _poolId The ID of the pool to check\n    /// @return strategy The address of the strategy for the ID of the pool passed in\n    function getStrategy(uint256 _poolId) external view returns (address);\n\n    /// @notice Returns the current percent fee\n    /// @return percentFee The current percentage for the fee\n    function getPercentFee() external view returns (uint256);\n\n    /// @notice Returns the current base fee\n    /// @return baseFee The current base fee\n    function getBaseFee() external view returns (uint256);\n\n    /// @notice Returns the current treasury address\n    /// @return treasury The current treasury address\n    function getTreasury() external view returns (address payable);\n\n    /// @notice Returns the current registry address\n    /// @return registry The current registry address\n    function getRegistry() external view returns (IRegistry);\n\n    /// @notice Returns the 'Pool' struct for a given 'poolId'\n    /// @param _poolId The ID of the pool to check\n    /// @return pool The 'Pool' struct for the ID of the pool passed in\n    function getPool(uint256 _poolId) external view returns (Pool memory);\n\n    /// @notice Returns the current fee denominator\n    /// @dev 1e18 represents 100%\n    /// @return feeDenominator The current fee denominator\n    function getFeeDenominator() external view returns (uint256);\n\n    function createPoolWithCustomStrategy(\n        bytes32 _profileId,\n        address _strategy,\n        bytes memory _initStrategyData,\n        address _token,\n        uint256 _amount,\n        Metadata memory _metadata,\n        address[] memory _managers\n    ) external payable returns (uint256 poolId);\n}\n"
			},
			"contracts/core/MBaseStrategy.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\r\npragma solidity ^0.8.23;\r\n\r\n// Interfaces\r\nimport \"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol\";\r\n\r\n\r\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\r\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\r\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\r\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\r\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\r\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\r\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\r\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\r\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\r\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\r\n//                    allo.gitcoin.co\r\n\r\n/// @title BaseStrategy Contract\r\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\r\n/// @notice This contract is the base contract for all strategies\r\n/// @dev This contract is implemented by all strategies.\r\nabstract contract MBaseStrategy is IStrategy {\r\n    /// ==========================\r\n    /// === Storage Variables ====\r\n    /// ==========================\r\n    address constant NATIVE = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\r\n\r\n    IAllo internal immutable allo;\r\n    bytes32 internal immutable strategyId;\r\n    bool internal poolActive;\r\n    uint256 internal poolId;\r\n    uint256 internal poolAmount;\r\n\r\n    /// ====================================\r\n    /// ========== Constructor =============\r\n    /// ====================================\r\n\r\n    /// @notice Constructor to set the Allo contract and \"strategyId'.\r\n    /// @param _allo Address of the Allo contract.\r\n    /// @param _name Name of the strategy\r\n    constructor(address _allo, string memory _name) {\r\n        allo = IAllo(_allo);\r\n        strategyId = keccak256(abi.encode(_name));\r\n    }\r\n\r\n    /// ====================================\r\n    /// =========== Modifiers ==============\r\n    /// ====================================\r\n\r\n    /// @notice Modifier to check if the 'msg.sender' is the Allo contract.\r\n    /// @dev Reverts if the 'msg.sender' is not the Allo contract.\r\n    modifier onlyAllo() {\r\n        _checkOnlyAllo();\r\n        _;\r\n    }\r\n\r\n    /// @notice Modifier to check if the '_sender' is a pool manager.\r\n    /// @dev Reverts if the '_sender' is not a pool manager.\r\n    /// @param _sender The address to check if they are a pool manager\r\n    modifier onlyPoolManager(address _sender) {\r\n        _checkOnlyPoolManager(_sender);\r\n        _;\r\n    }\r\n\r\n    /// @notice Modifier to check if the pool is active.\r\n    /// @dev Reverts if the pool is not active.\r\n    modifier onlyActivePool() {\r\n        _checkOnlyActivePool();\r\n        _;\r\n    }\r\n\r\n    /// @notice Modifier to check if the pool is inactive.\r\n    /// @dev Reverts if the pool is active.\r\n    modifier onlyInactivePool() {\r\n        _checkInactivePool();\r\n        _;\r\n    }\r\n\r\n    /// @notice Modifier to check if the pool is initialized.\r\n    /// @dev Reverts if the pool is not initialized.\r\n    modifier onlyInitialized() {\r\n        _checkOnlyInitialized();\r\n        _;\r\n    }\r\n\r\n    /// ================================\r\n    /// =========== Views ==============\r\n    /// ================================\r\n\r\n    /// @notice Getter for the 'Allo' contract.\r\n    /// @return The Allo contract\r\n    function getAllo() external view override returns (IAllo) {\r\n        return allo;\r\n    }\r\n\r\n    /// @notice Getter for the 'poolId'.\r\n    /// @return The ID of the pool\r\n    function getPoolId() external view override returns (uint256) {\r\n        return poolId;\r\n    }\r\n\r\n    /// @notice Getter for the 'strategyId'.\r\n    /// @return The ID of the strategy\r\n    function getStrategyId() external view override returns (bytes32) {\r\n        return strategyId;\r\n    }\r\n\r\n    /// @notice Getter for the 'poolAmount'.\r\n    /// @return The balance of the pool\r\n    function getPoolAmount() external view virtual override returns (uint256) {\r\n        return poolAmount;\r\n    }\r\n\r\n    /// @notice Getter for whether or not the pool is active.\r\n    /// @return 'true' if the pool is active, otherwise 'false'\r\n    function isPoolActive() external view override returns (bool) {\r\n        return _isPoolActive();\r\n    }\r\n\r\n    /// @notice Getter for the status of a recipient.\r\n    /// @param _recipientId The ID of the recipient\r\n    /// @return The status of the recipient\r\n    function getRecipientStatus(address _recipientId) external view virtual returns (Status) {\r\n        return _getRecipientStatus(_recipientId);\r\n    }\r\n\r\n    /// ====================================\r\n    /// =========== Functions ==============\r\n    /// ====================================\r\n\r\n    /// @notice Initializes the 'Basetrategy'.\r\n    /// @dev Will revert if the poolId is invalid or already initialized\r\n    /// @param _poolId ID of the pool\r\n    function __BaseStrategy_init(uint256 _poolId) internal virtual onlyAllo {\r\n        // check if pool ID is not initialized already, if it is, revert\r\n        if (poolId != 0) revert(\"ALREADY INITIALIZED\"); \r\n\r\n        // check if pool ID is valid and not zero (0), if it is, revert\r\n        if (_poolId == 0) revert(\"INVALID\");\r\n        poolId = _poolId;\r\n    }\r\n\r\n    /// @notice Increases the pool amount.\r\n    /// @dev Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\r\n    /// @param _amount The amount to increase the pool by\r\n    function increasePoolAmount(uint256 _amount) external override onlyAllo {\r\n        _beforeIncreasePoolAmount(_amount);\r\n        poolAmount += _amount;\r\n        _afterIncreasePoolAmount(_amount);\r\n    }\r\n\r\n    /// @notice Registers a recipient.\r\n    /// @dev Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the\r\n    ///      strategy implementation. Only 'Allo' contract can call this when it is initialized.\r\n    /// @param _data The data to use to register the recipient\r\n    /// @param _sender The address of the sender\r\n    /// @return recipientId The recipientId\r\n    function registerRecipient(bytes memory _data, address _sender)\r\n        external\r\n        payable\r\n        onlyAllo\r\n        onlyInitialized\r\n        returns (address recipientId)\r\n    {\r\n        _beforeRegisterRecipient(_data, _sender);\r\n        recipientId = _registerRecipient(_data, _sender);\r\n        _afterRegisterRecipient(_data, _sender);\r\n    }\r\n\r\n    /// @notice Allocates to a recipient.\r\n    /// @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\r\n    ///      call this when it is initialized.\r\n    /// @param _data The data to use to allocate to the recipient\r\n    /// @param _sender The address of the sender\r\n    function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {\r\n        _beforeAllocate(_data, _sender);\r\n        _allocate(_data, _sender);\r\n        _afterAllocate(_data, _sender);\r\n    }\r\n\r\n    /// @notice Distributes funds (tokens) to recipients.\r\n    /// @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\r\n    ///      call this when it is initialized.\r\n    /// @param _recipientIds The IDs of the recipients\r\n    /// @param _data The data to use to distribute to the recipients\r\n    /// @param _sender The address of the sender\r\n    function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)\r\n        external\r\n        onlyAllo\r\n        onlyInitialized\r\n    {\r\n        _beforeDistribute(_recipientIds, _data, _sender);\r\n        _distribute(_recipientIds, _data, _sender);\r\n        _afterDistribute(_recipientIds, _data, _sender);\r\n    }\r\n\r\n    /// @notice Gets the payout summary for recipients.\r\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\r\n    /// @param _recipientIds The IDs of the recipients\r\n    /// @param _data The data to use to get the payout summary for the recipients\r\n    /// @return The payout summary for the recipients\r\n    function getPayouts(address[] memory _recipientIds, bytes[] memory _data)\r\n        external\r\n        view\r\n        virtual\r\n        override\r\n        returns (PayoutSummary[] memory)\r\n    {\r\n        uint256 recipientLength = _recipientIds.length;\r\n        // check if the length of the recipient IDs and data arrays are equal, if they are not, revert\r\n        if (recipientLength != _data.length) revert(\"ARRAY MISMATCH\");\r\n\r\n        PayoutSummary[] memory payouts = new PayoutSummary[](recipientLength);\r\n        for (uint256 i; i < recipientLength;) {\r\n            payouts[i] = _getPayout(_recipientIds[i], _data[i]);\r\n            unchecked {\r\n                i++;\r\n            }\r\n        }\r\n        return payouts;\r\n    }\r\n\r\n    /// @notice Checks if the '_allocator' is a valid allocator.\r\n    /// @dev How the allocator is determined is up to the strategy implementation.\r\n    /// @param _allocator The address to check if it is a valid allocator for the strategy.\r\n    /// @return 'true' if the address is a valid allocator, 'false' otherwise\r\n    function isValidAllocator(address _allocator) external view virtual override returns (bool) {\r\n        return _isValidAllocator(_allocator);\r\n    }\r\n\r\n    /// ====================================\r\n    /// ============ Internal ==============\r\n    /// ====================================\r\n\r\n    /// @notice Checks if the 'msg.sender' is the Allo contract.\r\n    /// @dev Reverts if the 'msg.sender' is not the Allo contract.\r\n    function _checkOnlyAllo() internal view {\r\n        if (msg.sender != address(allo)) revert(\"UNAUTHORIZED\");\r\n    }\r\n\r\n    /// @notice Checks if the '_sender' is a pool manager.\r\n    /// @dev Reverts if the '_sender' is not a pool manager.\r\n    /// @param _sender The address to check if they are a pool manager\r\n    function _checkOnlyPoolManager(address _sender) internal view {\r\n        if (!allo.isPoolManager(poolId, _sender)) revert(\"UNAUTHORIZED\");\r\n    }\r\n\r\n    /// @notice Checks if the pool is active.\r\n    /// @dev Reverts if the pool is not active.\r\n    function _checkOnlyActivePool() internal view {\r\n        if (!poolActive) revert(\"POOL INACTIVE\");\r\n    }\r\n\r\n    /// @notice Checks if the pool is inactive.\r\n    /// @dev Reverts if the pool is active.\r\n    function _checkInactivePool() internal view {\r\n        if (poolActive) revert(\"POOL INACTIVE\");\r\n    }\r\n\r\n    /// @notice Checks if the pool is initialized.\r\n    /// @dev Reverts if the pool is not initialized.\r\n    function _checkOnlyInitialized() internal view {\r\n        if (poolId == 0) revert(\"NOT_INITIALIZED\"); \r\n    }\r\n\r\n    /// @notice Set the pool to active or inactive status.\r\n    /// @dev This will emit a 'PoolActive()' event. Used by the strategy implementation.\r\n    /// @param _active The status to set, 'true' means active, 'false' means inactive\r\n    function _setPoolActive(bool _active) internal {\r\n        poolActive = _active;\r\n        emit PoolActive(_active);\r\n    }\r\n\r\n    /// @notice Checks if the pool is active.\r\n    /// @dev Used by the strategy implementation.\r\n    /// @return 'true' if the pool is active, otherwise 'false'\r\n    function _isPoolActive() internal view virtual returns (bool) {\r\n        return poolActive;\r\n    }\r\n\r\n    /// @notice Checks if the allocator is valid\r\n    /// @param _allocator The allocator address\r\n    /// @return 'true' if the allocator is valid, otherwise 'false'\r\n    function _isValidAllocator(address _allocator) internal view virtual returns (bool);\r\n\r\n    /// @notice This will register a recipient, set their status (and any other strategy specific values), and\r\n    ///         return the ID of the recipient.\r\n    /// @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\r\n    ///      functions should be added to allow the owner to check this. The owner could also check attestations directly\r\n    ///      and then Accept for instance.\r\n    /// @param _data The data to use to register the recipient\r\n    /// @param _sender The address of the sender\r\n    /// @return The ID of the recipient\r\n    function _registerRecipient(bytes memory _data, address _sender) internal virtual returns (address);\r\n\r\n    /// @notice This will allocate to a recipient.\r\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\r\n    /// @param _data The data to use to allocate to the recipient\r\n    /// @param _sender The address of the sender\r\n    function _allocate(bytes memory _data, address _sender) internal virtual;\r\n\r\n    /// @notice This will distribute funds (tokens) to recipients.\r\n    /// @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\r\n    /// this contract will need to track the amount paid already, so that it doesn't double pay.\r\n    /// @param _recipientIds The ids of the recipients to distribute to\r\n    /// @param _data Data required will depend on the strategy implementation\r\n    /// @param _sender The address of the sender\r\n    function _distribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual;\r\n\r\n    /// @notice This will get the payout summary for a recipient.\r\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\r\n    /// @param _recipientId The ID of the recipient\r\n    /// @param _data The data to use to get the payout summary for the recipient\r\n    /// @return The payout summary for the recipient\r\n    function _getPayout(address _recipientId, bytes memory _data)\r\n        internal\r\n        view\r\n        virtual\r\n        returns (PayoutSummary memory);\r\n\r\n    /// @notice This will get the status of a recipient.\r\n    /// @param _recipientId The ID of the recipient\r\n    /// @return The status of the recipient\r\n    function _getRecipientStatus(address _recipientId) internal view virtual returns (Status);\r\n\r\n    /// ===================================\r\n    /// ============== Hooks ==============\r\n    /// ===================================\r\n\r\n    /// @notice Hook called before increasing the pool amount.\r\n    /// @param _amount The amount to increase the pool by\r\n    function _beforeIncreasePoolAmount(uint256 _amount) internal virtual {}\r\n\r\n    /// @notice Hook called after increasing the pool amount.\r\n    /// @param _amount The amount to increase the pool by\r\n    function _afterIncreasePoolAmount(uint256 _amount) internal virtual {}\r\n\r\n    /// @notice Hook called before registering a recipient.\r\n    /// @param _data The data to use to register the recipient\r\n    /// @param _sender The address of the sender\r\n    function _beforeRegisterRecipient(bytes memory _data, address _sender) internal virtual {}\r\n\r\n    /// @notice Hook called after registering a recipient.\r\n    /// @param _data The data to use to register the recipient\r\n    /// @param _sender The address of the sender\r\n    function _afterRegisterRecipient(bytes memory _data, address _sender) internal virtual {}\r\n\r\n    /// @notice Hook called before allocating to a recipient.\r\n    /// @param _data The data to use to allocate to the recipient\r\n    /// @param _sender The address of the sender\r\n    function _beforeAllocate(bytes memory _data, address _sender) internal virtual {}\r\n\r\n    /// @notice Hook called after allocating to a recipient.\r\n    /// @param _data The data to use to allocate to the recipient\r\n    /// @param _sender The address of the sender\r\n    function _afterAllocate(bytes memory _data, address _sender) internal virtual {}\r\n\r\n    /// @notice Hook called before distributing funds (tokens) to recipients.\r\n    /// @param _recipientIds The IDs of the recipients\r\n    /// @param _data The data to use to distribute to the recipients\r\n    /// @param _sender The address of the sender\r\n    function _beforeDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {}\r\n\r\n    /// @notice Hook called after distributing funds (tokens) to recipients.\r\n    /// @param _recipientIds The IDs of the recipients\r\n    /// @param _data The data to use to distribute to the recipients\r\n    /// @param _sender The address of the sender\r\n    function _afterDistribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal virtual {}\r\n}"
			},
			"contracts/interfaces/IMargari.sol": {
				"content": "// SPDX-License-Identifier: APACHE 2.0\r\npragma solidity ^0.8.23;\r\n\r\nimport {Gilt, GiltClaim} from \"./IMStructs.sol\";\r\n\r\ninterface IMargari {\r\n\r\n    // send a gilt to a destination chain \r\n    function sendGilt(Gilt memory _gilt, bytes32 _alloProfileId, uint256 _projectId, uint256 _destinationChainId) external returns (uint256 _sendId);\r\n\r\n    // this function sends from the given project Id to the funds to the given remote recipient on the given chain\r\n    function sendFunds(uint256 _chainId, address _erc20, uint256 _amount, address _remoteRecipient, bytes32 _alloProfileId, uint256 _projectId) external payable returns (uint256 _sendId);\r\n\r\n    // this function enables the recipient to claim their gilts \r\n    function claimGilts() external returns (GiltClaim [] memory _giltClaims);\r\n\r\n}"
			},
			"contracts/interfaces/IMProject.sol": {
				"content": "// SPDX-License-Identifier: APACHE 2.0\r\npragma solidity ^0.8.23;\r\n\r\nimport {Project, Contributor, Deliverable, PaymentDirective, PayoutStatus} from \"../interfaces/IMStructs.sol\";\r\n\r\ninterface IMProject { \r\n\r\n    function getProjectDescriptor() view external returns (Project memory _project);\r\n\r\n    function getPaymentDirectives() view external returns (PaymentDirective [] memory _directives);\r\n\r\n    function submitDeliverable(uint256 _deliverableId) external returns (bool _submitted);\r\n\r\n\r\n    function getContributorIds() view external returns (uint256 [] memory _contributorIds);\r\n\r\n    function getContributorById(uint256 _contributorId ) view external returns (Contributor memory _contributor);\r\n\r\n    function getContributorByAddress(address _contributorWallet) view external returns (Contributor memory _contributor);\r\n\r\n    function getDeliverableById(uint256 _deliverableId) view external returns (Deliverable memory _deliverable);\r\n\r\n    function updatePayoutStatus(uint256 _deliverableId, PayoutStatus _status) external returns (bool _updated);\r\n\r\n    function reAssignDeliverable(uint256 _deliverableId, uint256 _newContributorId) external  returns (bool _updated);\r\n\r\n    function amendBudget(uint256 _newBudget) external returns (int256 _amendmentAmount);\r\n}"
			},
			"contracts/interfaces/IMStructs.sol": {
				"content": "// SPDX-License-Identifier: APACHE 2.0\r\npragma solidity ^0.8.23;\r\n\r\nimport {Metadata} from \"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\";\r\n\r\nstruct Gilt {\r\n    address erc20; \r\n    uint256 amount; \r\n    uint256 creationDate; \r\n    uint256 chainId; \r\n    address giltContract; \r\n    uint256 id; \r\n}\r\n\r\nstruct TransmittedGilt { \r\n    Gilt gilt; \r\n    bytes32 alloProfileId;\r\n    uint256 projectId;\r\n    address owner; \r\n}\r\n\r\nstruct GiltClaim { \r\n    uint256 projectId; \r\n    uint256 giltId; \r\n    uint256 chainId; \r\n}\r\n\r\nstruct DestinationConfig {\r\n    uint256 chainId; \r\n    uint64 ccipChainSelector; \r\n    address routerAddress; \r\n    address [] feeTokens; \r\n    address giltReciever; \r\n}\r\n\r\nstruct SendStatement { \r\n    uint256 sendId;\r\n    uint256 fees; \r\n    address token; \r\n    uint256 sendDate;\r\n    bytes32 ccipMesssageId;\r\n}\r\n\r\nenum DeliverableStatus {PROPOSED, AGREED, DELIVERED, SUSPENDED, CANCELLED}\r\n\r\nenum PayoutStatus {AGREED, PENDING, PAID, SUSPENDED, CANCELLED}\r\n\r\nstruct ContributorAssignment { \r\n    address project; \r\n    Contributor contributor; \r\n    uint256 [] initialAssignments; \r\n\r\n}\r\n\r\n// Internal Libraries\r\nstruct Contributor {\r\n    uint256 id; \r\n    uint256 homeChain; \r\n    address wallet;\r\n    Metadata metadata;\r\n}\r\n\r\nstruct Project { \r\n    uint256 projectId; \r\n    string name; \r\n    uint256 alloPoolId;\r\n    bytes32 alloProfileId;  \r\n    address payoutCurrency; \r\n    uint256 budget;\r\n    uint256 [] deliverableIds; \r\n    address [] contributors; \r\n}\r\n\r\nstruct ProjectAllocation {\r\n    address project; \r\n    uint256 newAllocation; \r\n}\r\n\r\nstruct PaymentDirective {\r\n    uint256 id; \r\n    Contributor contributor; \r\n    uint256 projectId; \r\n    bytes32 alloProfileId; \r\n    uint256 deliverableId; \r\n    uint256 amount; \r\n    address erc20; \r\n}\r\n\r\nstruct Deliverable {\r\n    uint256 id; \r\n    uint256 projectId; \r\n    uint256 payoutAmount;\r\n    string name; \r\n    Metadata metadata;\r\n    DeliverableStatus deliverableStatus;\r\n    PayoutStatus payoutStatus; \r\n}\r\n"
			},
			"contracts/interfaces/IMargariAlloStrategy.sol": {
				"content": "// SPDX-License-Identifier: APACHE 2.0\r\npragma solidity ^0.8.23;\r\n\r\n\r\ninterface IMargariAlloStrategy { \r\n\r\n\r\n}"
			},
			"contracts/interfaces/IMRegister.sol": {
				"content": "// SPDX-License-Identifier: APACHE 2.0\r\npragma solidity ^0.8.23;\r\n\r\nimport {DestinationConfig} from \"./IMStructs.sol\";\r\n\r\n\r\ninterface IMRegister {\r\n\r\n    function getChainId() view external returns (uint256 _chainId);\r\n\r\n    function getAddress(string memory _name) view external returns (address _address);\r\n\r\n    function getName(address _address) view external returns (string memory _name);\r\n\r\n    function getDestinationConfig(uint256 _chainId) view external returns (DestinationConfig memory _dConfig);\r\n\r\n}"
			},
			"contracts/interfaces/IMVersion.sol": {
				"content": "// SPDX-License-Identifier: APACHE 2.0\r\npragma solidity ^0.8.23;\r\n\r\ninterface IMVersion { \r\n\r\n    function getName() view external returns (string memory _name);\r\n\r\n    function getVersion() view external returns (uint256 _version);\r\n}"
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.19;\n\n// Interfaces\nimport {IAllo} from \"./IAllo.sol\";\n\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⢿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡟⠘⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣾⠻⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡿⠀⠀⠸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠀⠀⢀⣠⣴⣴⣶⣶⣶⣦⣦⣀⡀⠀⠀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⠃⠀⠙⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠁⠀⠀⠀⢻⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠘⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⠃⠀⠀⠀⠀⠈⢿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⣰⣿⣿⣿⡿⠋⠁⠀⠀⠈⠘⠹⣿⣿⣿⣿⣆⠀⠀⠀\n// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⡀⠀⠀\n// ⠀⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣟⠀⡀⢀⠀⡀⢀⠀⡀⢈⢿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⠀⠀\n// ⠀⠀⣠⣿⣿⣿⣿⣿⣿⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⡿⢿⠿⠿⠿⠿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣷⡀⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠸⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠂⠀⠀\n// ⠀⠀⠙⠛⠿⠻⠻⠛⠉⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣧⠀⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⢻⣿⣿⣿⣷⣀⢀⠀⠀⠀⡀⣰⣾⣿⣿⣿⠏⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣧⠀⠀⢸⣿⣿⣿⣗⠀⠀⠀⢸⣿⣿⣿⡯⠀⠀⠀⠀⠹⢿⣿⣿⣿⣿⣾⣾⣷⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀\n// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠙⠋⠛⠙⠋⠛⠙⠋⠛⠙⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀⠠⠿⠻⠟⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠟⠿⠟⠿⠆⠀⠸⠿⠿⠟⠯⠀⠀⠀⠸⠿⠿⠿⠏⠀⠀⠀⠀⠀⠈⠉⠻⠻⡿⣿⢿⡿⡿⠿⠛⠁⠀⠀⠀⠀⠀⠀\n//                    allo.gitcoin.co\n\n/// @title IStrategy Interface\n/// @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n/// @notice BaseStrategy is the base contract that all strategies should inherit from and uses this interface.\n\ninterface IStrategy {\n    /// ======================\n    /// ======= Storage ======\n    /// ======================\n\n    /// @notice The Status enum that all recipients are based from\n    enum Status {\n        None,\n        Pending,\n        Accepted,\n        Rejected,\n        Appealed,\n        InReview,\n        Canceled\n    }\n\n    /// @notice Payout summary struct to hold the payout data\n    struct PayoutSummary {\n        address recipientAddress;\n        uint256 amount;\n    }\n\n    /// ======================\n    /// ======= Events =======\n    /// ======================\n\n    /// @notice Emitted when strategy is initialized.\n    /// @param poolId The ID of the pool\n    /// @param data The data passed to the 'initialize' function\n    event Initialized(uint256 poolId, bytes data);\n\n    /// @notice Emitted when a recipient is registered.\n    /// @param recipientId The ID of the recipient\n    /// @param data The data passed to the 'registerRecipient' function\n    /// @param sender The sender\n    event Registered(address indexed recipientId, bytes data, address sender);\n\n    /// @notice Emitted when a recipient is allocated to.\n    /// @param recipientId The ID of the recipient\n    /// @param amount The amount allocated\n    /// @param token The token allocated\n    event Allocated(address indexed recipientId, uint256 amount, address token, address sender);\n\n    /// @notice Emitted when tokens are distributed.\n    /// @param recipientId The ID of the recipient\n    /// @param recipientAddress The recipient\n    /// @param amount The amount distributed\n    /// @param sender The sender\n    event Distributed(address indexed recipientId, address recipientAddress, uint256 amount, address sender);\n\n    /// @notice Emitted when pool is set to active status.\n    /// @param active The status of the pool\n    event PoolActive(bool active);\n\n    /// ======================\n    /// ======= Views ========\n    /// ======================\n\n    /// @notice Getter for the address of the Allo contract.\n    /// @return The 'Allo' contract\n    function getAllo() external view returns (IAllo);\n\n    /// @notice Getter for the 'poolId' for this strategy.\n    /// @return The ID of the pool\n    function getPoolId() external view returns (uint256);\n\n    /// @notice Getter for the 'id' of the strategy.\n    /// @return The ID of the strategy\n    function getStrategyId() external view returns (bytes32);\n\n    /// @notice Checks whether a allocator is valid or not, will usually be true for all strategies\n    ///      and will depend on the strategy implementation.\n    /// @param _allocator The allocator to check\n    /// @return Whether the allocator is valid or not\n    function isValidAllocator(address _allocator) external view returns (bool);\n\n    /// @notice whether pool is active.\n    /// @return Whether the pool is active or not\n    function isPoolActive() external returns (bool);\n\n    /// @notice Checks the amount of tokens in the pool.\n    /// @return The balance of the pool\n    function getPoolAmount() external view returns (uint256);\n\n    /// @notice Increases the balance of the pool.\n    /// @param _amount The amount to increase the pool by\n    function increasePoolAmount(uint256 _amount) external;\n\n    /// @notice Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation\n    ///      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those\n    ///      since there is no need for Pending or Rejected.\n    /// @param _recipientId The ID of the recipient\n    /// @return The status of the recipient\n    function getRecipientStatus(address _recipientId) external view returns (Status);\n\n    /// @notice Checks the amount allocated to a recipient for distribution.\n    /// @dev Input the values you would send to distribute(), get the amounts each recipient in the array would receive.\n    ///      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\n    /// @param _recipientIds The IDs of the recipients\n    /// @param _data The encoded data\n    function getPayouts(address[] memory _recipientIds, bytes[] memory _data)\n        external\n        view\n        returns (PayoutSummary[] memory);\n\n    /// ======================\n    /// ===== Functions ======\n    /// ======================\n\n    /// @notice\n    /// @dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,\n    ///      use it, and then call super.initialize().\n    /// @param _poolId The ID of the pool\n    /// @param _data The encoded data\n    function initialize(uint256 _poolId, bytes memory _data) external;\n\n    /// @notice This will register a recipient, set their status (and any other strategy specific values), and\n    ///         return the ID of the recipient.\n    /// @dev Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional\n    ///      functions should be added to allow the owner to check this. The owner could also check attestations directly\n    ///      and then accept for instance. The '_data' will be determined by the strategy implementation.\n    /// @param _data The data to use to register the recipient\n    /// @param _sender The address of the sender\n    /// @return The ID of the recipient\n    function registerRecipient(bytes memory _data, address _sender) external payable returns (address);\n\n    /// @notice This will allocate to a recipient.\n    /// @dev The encoded '_data' will be determined by the strategy implementation.\n    /// @param _data The data to use to allocate to the recipient\n    /// @param _sender The address of the sender\n    function allocate(bytes memory _data, address _sender) external payable;\n\n    /// @notice This will distribute funds (tokens) to recipients.\n    /// @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n    /// this contract will need to track the amount paid already, so that it doesn't double pay.\n    function distribute(address[] memory _recipientIds, bytes memory _data, address _sender) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/core/MADeliveryStrategy.sol": {
				"MADeliveryStrategy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_register",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_allo",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "addAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_added",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getProjects",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_projects",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_version",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to distribute to the recipients",
									"_recipientIds": "The IDs of the recipients",
									"_sender": "The address of the sender"
								}
							},
							"getAllo()": {
								"returns": {
									"_0": "The Allo contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to get the payout summary for the recipients",
									"_recipientIds": "The IDs of the recipients"
								},
								"returns": {
									"_0": "The payout summary for the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "'true' if the pool is active, otherwise 'false'"
								}
							},
							"isValidAllocator(address)": {
								"details": "How the allocator is determined is up to the strategy implementation.",
								"params": {
									"_allocator": "The address to check if it is a valid allocator for the strategy."
								},
								"returns": {
									"_0": "'true' if the address is a valid allocator, 'false' otherwise"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"recipientId": "The recipientId"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/core/MADeliveryStrategy.sol\":773:10348  contract MADeliveryStrategy is IMargariAlloStrategy, IMVersion, MBaseStrategy { ... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/core/MADeliveryStrategy.sol\":8770:8774  1000 */\n  0x03e8\n    /* \"contracts/core/MADeliveryStrategy.sol\":8754:8774  uint256 index = 1000 */\n  0x0c\n  sstore\n    /* \"contracts/core/MADeliveryStrategy.sol\":1645:1831  constructor(address _register, address _allo, string memory _name) MBaseStrategy(_allo, _name){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/core/MBaseStrategy.sol\":5306:5325  allo = IAllo(_allo) */\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/core/MBaseStrategy.sol\":5359:5376  abi.encode(_name) */\n  mload(0x40)\n    /* \"contracts/core/MADeliveryStrategy.sol\":1726:1731  _allo */\n  dup3\n  swap1\n    /* \"contracts/core/MADeliveryStrategy.sol\":1733:1738  _name */\n  dup3\n  swap1\n    /* \"contracts/core/MBaseStrategy.sol\":5359:5376  abi.encode(_name) */\n  tag_7\n  swap1\n    /* \"contracts/core/MADeliveryStrategy.sol\":1733:1738  _name */\n  dup3\n  swap1\n    /* \"contracts/core/MBaseStrategy.sol\":5359:5376  abi.encode(_name) */\n  0x20\n  add\n  tag_8\n  jump\t// in\ntag_7:\n  0x40\n  dup1\n  mload\n  dup1\n  dup4\n  sub\n  not(0x1f)\n  add\n  dup2\n  mstore\n  swap2\n  swap1\n  mstore\n    /* \"contracts/core/MBaseStrategy.sol\":5349:5377  keccak256(abi.encode(_name)) */\n  dup1\n  mload\n    /* \"contracts/core/MBaseStrategy.sol\":5359:5376  abi.encode(_name) */\n  0x20\n    /* \"contracts/core/MBaseStrategy.sol\":5349:5377  keccak256(abi.encode(_name)) */\n  swap1\n  swap2\n  add\n  keccak256\n    /* \"contracts/core/MBaseStrategy.sol\":5336:5377  strategyId = keccak256(abi.encode(_name)) */\n  0xa0\n  mstore\n  pop\n  pop\n    /* \"contracts/core/MADeliveryStrategy.sol\":1750:1758  register */\n  0x03\n    /* \"contracts/core/MADeliveryStrategy.sol\":1750:1782  register = IMRegister(_register) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  swap1\n  swap5\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n  pop\n  pop\n    /* \"contracts/core/MADeliveryStrategy.sol\":1818:1822  this */\n  address\n    /* \"contracts/core/MADeliveryStrategy.sol\":1803:1823  self = address(this) */\n  0xc0\n  mstore\n    /* \"contracts/core/MADeliveryStrategy.sol\":773:10348  contract MADeliveryStrategy is IMargariAlloStrategy, IMVersion, MBaseStrategy { ... */\n  jump(tag_14)\n    /* \"#utility.yul\":14:191   */\ntag_11:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_16\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_16:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_12:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:578   */\ntag_13:\n    /* \"#utility.yul\":413:414   */\n  0x00\n    /* \"#utility.yul\":423:536   */\ntag_19:\n    /* \"#utility.yul\":437:443   */\n  dup4\n    /* \"#utility.yul\":434:435   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  lt\n    /* \"#utility.yul\":423:536   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":513:524   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":507:525   */\n  mload\n    /* \"#utility.yul\":494:505   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":487:526   */\n  mstore\n    /* \"#utility.yul\":459:461   */\n  0x20\n    /* \"#utility.yul\":452:462   */\n  add\n    /* \"#utility.yul\":423:536   */\n  jump(tag_19)\ntag_21:\n  pop\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x00\n    /* \"#utility.yul\":552:568   */\n  swap2\n  add\n    /* \"#utility.yul\":545:572   */\n  mstore\n    /* \"#utility.yul\":328:578   */\n  jump\t// out\n    /* \"#utility.yul\":583:1650   */\ntag_3:\n    /* \"#utility.yul\":681:687   */\n  0x00\n    /* \"#utility.yul\":689:695   */\n  dup1\n    /* \"#utility.yul\":697:703   */\n  0x00\n    /* \"#utility.yul\":750:752   */\n  0x60\n    /* \"#utility.yul\":738:747   */\n  dup5\n    /* \"#utility.yul\":729:736   */\n  dup7\n    /* \"#utility.yul\":725:748   */\n  sub\n    /* \"#utility.yul\":721:753   */\n  slt\n    /* \"#utility.yul\":718:770   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":766:767   */\n  0x00\n    /* \"#utility.yul\":763:764   */\n  dup1\n    /* \"#utility.yul\":756:768   */\n  revert\n    /* \"#utility.yul\":718:770   */\ntag_23:\n    /* \"#utility.yul\":789:829   */\n  tag_24\n    /* \"#utility.yul\":819:828   */\n  dup5\n    /* \"#utility.yul\":789:829   */\n  tag_11\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":779:829   */\n  swap3\n  pop\n    /* \"#utility.yul\":848:897   */\n  tag_25\n    /* \"#utility.yul\":893:895   */\n  0x20\n    /* \"#utility.yul\":882:891   */\n  dup6\n    /* \"#utility.yul\":878:896   */\n  add\n    /* \"#utility.yul\":848:897   */\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":941:943   */\n  0x40\n    /* \"#utility.yul\":926:944   */\n  dup6\n  add\n    /* \"#utility.yul\":920:945   */\n  mload\n    /* \"#utility.yul\":838:897   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":994:1008   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":991:1025   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1021:1022   */\n  0x00\n    /* \"#utility.yul\":1018:1019   */\n  dup1\n    /* \"#utility.yul\":1011:1023   */\n  revert\n    /* \"#utility.yul\":991:1025   */\ntag_26:\n    /* \"#utility.yul\":1059:1065   */\n  dup2\n    /* \"#utility.yul\":1048:1057   */\n  dup7\n    /* \"#utility.yul\":1044:1066   */\n  add\n    /* \"#utility.yul\":1034:1066   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1111   */\n  dup7\n    /* \"#utility.yul\":1097:1101   */\n  0x1f\n    /* \"#utility.yul\":1093:1095   */\n  dup4\n    /* \"#utility.yul\":1089:1102   */\n  add\n    /* \"#utility.yul\":1085:1112   */\n  slt\n    /* \"#utility.yul\":1075:1130   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1126:1127   */\n  0x00\n    /* \"#utility.yul\":1123:1124   */\n  dup1\n    /* \"#utility.yul\":1116:1128   */\n  revert\n    /* \"#utility.yul\":1075:1130   */\ntag_27:\n    /* \"#utility.yul\":1155:1157   */\n  dup2\n    /* \"#utility.yul\":1149:1158   */\n  mload\n    /* \"#utility.yul\":1177:1179   */\n  dup2\n    /* \"#utility.yul\":1173:1175   */\n  dup2\n    /* \"#utility.yul\":1170:1180   */\n  gt\n    /* \"#utility.yul\":1167:1203   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1183:1201   */\n  tag_29\n  tag_12\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1258:1260   */\n  0x40\n    /* \"#utility.yul\":1252:1261   */\n  mload\n    /* \"#utility.yul\":1226:1228   */\n  0x1f\n    /* \"#utility.yul\":1312:1325   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1308:1330   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1332:1334   */\n  0x3f\n    /* \"#utility.yul\":1304:1335   */\n  add\n    /* \"#utility.yul\":1300:1340   */\n  and\n    /* \"#utility.yul\":1288:1341   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1356:1374   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1376:1398   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1353:1399   */\n  or\n    /* \"#utility.yul\":1350:1422   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1402:1420   */\n  tag_31\n  tag_12\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1442:1452   */\n  dup2\n    /* \"#utility.yul\":1438:1440   */\n  0x40\n    /* \"#utility.yul\":1431:1453   */\n  mstore\n    /* \"#utility.yul\":1477:1479   */\n  dup3\n    /* \"#utility.yul\":1469:1475   */\n  dup2\n    /* \"#utility.yul\":1462:1480   */\n  mstore\n    /* \"#utility.yul\":1517:1524   */\n  dup10\n    /* \"#utility.yul\":1512:1514   */\n  0x20\n    /* \"#utility.yul\":1507:1509   */\n  dup5\n    /* \"#utility.yul\":1503:1505   */\n  dup8\n    /* \"#utility.yul\":1499:1510   */\n  add\n    /* \"#utility.yul\":1495:1515   */\n  add\n    /* \"#utility.yul\":1492:1525   */\n  gt\n    /* \"#utility.yul\":1489:1542   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1535:1536   */\n  dup1\n    /* \"#utility.yul\":1528:1540   */\n  revert\n    /* \"#utility.yul\":1489:1542   */\ntag_32:\n    /* \"#utility.yul\":1551:1619   */\n  tag_33\n    /* \"#utility.yul\":1616:1618   */\n  dup4\n    /* \"#utility.yul\":1611:1613   */\n  0x20\n    /* \"#utility.yul\":1603:1609   */\n  dup4\n    /* \"#utility.yul\":1599:1614   */\n  add\n    /* \"#utility.yul\":1594:1596   */\n  0x20\n    /* \"#utility.yul\":1590:1592   */\n  dup9\n    /* \"#utility.yul\":1586:1597   */\n  add\n    /* \"#utility.yul\":1551:1619   */\n  tag_13\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1638:1644   */\n  dup1\n    /* \"#utility.yul\":1628:1644   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":583:1650   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1655:2051   */\ntag_8:\n    /* \"#utility.yul\":1804:1806   */\n  0x20\n    /* \"#utility.yul\":1793:1802   */\n  dup2\n    /* \"#utility.yul\":1786:1807   */\n  mstore\n    /* \"#utility.yul\":1767:1771   */\n  0x00\n    /* \"#utility.yul\":1836:1842   */\n  dup3\n    /* \"#utility.yul\":1830:1843   */\n  mload\n    /* \"#utility.yul\":1879:1885   */\n  dup1\n    /* \"#utility.yul\":1874:1876   */\n  0x20\n    /* \"#utility.yul\":1863:1872   */\n  dup5\n    /* \"#utility.yul\":1859:1877   */\n  add\n    /* \"#utility.yul\":1852:1886   */\n  mstore\n    /* \"#utility.yul\":1895:1974   */\n  tag_35\n    /* \"#utility.yul\":1967:1973   */\n  dup2\n    /* \"#utility.yul\":1962:1964   */\n  0x40\n    /* \"#utility.yul\":1951:1960   */\n  dup6\n    /* \"#utility.yul\":1947:1965   */\n  add\n    /* \"#utility.yul\":1942:1944   */\n  0x20\n    /* \"#utility.yul\":1934:1940   */\n  dup8\n    /* \"#utility.yul\":1930:1945   */\n  add\n    /* \"#utility.yul\":1895:1974   */\n  tag_13\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":2035:2037   */\n  0x1f\n    /* \"#utility.yul\":2014:2029   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":2010:2039   */\n  and\n    /* \"#utility.yul\":1995:2040   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":2042:2044   */\n  0x40\n    /* \"#utility.yul\":1991:2045   */\n  add\n  swap3\n    /* \"#utility.yul\":1655:2051   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_14:\n    /* \"contracts/core/MADeliveryStrategy.sol\":773:10348  contract MADeliveryStrategy is IMargariAlloStrategy, IMVersion, MBaseStrategy { ... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x06cc276dcbd36fa8a4ad61c60dbe1da479204cba66678327f4ef951465234202\")\n  0x00\n  assignImmutable(\"0x6012fd21c5b23786b63b1af9ec5ac656f1ee22fef68774e5dea3571e42d00d20\")\n  0x00\n  assignImmutable(\"0x7d7050a99011d63e16791c8480547b004e718c753821a2fe030c671d08e65086\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/core/MADeliveryStrategy.sol\":773:10348  contract MADeliveryStrategy is IMargariAlloStrategy, IMVersion, MBaseStrategy { ... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4ab4ba42\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xdf868ed3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xdf868ed3\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xeb11af93\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xedd146cc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xef2920fc\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf5b0dfb7\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x4ab4ba42\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4d31d087\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb2b878d0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdcc60128\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x2bbe0cae\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x2bbe0cae\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x38fff2d0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x41f44125\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42fda9c7\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x0a6f0ee9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0d8e6e2c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x15cc481e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17d7de7c\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/core/MBaseStrategy.sol\":10891:11224  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/core/MADeliveryStrategy.sol\":2050:2147  function getVersion() pure external returns (uint256 _version) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":950:951  3 */\n      0x03\n        /* \"contracts/core/MADeliveryStrategy.sol\":2050:2147  function getVersion() pure external returns (uint256 _version) {... */\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":4041:4066   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4029:4031   */\n      0x20\n        /* \"#utility.yul\":4014:4032   */\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":2050:2147  function getVersion() pure external returns (uint256 _version) {... */\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/core/MBaseStrategy.sol\":6873:6961  function getAllo() external view override returns (IAllo) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":6949:6953  allo */\n      immutable(\"0x7d7050a99011d63e16791c8480547b004e718c753821a2fe030c671d08e65086\")\n        /* \"contracts/core/MBaseStrategy.sol\":6873:6961  function getAllo() external view override returns (IAllo) {... */\n    tag_33:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4255:4287   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4237:4288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4225:4227   */\n      0x20\n        /* \"#utility.yul\":4210:4228   */\n      add\n        /* \"contracts/core/MBaseStrategy.sol\":6873:6961  function getAllo() external view override returns (IAllo) {... */\n      tag_30\n        /* \"#utility.yul\":4077:4294   */\n      jump\n        /* \"contracts/core/MADeliveryStrategy.sol\":1948:2042  function getName() pure external returns (string memory _name) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":2029:2033  name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x52455345525645445f4d5f415f44454c49564552595f53545241544547590000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":1948:2042  function getName() pure external returns (string memory _name) {... */\n      swap1\n      mload\n      tag_30\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":2029:2033  name */\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":1948:2042  function getName() pure external returns (string memory _name) {... */\n      tag_41\n      jump\t// in\n        /* \"contracts/core/MBaseStrategy.sol\":9586:9940  function registerRecipient(bytes memory _data, address _sender)... */\n    tag_6:\n      tag_33\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"contracts/core/MBaseStrategy.sol\":7047:7141  function getPoolId() external view override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":7127:7133  poolId */\n      sload(0x01)\n        /* \"contracts/core/MBaseStrategy.sol\":7047:7141  function getPoolId() external view override returns (uint256) {... */\n      jump(tag_28)\n        /* \"contracts/core/MADeliveryStrategy.sol\":2565:2726  function addAllocator(address _allocator ) external returns (bool _added) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":2650:2687  isValidAllocatorByAddress[_allocator] */\n      and\n        /* \"contracts/core/MADeliveryStrategy.sol\":2626:2637  bool _added */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":2650:2687  isValidAllocatorByAddress[_allocator] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":2650:2675  isValidAllocatorByAddress */\n      0x08\n        /* \"contracts/core/MADeliveryStrategy.sol\":2650:2687  isValidAllocatorByAddress[_allocator] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/core/MADeliveryStrategy.sol\":2650:2694  isValidAllocatorByAddress[_allocator] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/core/MADeliveryStrategy.sol\":2690:2694  true */\n      0x01\n        /* \"contracts/core/MADeliveryStrategy.sol\":2650:2694  isValidAllocatorByAddress[_allocator] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":2690:2694  true */\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":2565:2726  function addAllocator(address _allocator ) external returns (bool _added) {... */\n      jump\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":6040:6054   */\n      swap1\n      iszero\n        /* \"#utility.yul\":6033:6055   */\n      iszero\n        /* \"#utility.yul\":6015:6056   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6003:6005   */\n      0x20\n        /* \"#utility.yul\":5988:6006   */\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":2565:2726  function addAllocator(address _allocator ) external returns (bool _added) {... */\n      tag_30\n        /* \"#utility.yul\":5875:6062   */\n      jump\n        /* \"contracts/core/MBaseStrategy.sol\":7235:7337  function getStrategyId() external view override returns (bytes32) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":7319:7329  strategyId */\n      immutable(\"0x6012fd21c5b23786b63b1af9ec5ac656f1ee22fef68774e5dea3571e42d00d20\")\n        /* \"contracts/core/MBaseStrategy.sol\":7235:7337  function getStrategyId() external view override returns (bytes32) {... */\n      jump(tag_28)\n        /* \"contracts/core/MBaseStrategy.sol\":7432:7542  function getPoolAmount() external view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":7524:7534  poolAmount */\n      sload(0x02)\n        /* \"contracts/core/MBaseStrategy.sol\":7432:7542  function getPoolAmount() external view virtual override returns (uint256) {... */\n      jump(tag_28)\n        /* \"contracts/core/MBaseStrategy.sol\":12622:12769  function isValidAllocator(address _allocator) external view virtual override returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_53\n      tag_70\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"contracts/core/MBaseStrategy.sol\":11568:12292  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n        /* \"contracts/core/MADeliveryStrategy.sol\":2155:2265  function getProjects() view external returns (address [] memory _projects) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n        /* \"contracts/core/MBaseStrategy.sol\":7678:7781  function isPoolActive() external view override returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":7734:7738  bool */\n      0x00\n        /* \"contracts/core/MBaseStrategy.sol\":14765:14775  poolActive */\n      sload\n      0xff\n      and\n        /* \"contracts/core/MBaseStrategy.sol\":7678:7781  function isPoolActive() external view override returns (bool) {... */\n      jump(tag_53)\n        /* \"contracts/core/MBaseStrategy.sol\":7942:8090  function getRecipientStatus(address _recipientId) external view virtual returns (Status) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n        /* \"contracts/core/MADeliveryStrategy.sol\":1839:1940  function initialize(uint256 _poolId, bytes memory _data) external{... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_23\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":1915:1921  poolId */\n      0x01\n        /* \"contracts/core/MADeliveryStrategy.sol\":1915:1931  poolId = _poolId */\n      sstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":1839:1940  function initialize(uint256 _poolId, bytes memory _data) external{... */\n      jump\n        /* \"contracts/core/MBaseStrategy.sol\":10266:10490  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n    tag_17:\n      tag_23\n      tag_101\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"contracts/core/MBaseStrategy.sol\":8961:9162  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_23\n      tag_105\n      calldatasize\n      0x04\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n        /* \"contracts/core/MBaseStrategy.sol\":10891:11224  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n    tag_26:\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5725  _checkOnlyAllo() */\n      tag_109\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5723  _checkOnlyAllo */\n      tag_110\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5725  _checkOnlyAllo() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6633  _checkOnlyInitialized() */\n      tag_112\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6631  _checkOnlyInitialized */\n      tag_113\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6633  _checkOnlyInitialized() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/core/MBaseStrategy.sol\":11116:11158  _distribute(_recipientIds, _data, _sender) */\n      tag_117\n        /* \"contracts/core/MBaseStrategy.sol\":11128:11141  _recipientIds */\n      dup4\n        /* \"contracts/core/MBaseStrategy.sol\":11143:11148  _data */\n      dup4\n        /* \"contracts/core/MBaseStrategy.sol\":11150:11157  _sender */\n      dup4\n        /* \"contracts/core/MBaseStrategy.sol\":11116:11127  _distribute */\n      tag_118\n        /* \"contracts/core/MBaseStrategy.sol\":11116:11158  _distribute(_recipientIds, _data, _sender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/core/MBaseStrategy.sol\":10891:11224  function distribute(address[] memory _recipientIds, bytes memory _data, address _sender)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/MBaseStrategy.sol\":9586:9940  function registerRecipient(bytes memory _data, address _sender)... */\n    tag_45:\n        /* \"contracts/core/MBaseStrategy.sol\":9746:9765  address recipientId */\n      0x00\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5725  _checkOnlyAllo() */\n      tag_125\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5723  _checkOnlyAllo */\n      tag_110\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5725  _checkOnlyAllo() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6633  _checkOnlyInitialized() */\n      tag_127\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6631  _checkOnlyInitialized */\n      tag_113\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6633  _checkOnlyInitialized() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/core/MBaseStrategy.sol\":9848:9882  _registerRecipient(_data, _sender) */\n      tag_131\n        /* \"contracts/core/MBaseStrategy.sol\":9867:9872  _data */\n      dup4\n        /* \"contracts/core/MBaseStrategy.sol\":9874:9881  _sender */\n      dup4\n        /* \"contracts/core/MBaseStrategy.sol\":9848:9866  _registerRecipient */\n      tag_132\n        /* \"contracts/core/MBaseStrategy.sol\":9848:9882  _registerRecipient(_data, _sender) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/core/MBaseStrategy.sol\":9834:9882  recipientId = _registerRecipient(_data, _sender) */\n      swap1\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":9893:9932  _afterRegisterRecipient(_data, _sender) */\n    tag_133:\n        /* \"contracts/core/MBaseStrategy.sol\":9586:9940  function registerRecipient(bytes memory _data, address _sender)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/MBaseStrategy.sol\":12622:12769  function isValidAllocator(address _allocator) external view virtual override returns (bool) {... */\n    tag_71:\n        /* \"contracts/core/MBaseStrategy.sol\":12708:12712  bool */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":2544:2548  true */\n      0x01\n        /* \"contracts/core/MBaseStrategy.sol\":12732:12761  _isValidAllocator(_allocator) */\n      tag_133\n        /* \"contracts/core/MADeliveryStrategy.sol\":2442:2557  function _isValidAllocator(address _allocator) internal pure override returns (bool){... */\n      jump\n        /* \"contracts/core/MBaseStrategy.sol\":11568:12292  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n    tag_77:\n        /* \"contracts/core/MBaseStrategy.sol\":11793:11813  _recipientIds.length */\n      dup2\n      mload\n        /* \"contracts/core/MBaseStrategy.sol\":11951:11963  _data.length */\n      dup2\n      mload\n        /* \"contracts/core/MBaseStrategy.sol\":11727:11749  PayoutSummary[] memory */\n      0x60\n      swap2\n        /* \"contracts/core/MBaseStrategy.sol\":11793:11813  _recipientIds.length */\n      swap1\n        /* \"contracts/core/MBaseStrategy.sol\":11932:11963  recipientLength != _data.length */\n      dup2\n      eq\n        /* \"contracts/core/MBaseStrategy.sol\":11928:11989  if (recipientLength != _data.length) revert(\"ARRAY MISMATCH\") */\n      tag_143\n      jumpi\n        /* \"contracts/core/MBaseStrategy.sol\":11965:11989  revert(\"ARRAY MISMATCH\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"contracts/core/MBaseStrategy.sol\":11965:11989  revert(\"ARRAY MISMATCH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10246:10267   */\n      mstore\n        /* \"#utility.yul\":10303:10305   */\n      0x0e\n        /* \"#utility.yul\":10283:10301   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10276:10306   */\n      mstore\n      shl(0x93, 0x082a4a482b2409a92a69a82a8869)\n        /* \"#utility.yul\":10322:10340   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10315:10359   */\n      mstore\n        /* \"#utility.yul\":10376:10394   */\n      0x64\n      add\n        /* \"contracts/core/MBaseStrategy.sol\":11965:11989  revert(\"ARRAY MISMATCH\") */\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/core/MBaseStrategy.sol\":11928:11989  if (recipientLength != _data.length) revert(\"ARRAY MISMATCH\") */\n    tag_143:\n        /* \"contracts/core/MBaseStrategy.sol\":12002:12032  PayoutSummary[] memory payouts */\n      0x00\n        /* \"contracts/core/MBaseStrategy.sol\":12055:12070  recipientLength */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/core/MBaseStrategy.sol\":12035:12071  new PayoutSummary[](recipientLength) */\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup2\n      0x20\n      add\n    tag_150:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_150\n      jumpi\n      swap1\n      pop\n    tag_149:\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":12002:12071  PayoutSummary[] memory payouts = new PayoutSummary[](recipientLength) */\n      swap1\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":12087:12096  uint256 i */\n      0x00\n        /* \"contracts/core/MBaseStrategy.sol\":12082:12260  for (uint256 i; i < recipientLength;) {... */\n    tag_153:\n        /* \"contracts/core/MBaseStrategy.sol\":12102:12117  recipientLength */\n      dup3\n        /* \"contracts/core/MBaseStrategy.sol\":12098:12099  i */\n      dup2\n        /* \"contracts/core/MBaseStrategy.sol\":12098:12117  i < recipientLength */\n      lt\n        /* \"contracts/core/MBaseStrategy.sol\":12082:12260  for (uint256 i; i < recipientLength;) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"contracts/core/MBaseStrategy.sol\":12148:12186  _getPayout(_recipientIds[i], _data[i]) */\n      tag_156\n        /* \"contracts/core/MBaseStrategy.sol\":12159:12172  _recipientIds */\n      dup7\n        /* \"contracts/core/MBaseStrategy.sol\":12173:12174  i */\n      dup3\n        /* \"contracts/core/MBaseStrategy.sol\":12159:12175  _recipientIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/core/MBaseStrategy.sol\":12177:12182  _data */\n      dup7\n        /* \"contracts/core/MBaseStrategy.sol\":12183:12184  i */\n      dup4\n        /* \"contracts/core/MBaseStrategy.sol\":12177:12185  _data[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_161\n      jumpi\n      tag_161\n      tag_159\n      jump\t// in\n    tag_161:\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":9441:9585  PayoutSummary ({... */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      swap1\n      swap5\n      and\n      dup1\n      dup6\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":9535:9569  totalPaidByRecipient[_recipientId] */\n      dup2\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":9535:9555  totalPaidByRecipient */\n      0x0b\n        /* \"contracts/core/MADeliveryStrategy.sol\":9535:9569  totalPaidByRecipient[_recipientId] */\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/core/MADeliveryStrategy.sol\":9441:9585  PayoutSummary ({... */\n      swap1\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":9266:9595  function _getPayout(address _recipientId, bytes memory _data)... */\n      jump\n        /* \"contracts/core/MBaseStrategy.sol\":12148:12186  _getPayout(_recipientIds[i], _data[i]) */\n    tag_156:\n        /* \"contracts/core/MBaseStrategy.sol\":12135:12142  payouts */\n      dup3\n        /* \"contracts/core/MBaseStrategy.sol\":12143:12144  i */\n      dup3\n        /* \"contracts/core/MBaseStrategy.sol\":12135:12145  payouts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_164\n      tag_159\n      jump\t// in\n    tag_164:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/core/MBaseStrategy.sol\":12135:12186  payouts[i] = _getPayout(_recipientIds[i], _data[i]) */\n      mstore\n        /* \"contracts/core/MBaseStrategy.sol\":12230:12233  i++ */\n      0x01\n      add\n        /* \"contracts/core/MBaseStrategy.sol\":12082:12260  for (uint256 i; i < recipientLength;) {... */\n      jump(tag_153)\n    tag_154:\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":12277:12284  payouts */\n      swap5\n        /* \"contracts/core/MBaseStrategy.sol\":11568:12292  function getPayouts(address[] memory _recipientIds, bytes[] memory _data)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/MADeliveryStrategy.sol\":2155:2265  function getProjects() view external returns (address [] memory _projects) {... */\n    tag_82:\n        /* \"contracts/core/MADeliveryStrategy.sol\":2201:2228  address [] memory _projects */\n      0x60\n        /* \"contracts/core/MADeliveryStrategy.sol\":2248:2256  projects */\n      0x04\n        /* \"contracts/core/MADeliveryStrategy.sol\":2241:2256  return projects */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":2155:2265  function getProjects() view external returns (address [] memory _projects) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/core/MBaseStrategy.sol\":7942:8090  function getRecipientStatus(address _recipientId) external view virtual returns (Status) {... */\n    tag_92:\n        /* \"contracts/core/MBaseStrategy.sol\":8023:8029  Status */\n      0x00\n      dup1\n        /* \"contracts/core/MBaseStrategy.sol\":8049:8082  _getRecipientStatus(_recipientId) */\n      tag_133\n        /* \"contracts/core/MADeliveryStrategy.sol\":9759:9859  function _getRecipientStatus(address _recipientId) internal view override returns (Status){... */\n      jump\n        /* \"contracts/core/MBaseStrategy.sol\":10266:10490  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n    tag_102:\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5725  _checkOnlyAllo() */\n      tag_176\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5723  _checkOnlyAllo */\n      tag_110\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5725  _checkOnlyAllo() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6633  _checkOnlyInitialized() */\n      tag_178\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6631  _checkOnlyInitialized */\n      tag_113\n        /* \"contracts/core/MBaseStrategy.sol\":6610:6633  _checkOnlyInitialized() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/core/MBaseStrategy.sol\":10416:10441  _allocate(_data, _sender) */\n      tag_182\n        /* \"contracts/core/MBaseStrategy.sol\":10426:10431  _data */\n      dup3\n        /* \"contracts/core/MBaseStrategy.sol\":10433:10440  _sender */\n      dup3\n        /* \"contracts/core/MBaseStrategy.sol\":10416:10425  _allocate */\n      tag_183\n        /* \"contracts/core/MBaseStrategy.sol\":10416:10441  _allocate(_data, _sender) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/core/MBaseStrategy.sol\":10266:10490  function allocate(bytes memory _data, address _sender) external payable onlyAllo onlyInitialized {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/MBaseStrategy.sol\":8961:9162  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n    tag_107:\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5725  _checkOnlyAllo() */\n      tag_187\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5723  _checkOnlyAllo */\n      tag_110\n        /* \"contracts/core/MBaseStrategy.sol\":5709:5725  _checkOnlyAllo() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/core/MBaseStrategy.sol\":9103:9110  _amount */\n      dup1\n        /* \"contracts/core/MBaseStrategy.sol\":9089:9099  poolAmount */\n      0x02\n      0x00\n        /* \"contracts/core/MBaseStrategy.sol\":9089:9110  poolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":9121:9154  _afterIncreasePoolAmount(_amount) */\n      tag_193\n      swap1\n      pop\n        /* \"contracts/core/MBaseStrategy.sol\":9146:9153  _amount */\n      dup2\n        /* \"contracts/core/MBaseStrategy.sol\":9121:9154  _afterIncreasePoolAmount(_amount) */\n      dup2\n      jump\t// in\n    tag_193:\n        /* \"contracts/core/MBaseStrategy.sol\":8961:9162  function increasePoolAmount(uint256 _amount) external override onlyAllo {... */\n      pop\n      jump\t// out\n        /* \"contracts/core/MBaseStrategy.sol\":13051:13165  function _checkOnlyAllo() internal view {... */\n    tag_110:\n        /* \"contracts/core/MBaseStrategy.sol\":13106:13116  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MBaseStrategy.sol\":13128:13132  allo */\n      immutable(\"0x7d7050a99011d63e16791c8480547b004e718c753821a2fe030c671d08e65086\")\n        /* \"contracts/core/MBaseStrategy.sol\":13106:13133  msg.sender != address(allo) */\n      and\n      eq\n        /* \"contracts/core/MBaseStrategy.sol\":13102:13157  if (msg.sender != address(allo)) revert(\"UNAUTHORIZED\") */\n      tag_196\n      jumpi\n        /* \"contracts/core/MBaseStrategy.sol\":13135:13157  revert(\"UNAUTHORIZED\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11001:11003   */\n      0x20\n        /* \"contracts/core/MBaseStrategy.sol\":13135:13157  revert(\"UNAUTHORIZED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10983:11004   */\n      mstore\n        /* \"#utility.yul\":11040:11042   */\n      0x0c\n        /* \"#utility.yul\":11020:11038   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11013:11043   */\n      mstore\n      shl(0xa2, 0x15539055551213d492569151)\n        /* \"#utility.yul\":11059:11077   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11052:11094   */\n      mstore\n        /* \"#utility.yul\":11111:11129   */\n      0x64\n      add\n        /* \"contracts/core/MBaseStrategy.sol\":13135:13157  revert(\"UNAUTHORIZED\") */\n      tag_144\n        /* \"#utility.yul\":10799:11135   */\n      jump\n        /* \"contracts/core/MBaseStrategy.sol\":13102:13157  if (msg.sender != address(allo)) revert(\"UNAUTHORIZED\") */\n    tag_196:\n        /* \"contracts/core/MBaseStrategy.sol\":13051:13165  function _checkOnlyAllo() internal view {... */\n      jump\t// out\n        /* \"contracts/core/MBaseStrategy.sol\":14039:14148  function _checkOnlyInitialized() internal view {... */\n    tag_113:\n        /* \"contracts/core/MBaseStrategy.sol\":14101:14107  poolId */\n      sload(0x01)\n        /* \"contracts/core/MBaseStrategy.sol\":14111:14112  0 */\n      0x00\n        /* \"contracts/core/MBaseStrategy.sol\":14101:14112  poolId == 0 */\n      sub\n        /* \"contracts/core/MBaseStrategy.sol\":14097:14139  if (poolId == 0) revert(\"NOT_INITIALIZED\") */\n      tag_196\n      jumpi\n        /* \"contracts/core/MBaseStrategy.sol\":14114:14139  revert(\"NOT_INITIALIZED\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11342:11344   */\n      0x20\n        /* \"contracts/core/MBaseStrategy.sol\":14114:14139  revert(\"NOT_INITIALIZED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11324:11345   */\n      mstore\n        /* \"#utility.yul\":11381:11383   */\n      0x0f\n        /* \"#utility.yul\":11361:11379   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11354:11384   */\n      mstore\n      shl(0x8a, 0x1393d517d253925512505312569151)\n        /* \"#utility.yul\":11400:11418   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11393:11438   */\n      mstore\n        /* \"#utility.yul\":11455:11473   */\n      0x64\n      add\n        /* \"contracts/core/MBaseStrategy.sol\":14114:14139  revert(\"NOT_INITIALIZED\") */\n      tag_144\n        /* \"#utility.yul\":11140:11479   */\n      jump\n        /* \"contracts/core/MADeliveryStrategy.sol\":5224:6718  function _distribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal override {... */\n    tag_118:\n        /* \"contracts/core/MADeliveryStrategy.sol\":5357:5366  uint256 x */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":5353:6711  for(uint256 x = 0; x < _recipientIds.length; x++){... */\n    tag_205:\n        /* \"contracts/core/MADeliveryStrategy.sol\":5376:5389  _recipientIds */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":5376:5396  _recipientIds.length */\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":5372:5373  x */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":5372:5396  x < _recipientIds.length */\n      lt\n        /* \"contracts/core/MADeliveryStrategy.sol\":5353:6711  for(uint256 x = 0; x < _recipientIds.length; x++){... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/core/MADeliveryStrategy.sol\":5417:5440  address projectAddress_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":5443:5456  _recipientIds */\n      dup5\n        /* \"contracts/core/MADeliveryStrategy.sol\":5457:5458  x */\n      dup3\n        /* \"contracts/core/MADeliveryStrategy.sol\":5443:5459  _recipientIds[x] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_209\n      jumpi\n      tag_209\n      tag_159\n      jump\t// in\n    tag_209:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":5417:5459  address projectAddress_ = _recipientIds[x] */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":5474:5492  IMProject project_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":5505:5520  projectAddress_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":5474:5521  IMProject project_ = IMProject(projectAddress_) */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":5537:5563  Project memory descriptor_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":5566:5574  project_ */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":5566:5595  project_.getProjectDescriptor */\n      and\n      0x3ba94ed8\n        /* \"contracts/core/MADeliveryStrategy.sol\":5566:5597  project_.getProjectDescriptor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_212\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"contracts/core/MADeliveryStrategy.sol\":5537:5597  Project memory descriptor_ = project_.getProjectDescriptor() */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":5620:5689  onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId) */\n      tag_214\n        /* \"contracts/core/MADeliveryStrategy.sol\":5630:5637  _sender */\n      dup6\n        /* \"contracts/core/MADeliveryStrategy.sol\":5639:5650  descriptor_ */\n      dup3\n        /* \"contracts/core/MADeliveryStrategy.sol\":5639:5661  descriptor_.alloPoolId */\n      0x40\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":5663:5674  descriptor_ */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":5663:5688  descriptor_.alloProfileId */\n      0x60\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":5620:5629  onlyAdmin */\n      tag_215\n        /* \"contracts/core/MADeliveryStrategy.sol\":5620:5689  onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/core/MADeliveryStrategy.sol\":5612:5723  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \"recipient <> sender mis-match\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14978:14980   */\n      0x20\n        /* \"contracts/core/MADeliveryStrategy.sol\":5612:5723  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \"recipient <> sender mis-match\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14960:14981   */\n      mstore\n        /* \"#utility.yul\":15017:15019   */\n      0x1d\n        /* \"#utility.yul\":14997:15015   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14990:15020   */\n      mstore\n        /* \"#utility.yul\":15056:15087   */\n      0x726563697069656e74203c3e2073656e646572206d69732d6d61746368000000\n        /* \"#utility.yul\":15036:15054   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15029:15088   */\n      mstore\n        /* \"#utility.yul\":15105:15123   */\n      0x64\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":5612:5723  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \"recipient <> sender mis-match\") */\n      tag_144\n        /* \"#utility.yul\":14776:15129   */\n      jump\n        /* \"contracts/core/MADeliveryStrategy.sol\":5612:5723  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \"recipient <> sender mis-match\") */\n    tag_216:\n        /* \"contracts/core/MADeliveryStrategy.sol\":5740:5753  IERC20 erc20_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":5763:5774  descriptor_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":5763:5789  descriptor_.payoutCurrency */\n      0x80\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":5740:5790  IERC20 erc20_ = IERC20(descriptor_.payoutCurrency) */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":5863:5874  descriptor_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":5863:5881  descriptor_.budget */\n      0xa0\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":5813:5841  remainingAllocationByProject */\n      0x06\n        /* \"contracts/core/MADeliveryStrategy.sol\":5813:5859  remainingAllocationByProject[_recipientIds[x]] */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":5842:5855  _recipientIds */\n      dup11\n        /* \"contracts/core/MADeliveryStrategy.sol\":5856:5857  x */\n      dup9\n        /* \"contracts/core/MADeliveryStrategy.sol\":5842:5858  _recipientIds[x] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_159\n      jump\t// in\n    tag_220:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":5813:5859  remainingAllocationByProject[_recipientIds[x]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/core/MADeliveryStrategy.sol\":5813:5881  remainingAllocationByProject[_recipientIds[x]] >= descriptor_.budget */\n      lt\n      iszero\n        /* \"contracts/core/MADeliveryStrategy.sol\":5805:5926  require(remainingAllocationByProject[_recipientIds[x]] >= descriptor_.budget, \"budget <> remaining allocation mis-match\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15336:15338   */\n      0x20\n        /* \"contracts/core/MADeliveryStrategy.sol\":5805:5926  require(remainingAllocationByProject[_recipientIds[x]] >= descriptor_.budget, \"budget <> remaining allocation mis-match\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15318:15339   */\n      mstore\n        /* \"#utility.yul\":15375:15377   */\n      0x28\n        /* \"#utility.yul\":15355:15373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15348:15378   */\n      mstore\n        /* \"#utility.yul\":15414:15448   */\n      0x627564676574203c3e2072656d61696e696e6720616c6c6f636174696f6e206d\n        /* \"#utility.yul\":15394:15412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15387:15449   */\n      mstore\n      shl(0xc3, 0x0d2e65adac2e8c6d)\n        /* \"#utility.yul\":15465:15483   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15458:15496   */\n      mstore\n        /* \"#utility.yul\":15513:15532   */\n      0x84\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":5805:5926  require(remainingAllocationByProject[_recipientIds[x]] >= descriptor_.budget, \"budget <> remaining allocation mis-match\") */\n      tag_144\n        /* \"#utility.yul\":15134:15538   */\n      jump\n        /* \"contracts/core/MADeliveryStrategy.sol\":5805:5926  require(remainingAllocationByProject[_recipientIds[x]] >= descriptor_.budget, \"budget <> remaining allocation mis-match\") */\n    tag_221:\n        /* \"contracts/core/MADeliveryStrategy.sol\":5993:6004  descriptor_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":5993:6011  descriptor_.budget */\n      0xa0\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":5943:5971  remainingAllocationByProject */\n      0x06\n        /* \"contracts/core/MADeliveryStrategy.sol\":5943:5989  remainingAllocationByProject[_recipientIds[x]] */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":5972:5985  _recipientIds */\n      dup11\n        /* \"contracts/core/MADeliveryStrategy.sol\":5986:5987  x */\n      dup9\n        /* \"contracts/core/MADeliveryStrategy.sol\":5972:5988  _recipientIds[x] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_159\n      jump\t// in\n    tag_225:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":5943:5989  remainingAllocationByProject[_recipientIds[x]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":5943:6011  remainingAllocationByProject[_recipientIds[x]] -= descriptor_.budget */\n      dup3\n      dup3\n      sload\n      tag_226\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      not(0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6031:6056  address(erc20_) == NATIVE */\n      dup3\n      and\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":6028:6402  if(address(erc20_) == NATIVE){... */\n      tag_228\n      jumpi\n        /* \"contracts/core/MADeliveryStrategy.sol\":6100:6111  descriptor_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":6100:6118  descriptor_.budget */\n      0xa0\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":6084:6088  self */\n      immutable(\"0x06cc276dcbd36fa8a4ad61c60dbe1da479204cba66678327f4ef951465234202\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6084:6096  self.balance */\n      and\n      balance\n        /* \"contracts/core/MADeliveryStrategy.sol\":6084:6118  self.balance >= descriptor_.budget */\n      lt\n      iszero\n        /* \"contracts/core/MADeliveryStrategy.sol\":6076:6163  require(self.balance >= descriptor_.budget, \"insufficient native token funds in pool \") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15878:15880   */\n      0x20\n        /* \"contracts/core/MADeliveryStrategy.sol\":6076:6163  require(self.balance >= descriptor_.budget, \"insufficient native token funds in pool \") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15860:15881   */\n      mstore\n        /* \"#utility.yul\":15917:15919   */\n      0x28\n        /* \"#utility.yul\":15897:15915   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15890:15920   */\n      mstore\n        /* \"#utility.yul\":15956:15990   */\n      0x696e73756666696369656e74206e617469766520746f6b656e2066756e647320\n        /* \"#utility.yul\":15936:15954   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15929:15991   */\n      mstore\n      shl(0xc5, 0x034b7103837b7b61)\n        /* \"#utility.yul\":16007:16025   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16000:16038   */\n      mstore\n        /* \"#utility.yul\":16055:16074   */\n      0x84\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":6076:6163  require(self.balance >= descriptor_.budget, \"insufficient native token funds in pool \") */\n      tag_144\n        /* \"#utility.yul\":15676:16080   */\n      jump\n        /* \"contracts/core/MADeliveryStrategy.sol\":6076:6163  require(self.balance >= descriptor_.budget, \"insufficient native token funds in pool \") */\n    tag_229:\n        /* \"contracts/core/MADeliveryStrategy.sol\":6028:6402  if(address(erc20_) == NATIVE){... */\n      jump(tag_232)\n    tag_228:\n        /* \"contracts/core/MADeliveryStrategy.sol\":6251:6269  descriptor_.budget */\n      0xa0\n      dup3\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":6225:6247  erc20_.balanceOf(self) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6242:6246  self */\n      immutable(\"0x06cc276dcbd36fa8a4ad61c60dbe1da479204cba66678327f4ef951465234202\")\n        /* \"#utility.yul\":4255:4287   */\n      dup2\n      and\n        /* \"contracts/core/MADeliveryStrategy.sol\":6225:6247  erc20_.balanceOf(self) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4237:4288   */\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":6225:6241  erc20_.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4210:4228   */\n      0x24\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":6225:6247  erc20_.balanceOf(self) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"contracts/core/MADeliveryStrategy.sol\":6225:6269  erc20_.balanceOf(self) >= descriptor_.budget */\n      lt\n      iszero\n        /* \"contracts/core/MADeliveryStrategy.sol\":6217:6300  require(erc20_.balanceOf(self) >= descriptor_.budget, \"insufficient funds in pool\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16476:16478   */\n      0x20\n        /* \"contracts/core/MADeliveryStrategy.sol\":6217:6300  require(erc20_.balanceOf(self) >= descriptor_.budget, \"insufficient funds in pool\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16458:16479   */\n      mstore\n        /* \"#utility.yul\":16515:16517   */\n      0x1a\n        /* \"#utility.yul\":16495:16513   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16488:16518   */\n      mstore\n        /* \"#utility.yul\":16554:16582   */\n      0x696e73756666696369656e742066756e647320696e20706f6f6c000000000000\n        /* \"#utility.yul\":16534:16552   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16527:16583   */\n      mstore\n        /* \"#utility.yul\":16600:16618   */\n      0x64\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":6217:6300  require(erc20_.balanceOf(self) >= descriptor_.budget, \"insufficient funds in pool\") */\n      tag_144\n        /* \"#utility.yul\":16274:16624   */\n      jump\n        /* \"contracts/core/MADeliveryStrategy.sol\":6217:6300  require(erc20_.balanceOf(self) >= descriptor_.budget, \"insufficient funds in pool\") */\n    tag_238:\n        /* \"contracts/core/MADeliveryStrategy.sol\":6334:6342  register */\n      sload(0x03)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6354:6364  MARGARI_CA */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      shl(0x58, 0x52455345525645445f4d4152474152495f434f5245)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":6334:6365  register.getAddress(MARGARI_CA) */\n      swap1\n      mload\n      shl(0xe0, 0xbf40fac1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6319:6333  erc20_.approve */\n      dup1\n      dup6\n      and\n      swap4\n      0x095ea7b3\n      swap4\n        /* \"contracts/core/MADeliveryStrategy.sol\":6334:6342  register */\n      swap2\n      and\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":6334:6353  register.getAddress */\n      0xbf40fac1\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":6334:6365  register.getAddress(MARGARI_CA) */\n      tag_241\n      swap2\n      0x04\n      add\n      tag_41\n      jump\t// in\n    tag_241:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"contracts/core/MADeliveryStrategy.sol\":6367:6385  descriptor_.budget */\n      0xa0\n      dup6\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":6319:6386  erc20_.approve(register.getAddress(MARGARI_CA), descriptor_.budget) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17077:17109   */\n      swap1\n      swap3\n      and\n        /* \"contracts/core/MADeliveryStrategy.sol\":6319:6386  erc20_.approve(register.getAddress(MARGARI_CA), descriptor_.budget) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":17059:17110   */\n      mstore\n        /* \"#utility.yul\":17126:17144   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17119:17153   */\n      mstore\n        /* \"#utility.yul\":17032:17050   */\n      0x44\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":6319:6386  erc20_.approve(register.getAddress(MARGARI_CA), descriptor_.budget) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":6028:6402  if(address(erc20_) == NATIVE){... */\n    tag_232:\n        /* \"contracts/core/MADeliveryStrategy.sol\":6418:6463  PaymentDirective [] memory paymentDirectives_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":6466:6474  project_ */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6466:6495  project_.getPaymentDirectives */\n      and\n      0x1fae35d4\n        /* \"contracts/core/MADeliveryStrategy.sol\":6466:6497  project_.getPaymentDirectives() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_254\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"contracts/core/MADeliveryStrategy.sol\":6418:6497  PaymentDirective [] memory paymentDirectives_ = project_.getPaymentDirectives() */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":6514:6540  uint256 [] memory sendIds_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":6542:6560  uint256 totalPaid_ */\n      dup1\n        /* \"contracts/core/MADeliveryStrategy.sol\":6564:6617  payoutDirectives(paymentDirectives_, projectAddress_) */\n      tag_256\n        /* \"contracts/core/MADeliveryStrategy.sol\":6581:6599  paymentDirectives_ */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":6601:6616  projectAddress_ */\n      dup9\n        /* \"contracts/core/MADeliveryStrategy.sol\":6564:6580  payoutDirectives */\n      tag_257\n        /* \"contracts/core/MADeliveryStrategy.sol\":6564:6617  payoutDirectives(paymentDirectives_, projectAddress_) */\n      jump\t// in\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6646:6683  totalPaidByRecipient[projectAddress_] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":6646:6666  totalPaidByRecipient */\n      0x0b\n        /* \"contracts/core/MADeliveryStrategy.sol\":6646:6683  totalPaidByRecipient[projectAddress_] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/core/MADeliveryStrategy.sol\":6646:6697  totalPaidByRecipient[projectAddress_] += totalPaid_ */\n      dup1\n      sload\n        /* \"contracts/core/MADeliveryStrategy.sol\":6513:6617  (uint256 [] memory sendIds_, uint256 totalPaid_) = payoutDirectives(paymentDirectives_, projectAddress_) */\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"contracts/core/MADeliveryStrategy.sol\":6646:6697  totalPaidByRecipient[projectAddress_] += totalPaid_ */\n      tag_258\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":6513:6617  (uint256 [] memory sendIds_, uint256 totalPaid_) = payoutDirectives(paymentDirectives_, projectAddress_) */\n      dup5\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":6646:6697  totalPaidByRecipient[projectAddress_] += totalPaid_ */\n      tag_192\n      jump\t// in\n    tag_258:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":5398:5401  x++ */\n      0x01\n      swap1\n      swap8\n      add\n      swap7\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":5353:6711  for(uint256 x = 0; x < _recipientIds.length; x++){... */\n      tag_205\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_206:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":5224:6718  function _distribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/MADeliveryStrategy.sol\":3335:3822  function _registerRecipient(bytes memory _data, address _sender) internal override returns (address){... */\n    tag_132:\n        /* \"contracts/core/MADeliveryStrategy.sol\":3427:3434  address */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":3446:3469  address projectAddress_ */\n      dup1\n        /* \"contracts/core/MADeliveryStrategy.sol\":3483:3488  _data */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":3472:3500  abi.decode(_data, (address)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_262:\n        /* \"contracts/core/MADeliveryStrategy.sol\":3446:3500  address projectAddress_ = abi.decode(_data, (address)) */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":3512:3530  IMProject project_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":3543:3558  projectAddress_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":3512:3559  IMProject project_ = IMProject(projectAddress_) */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":3570:3596  Project memory descriptor_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":3599:3607  project_ */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":3599:3628  project_.getProjectDescriptor */\n      and\n      0x3ba94ed8\n        /* \"contracts/core/MADeliveryStrategy.sol\":3599:3630  project_.getProjectDescriptor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_266\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_213\n      jump\t// in\n    tag_266:\n        /* \"contracts/core/MADeliveryStrategy.sol\":3570:3630  Project memory descriptor_ = project_.getProjectDescriptor() */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":3650:3719  onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId) */\n      tag_267\n        /* \"contracts/core/MADeliveryStrategy.sol\":3660:3667  _sender */\n      dup6\n        /* \"contracts/core/MADeliveryStrategy.sol\":3669:3680  descriptor_ */\n      dup3\n        /* \"contracts/core/MADeliveryStrategy.sol\":3669:3691  descriptor_.alloPoolId */\n      0x40\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":3693:3704  descriptor_ */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":3693:3718  descriptor_.alloProfileId */\n      0x60\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":3650:3659  onlyAdmin */\n      tag_215\n        /* \"contracts/core/MADeliveryStrategy.sol\":3650:3719  onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/core/MADeliveryStrategy.sol\":3642:3740  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20974:20976   */\n      0x20\n        /* \"contracts/core/MADeliveryStrategy.sol\":3642:3740  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20956:20977   */\n      mstore\n        /* \"#utility.yul\":21013:21015   */\n      0x10\n        /* \"#utility.yul\":20993:21011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20986:21016   */\n      mstore\n      shl(0x85, 0x01037b9339030b236b4b71037b7363c9)\n        /* \"#utility.yul\":21032:21050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21025:21071   */\n      mstore\n        /* \"#utility.yul\":21088:21106   */\n      0x64\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":3642:3740  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \") */\n      tag_144\n        /* \"#utility.yul\":20772:21112   */\n      jump\n        /* \"contracts/core/MADeliveryStrategy.sol\":3642:3740  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \") */\n    tag_268:\n      pop\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":3751:3759  projects */\n      0x04\n        /* \"contracts/core/MADeliveryStrategy.sol\":3751:3781  projects.push(projectAddress_) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      swap1\n      swap2\n      mstore\n      0x8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      or\n      swap1\n      sstore\n      swap4\n        /* \"contracts/core/MADeliveryStrategy.sol\":3335:3822  function _registerRecipient(bytes memory _data, address _sender) internal override returns (address){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/MADeliveryStrategy.sol\":4084:4735  function _allocate(bytes memory _data, address _sender) internal override{... */\n    tag_183:\n        /* \"contracts/core/MADeliveryStrategy.sol\":4178:4214  ProjectAllocation memory allocation_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":4228:4233  _data */\n      dup3\n        /* \"contracts/core/MADeliveryStrategy.sol\":4217:4255  abi.decode(_data, (ProjectAllocation)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_280\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"contracts/core/MADeliveryStrategy.sol\":4178:4255  ProjectAllocation memory allocation_ = abi.decode(_data, (ProjectAllocation)) */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":4266:4284  IMProject project_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":4297:4308  allocation_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":4297:4316  allocation_.project */\n      0x00\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":4266:4317  IMProject project_ = IMProject(allocation_.project) */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":4328:4354  Project memory descriptor_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":4357:4365  project_ */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":4357:4386  project_.getProjectDescriptor */\n      and\n      0x3ba94ed8\n        /* \"contracts/core/MADeliveryStrategy.sol\":4357:4388  project_.getProjectDescriptor() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_284\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_213\n      jump\t// in\n    tag_284:\n        /* \"contracts/core/MADeliveryStrategy.sol\":4328:4388  Project memory descriptor_ = project_.getProjectDescriptor() */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":4409:4478  onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId) */\n      tag_285\n        /* \"contracts/core/MADeliveryStrategy.sol\":4419:4426  _sender */\n      dup5\n        /* \"contracts/core/MADeliveryStrategy.sol\":4428:4439  descriptor_ */\n      dup3\n        /* \"contracts/core/MADeliveryStrategy.sol\":4428:4450  descriptor_.alloPoolId */\n      0x40\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":4452:4463  descriptor_ */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":4452:4477  descriptor_.alloProfileId */\n      0x60\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":4409:4418  onlyAdmin */\n      tag_215\n        /* \"contracts/core/MADeliveryStrategy.sol\":4409:4478  onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/core/MADeliveryStrategy.sol\":4401:4499  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20974:20976   */\n      0x20\n        /* \"contracts/core/MADeliveryStrategy.sol\":4401:4499  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20956:20977   */\n      mstore\n        /* \"#utility.yul\":21013:21015   */\n      0x10\n        /* \"#utility.yul\":20993:21011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20986:21016   */\n      mstore\n      shl(0x85, 0x01037b9339030b236b4b71037b7363c9)\n        /* \"#utility.yul\":21032:21050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21025:21071   */\n      mstore\n        /* \"#utility.yul\":21088:21106   */\n      0x64\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":4401:4499  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \") */\n      tag_144\n        /* \"#utility.yul\":20772:21112   */\n      jump\n        /* \"contracts/core/MADeliveryStrategy.sol\":4401:4499  require(onlyAdmin(_sender, descriptor_.alloPoolId, descriptor_.alloProfileId), \" org admin only \") */\n    tag_286:\n        /* \"contracts/core/MADeliveryStrategy.sol\":4553:4578  allocation_.newAllocation */\n      0x20\n      dup1\n      dup5\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":4530:4549  allocation_.project */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":4510:4550  allocationByProject[allocation_.project] */\n      swap1\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":4510:4529  allocationByProject */\n      0x05\n        /* \"contracts/core/MADeliveryStrategy.sol\":4510:4550  allocationByProject[allocation_.project] */\n      dup1\n      dup6\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/core/MADeliveryStrategy.sol\":4510:4578  allocationByProject[allocation_.project] = allocation_.newAllocation */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":4707:4726  allocation_.project */\n      dup8\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":4685:4727  totalPaidoutByProject[allocation_.project] */\n      dup4\n      and\n      dup3\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":4685:4706  totalPaidoutByProject */\n      0x07\n        /* \"contracts/core/MADeliveryStrategy.sol\":4685:4727  totalPaidoutByProject[allocation_.project] */\n      dup6\n      mstore\n      dup4\n      dup3\n      keccak256\n      sload\n        /* \"contracts/core/MADeliveryStrategy.sol\":4662:4681  allocation_.project */\n      dup9\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":4642:4682  allocationByProject[allocation_.project] */\n      swap1\n      swap4\n      and\n      dup3\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"contracts/core/MADeliveryStrategy.sol\":4642:4727  allocationByProject[allocation_.project] - totalPaidoutByProject[allocation_.project] */\n      tag_288\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":4685:4727  totalPaidoutByProject[allocation_.project] */\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":4642:4727  allocationByProject[allocation_.project] - totalPaidoutByProject[allocation_.project] */\n      tag_227\n      jump\t// in\n    tag_288:\n        /* \"contracts/core/MADeliveryStrategy.sol\":4619:4638  allocation_.project */\n      swap3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":4590:4639  remainingAllocationByProject[allocation_.project] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":4590:4618  remainingAllocationByProject */\n      0x06\n        /* \"contracts/core/MADeliveryStrategy.sol\":4590:4639  remainingAllocationByProject[allocation_.project] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/core/MADeliveryStrategy.sol\":4590:4727  remainingAllocationByProject[allocation_.project] = allocationByProject[allocation_.project] - totalPaidoutByProject[allocation_.project] */\n      swap3\n      swap1\n      swap3\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":4084:4735  function _allocate(bytes memory _data, address _sender) internal override{... */\n      jump\t// out\n        /* \"contracts/core/MADeliveryStrategy.sol\":9867:10343  function onlyAdmin(address _sender, uint256 _poolId, bytes32 _alloProfileId) view internal returns (bool _isAdmin) {... */\n    tag_215:\n        /* \"contracts/core/MADeliveryStrategy.sol\":10012:10020  register */\n      sload(0x03)\n        /* \"contracts/core/MADeliveryStrategy.sol\":10032:10039  ALLO_CA */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      shl(0x70, 0x52455345525645445f414c4c4f5f434f5245)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":10012:10040  register.getAddress(ALLO_CA) */\n      swap1\n      mload\n      shl(0xe0, 0xbf40fac1)\n      dup2\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":9967:9980  bool _isAdmin */\n      0x00\n      swap3\n      dup4\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":10012:10020  register */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":10012:10031  register.getAddress */\n      0xbf40fac1\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":10012:10040  register.getAddress(ALLO_CA) */\n      tag_293\n      swap2\n      0x04\n      add\n      tag_41\n      jump\t// in\n    tag_293:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_296:\n        /* \"contracts/core/MADeliveryStrategy.sol\":9993:10041  IAllo allo = IAllo(register.getAddress(ALLO_CA)) */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":10052:10074  IRegistry alloRegistry */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":10077:10081  allo */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":10077:10093  allo.getRegistry */\n      and\n      0x5ab1bd53\n        /* \"contracts/core/MADeliveryStrategy.sol\":10077:10095  allo.getRegistry() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_299\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_299:\n        /* \"contracts/core/MADeliveryStrategy.sol\":10110:10146  allo.isPoolManager(_poolId, _sender) */\n      mload(0x40)\n      shl(0xe0, 0x29e40d4b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":21993:22018   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22054:22086   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":22034:22052   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":22027:22087   */\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":10052:10095  IRegistry alloRegistry = allo.getRegistry() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":10110:10128  allo.isPoolManager */\n      swap1\n      dup4\n      and\n      swap1\n      0x29e40d4b\n      swap1\n        /* \"#utility.yul\":21966:21984   */\n      0x44\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":10110:10146  allo.isPoolManager(_poolId, _sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_304:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_305\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_305:\n        /* \"contracts/core/MADeliveryStrategy.sol\":10110:10198  allo.isPoolManager(_poolId, _sender) ... */\n      dup1\n      tag_310\n      jumpi\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":10164:10198  allo.isPoolAdmin(_poolId, _sender) */\n      mload(0x40)\n      shl(0xe1, 0x559ff5e3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":21993:22018   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22054:22086   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":22034:22052   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":22027:22087   */\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":10164:10180  allo.isPoolAdmin */\n      dup4\n      and\n      swap1\n      0xab3febc6\n      swap1\n        /* \"#utility.yul\":21966:21984   */\n      0x44\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":10164:10198  allo.isPoolAdmin(_poolId, _sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_309\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_309:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_310\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_310:\n        /* \"contracts/core/MADeliveryStrategy.sol\":10110:10270  allo.isPoolManager(_poolId, _sender) ... */\n      dup1\n      tag_316\n      jumpi\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":10216:10270  alloRegistry.isOwnerOfProfile(_alloProfileId, _sender) */\n      mload(0x40)\n      shl(0xe2, 0x0e6e1ae3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":21993:22018   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22054:22086   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":22034:22052   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":22027:22087   */\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":10216:10245  alloRegistry.isOwnerOfProfile */\n      dup3\n      and\n      swap1\n      0x39b86b8c\n      swap1\n        /* \"#utility.yul\":21966:21984   */\n      0x44\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":10216:10270  alloRegistry.isOwnerOfProfile(_alloProfileId, _sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_316\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_316:\n        /* \"contracts/core/MADeliveryStrategy.sol\":10107:10310  if(allo.isPoolManager(_poolId, _sender) ... */\n      iszero\n      tag_317\n      jumpi\n        /* \"contracts/core/MADeliveryStrategy.sol\":10293:10297  true */\n      0x01\n        /* \"contracts/core/MADeliveryStrategy.sol\":10286:10297  return true */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_292)\n        /* \"contracts/core/MADeliveryStrategy.sol\":10107:10310  if(allo.isPoolManager(_poolId, _sender) ... */\n    tag_317:\n        /* \"contracts/core/MADeliveryStrategy.sol\":10327:10332  false */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":10320:10332  return false */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":9867:10343  function onlyAdmin(address _sender, uint256 _poolId, bytes32 _alloProfileId) view internal returns (bool _isAdmin) {... */\n    tag_292:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/core/MADeliveryStrategy.sol\":6726:8746  function payoutDirectives(PaymentDirective [] memory paymentDirectives_, address _projectAddress) internal returns (uint256 [] memory _sendIds, uint256 _totalPaid){... */\n    tag_257:\n        /* \"contracts/core/MADeliveryStrategy.sol\":6929:6937  register */\n      sload(0x03)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6949:6959  MARGARI_CA */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      shl(0x58, 0x52455345525645445f4d4152474152495f434f5245)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":6929:6960  register.getAddress(MARGARI_CA) */\n      swap1\n      mload\n      shl(0xe0, 0xbf40fac1)\n      dup2\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":6842:6868  uint256 [] memory _sendIds */\n      0x60\n      swap3\n        /* \"contracts/core/MADeliveryStrategy.sol\":6870:6888  uint256 _totalPaid */\n      0x00\n      swap3\n      dup4\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":6929:6937  register */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":6929:6948  register.getAddress */\n      0xbf40fac1\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":6929:6960  register.getAddress(MARGARI_CA) */\n      tag_319\n      swap2\n      0x04\n      add\n      tag_41\n      jump\t// in\n    tag_319:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_321\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_321:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_322\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_322:\n        /* \"contracts/core/MADeliveryStrategy.sol\":7058:7083  paymentDirectives_.length */\n      dup6\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":6901:6961  IMargari margari = IMargari(register.getAddress(MARGARI_CA)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":7004:7019  _projectAddress */\n      dup5\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":7044:7084  new uint256[](paymentDirectives_.length) */\n      dup2\n      gt\n      iszero\n      tag_324\n      jumpi\n      tag_324\n      tag_148\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_325\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_325:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":7033:7084  _sendIds = new uint256[](paymentDirectives_.length) */\n      swap4\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":7099:7108  uint256 y */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":7095:8698  for(uint256 y = 0; y < paymentDirectives_.length; y++){... */\n    tag_326:\n        /* \"contracts/core/MADeliveryStrategy.sol\":7118:7136  paymentDirectives_ */\n      dup7\n        /* \"contracts/core/MADeliveryStrategy.sol\":7118:7143  paymentDirectives_.length */\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7114:7115  y */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":7114:7143  y < paymentDirectives_.length */\n      lt\n        /* \"contracts/core/MADeliveryStrategy.sol\":7095:8698  for(uint256 y = 0; y < paymentDirectives_.length; y++){... */\n      iszero\n      tag_327\n      jumpi\n        /* \"contracts/core/MADeliveryStrategy.sol\":7164:7205  PaymentDirective memory paymentDirective_ */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":7208:7226  paymentDirectives_ */\n      dup8\n        /* \"contracts/core/MADeliveryStrategy.sol\":7227:7228  y */\n      dup3\n        /* \"contracts/core/MADeliveryStrategy.sol\":7208:7229  paymentDirectives_[y] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_330\n      jumpi\n      tag_330\n      tag_159\n      jump\t// in\n    tag_330:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7164:7229  PaymentDirective memory paymentDirective_ = paymentDirectives_[y] */\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":7258:7275  paymentDirective_ */\n      dup1\n        /* \"contracts/core/MADeliveryStrategy.sol\":7258:7282  paymentDirective_.amount */\n      0xa0\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7244:7282  _totalPaid += paymentDirective_.amount */\n      dup6\n      tag_331\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_331:\n      swap5\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":7344:7352  register */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":7344:7363  register.getChainId */\n      and\n      0x3408e470\n        /* \"contracts/core/MADeliveryStrategy.sol\":7344:7365  register.getChainId() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_333:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_334\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_334:\n        /* \"contracts/core/MADeliveryStrategy.sol\":7301:7318  paymentDirective_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":7301:7330  paymentDirective_.contributor */\n      0x20\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7301:7340  paymentDirective_.contributor.homeChain */\n      0x20\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7301:7365  paymentDirective_.contributor.homeChain != register.getChainId() */\n      eq\n        /* \"contracts/core/MADeliveryStrategy.sol\":7298:8450  if(paymentDirective_.contributor.homeChain != register.getChainId()){... */\n      tag_335\n      jumpi\n        /* \"contracts/core/MBaseStrategy.sol\":4712:4754  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":7388:7421  paymentDirective_.erc20 == NATIVE */\n      and\n        /* \"contracts/core/MADeliveryStrategy.sol\":7388:7405  paymentDirective_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":7388:7411  paymentDirective_.erc20 */\n      0xc0\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":7388:7421  paymentDirective_.erc20 == NATIVE */\n      and\n      sub\n        /* \"contracts/core/MADeliveryStrategy.sol\":7385:8009  if(paymentDirective_.erc20 == NATIVE){... */\n      tag_336\n      jumpi\n        /* \"contracts/core/MADeliveryStrategy.sol\":7485:7509  paymentDirective_.amount */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7511:7540  paymentDirective_.contributor */\n      0x20\n      dup1\n      dup4\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7511:7550  paymentDirective_.contributor.homeChain */\n      swap1\n      dup2\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7552:7575  paymentDirective_.erc20 */\n      0xc0\n      dup5\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7603:7639  paymentDirective_.contributor.wallet */\n      0x40\n      swap3\n      dup4\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7640:7671  paymentDirective_.alloProfileId */\n      0x60\n      dup7\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7672:7699  paymentDirective_.projectId */\n      dup5\n      dup8\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7459:7701  margari.sendFunds{value : paymentDirective_.amount}(paymentDirective_.contributor.homeChain, paymentDirective_.erc20, paymentDirective_.amount ,paymentDirective_.contributor.wallet,paymentDirective_.alloProfileId,paymentDirective_.projectId ) */\n      swap5\n      mload\n      shl(0xe1, 0x60f71bf1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":22664:22689   */\n      swap5\n      swap1\n      swap5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22763:22778   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":22743:22761   */\n      0x24\n      dup6\n      add\n        /* \"#utility.yul\":22736:22779   */\n      mstore\n        /* \"#utility.yul\":22795:22813   */\n      0x44\n      dup5\n      add\n        /* \"#utility.yul\":22788:22822   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":22858:22873   */\n      swap1\n      dup3\n      and\n        /* \"#utility.yul\":22838:22856   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":22831:22874   */\n      mstore\n        /* \"#utility.yul\":22890:22909   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":22883:22918   */\n      mstore\n        /* \"#utility.yul\":22934:22953   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":22927:22962   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":7459:7476  margari.sendFunds */\n      swap1\n      dup7\n      and\n      swap2\n      0xc1ee37e2\n      swap2\n        /* \"#utility.yul\":22636:22655   */\n      0xc4\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":7459:7701  margari.sendFunds{value : paymentDirective_.amount}(paymentDirective_.contributor.homeChain, paymentDirective_.erc20, paymentDirective_.amount ,paymentDirective_.contributor.wallet,paymentDirective_.alloProfileId,paymentDirective_.projectId ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_340:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_341\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_341:\n        /* \"contracts/core/MADeliveryStrategy.sol\":7445:7453  _sendIds */\n      dup7\n        /* \"contracts/core/MADeliveryStrategy.sol\":7454:7455  y */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":7445:7456  _sendIds[y] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_343\n      jumpi\n      tag_343\n      tag_159\n      jump\t// in\n    tag_343:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":7445:7701  _sendIds[y] = margari.sendFunds{value : paymentDirective_.amount}(paymentDirective_.contributor.homeChain, paymentDirective_.erc20, paymentDirective_.amount ,paymentDirective_.contributor.wallet,paymentDirective_.alloProfileId,paymentDirective_.projectId ) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":7298:8450  if(paymentDirective_.contributor.homeChain != register.getChainId()){... */\n      jump(tag_351)\n        /* \"contracts/core/MADeliveryStrategy.sol\":7385:8009  if(paymentDirective_.erc20 == NATIVE){... */\n    tag_336:\n        /* \"contracts/core/MADeliveryStrategy.sol\":7799:7828  paymentDirective_.contributor */\n      0x20\n      dup1\n      dup3\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7799:7838  paymentDirective_.contributor.homeChain */\n      swap1\n      dup2\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7840:7863  paymentDirective_.erc20 */\n      0xc0\n      dup4\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7865:7889  paymentDirective_.amount */\n      0xa0\n      dup5\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7891:7927  paymentDirective_.contributor.wallet */\n      0x40\n      swap4\n      dup5\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7928:7959  paymentDirective_.alloProfileId */\n      0x60\n      dup7\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7960:7987  paymentDirective_.projectId */\n      dup6\n      dup8\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":7781:7989  margari.sendFunds(paymentDirective_.contributor.homeChain, paymentDirective_.erc20, paymentDirective_.amount ,paymentDirective_.contributor.wallet,paymentDirective_.alloProfileId,paymentDirective_.projectId ) */\n      swap6\n      mload\n      shl(0xe1, 0x60f71bf1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":22664:22689   */\n      swap6\n      swap1\n      swap6\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22763:22778   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":22743:22761   */\n      0x24\n      dup7\n      add\n        /* \"#utility.yul\":22736:22779   */\n      mstore\n        /* \"#utility.yul\":22795:22813   */\n      0x44\n      dup6\n      add\n        /* \"#utility.yul\":22788:22822   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":22858:22873   */\n      dup3\n      and\n        /* \"#utility.yul\":22838:22856   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":22831:22874   */\n      mstore\n        /* \"#utility.yul\":22890:22909   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":22883:22918   */\n      mstore\n        /* \"#utility.yul\":22934:22953   */\n      0xa4\n      dup3\n      add\n        /* \"#utility.yul\":22927:22962   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":7781:7798  margari.sendFunds */\n      swap1\n      dup6\n      and\n      swap1\n      0xc1ee37e2\n      swap1\n        /* \"#utility.yul\":22636:22655   */\n      0xc4\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":7781:7989  margari.sendFunds(paymentDirective_.contributor.homeChain, paymentDirective_.erc20, paymentDirective_.amount ,paymentDirective_.contributor.wallet,paymentDirective_.alloProfileId,paymentDirective_.projectId ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_347\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_347:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_341\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n        /* \"contracts/core/MADeliveryStrategy.sol\":7298:8450  if(paymentDirective_.contributor.homeChain != register.getChainId()){... */\n    tag_335:\n        /* \"contracts/core/MBaseStrategy.sol\":4712:4754  0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE */\n      0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":8065:8098  paymentDirective_.erc20 == NATIVE */\n      and\n        /* \"contracts/core/MADeliveryStrategy.sol\":8065:8082  paymentDirective_ */\n      dup2\n        /* \"contracts/core/MADeliveryStrategy.sol\":8065:8088  paymentDirective_.erc20 */\n      0xc0\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":8065:8098  paymentDirective_.erc20 == NATIVE */\n      and\n      sub\n        /* \"contracts/core/MADeliveryStrategy.sol\":8062:8392  if(paymentDirective_.erc20 == NATIVE){... */\n      tag_352\n      jumpi\n        /* \"contracts/core/MADeliveryStrategy.sol\":8130:8147  paymentDirective_ */\n      dup1\n        /* \"contracts/core/MADeliveryStrategy.sol\":8130:8159  paymentDirective_.contributor */\n      0x20\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8130:8166  paymentDirective_.contributor.wallet */\n      0x40\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":8122:8176  payable(paymentDirective_.contributor.wallet).transfer */\n      and\n        /* \"contracts/core/MADeliveryStrategy.sol\":8122:8202  payable(paymentDirective_.contributor.wallet).transfer(paymentDirective_.amount) */\n      0x08fc\n        /* \"contracts/core/MADeliveryStrategy.sol\":8177:8194  paymentDirective_ */\n      dup3\n        /* \"contracts/core/MADeliveryStrategy.sol\":8177:8201  paymentDirective_.amount */\n      0xa0\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8122:8202  payable(paymentDirective_.contributor.wallet).transfer(paymentDirective_.amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_354\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_354:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":8062:8392  if(paymentDirective_.erc20 == NATIVE){... */\n      jump(tag_355)\n    tag_352:\n        /* \"contracts/core/MADeliveryStrategy.sol\":8275:8298  paymentDirective_.erc20 */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8309:8338  paymentDirective_.contributor */\n      0x20\n      dup3\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8309:8345  paymentDirective_.contributor.wallet */\n      0x40\n      swap1\n      dup2\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8346:8370  paymentDirective_.amount */\n      0xa0\n      dup5\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8268:8372  IERC20(paymentDirective_.erc20).transfer(paymentDirective_.contributor.wallet,paymentDirective_.amount ) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17077:17109   */\n      swap2\n      dup3\n      and\n        /* \"contracts/core/MADeliveryStrategy.sol\":8268:8372  IERC20(paymentDirective_.erc20).transfer(paymentDirective_.contributor.wallet,paymentDirective_.amount ) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17059:17110   */\n      mstore\n        /* \"#utility.yul\":17126:17144   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":17119:17153   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":8268:8308  IERC20(paymentDirective_.erc20).transfer */\n      swap1\n      swap2\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":17032:17050   */\n      0x44\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":8268:8372  IERC20(paymentDirective_.erc20).transfer(paymentDirective_.contributor.wallet,paymentDirective_.amount ) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_358:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_359\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_359:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":8062:8392  if(paymentDirective_.erc20 == NATIVE){... */\n    tag_355:\n        /* \"contracts/core/MADeliveryStrategy.sol\":8424:8434  getIndex() */\n      tag_360\n        /* \"contracts/core/MADeliveryStrategy.sol\":8424:8432  getIndex */\n      tag_361\n        /* \"contracts/core/MADeliveryStrategy.sol\":8424:8434  getIndex() */\n      jump\t// in\n    tag_360:\n        /* \"contracts/core/MADeliveryStrategy.sol\":8410:8418  _sendIds */\n      dup7\n        /* \"contracts/core/MADeliveryStrategy.sol\":8419:8420  y */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":8410:8421  _sendIds[y] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_363\n      jumpi\n      tag_363\n      tag_159\n      jump\t// in\n    tag_363:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/core/MADeliveryStrategy.sol\":8410:8434  _sendIds[y] = getIndex() */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":7298:8450  if(paymentDirective_.contributor.homeChain != register.getChainId()){... */\n    tag_351:\n        /* \"contracts/core/MADeliveryStrategy.sol\":8493:8524  paymentDirective_.deliverableId */\n      0x80\n      dup2\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8465:8544  project_.updatePayoutStatus(paymentDirective_.deliverableId, PayoutStatus.PAID) */\n      mload(0x40)\n      shl(0xe1, 0x026192df)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/core/MADeliveryStrategy.sol\":8465:8492  project_.updatePayoutStatus */\n      dup6\n      and\n      swap2\n      0x04c325be\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":8465:8544  project_.updatePayoutStatus(paymentDirective_.deliverableId, PayoutStatus.PAID) */\n      tag_364\n      swap2\n        /* \"contracts/core/MADeliveryStrategy.sol\":8493:8524  paymentDirective_.deliverableId */\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":8526:8543  PayoutStatus.PAID */\n      0x02\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":8465:8544  project_.updatePayoutStatus(paymentDirective_.deliverableId, PayoutStatus.PAID) */\n      0x04\n      add\n      tag_365\n      jump\t// in\n    tag_364:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_367:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_368\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_368:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":8601:8618  paymentDirective_ */\n      dup1\n        /* \"contracts/core/MADeliveryStrategy.sol\":8561:8585  paymentDirectiveBySendId */\n      0x09\n        /* \"contracts/core/MADeliveryStrategy.sol\":8561:8598  paymentDirectiveBySendId[_sendIds[y]] */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":8586:8594  _sendIds */\n      dup9\n        /* \"contracts/core/MADeliveryStrategy.sol\":8595:8596  y */\n      dup6\n        /* \"contracts/core/MADeliveryStrategy.sol\":8586:8597  _sendIds[y] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_370\n      jumpi\n      tag_370\n      tag_159\n      jump\t// in\n    tag_370:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8561:8598  paymentDirectiveBySendId[_sendIds[y]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/core/MADeliveryStrategy.sol\":8561:8618  paymentDirectiveBySendId[_sendIds[y]] = paymentDirective_ */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_371\n      swap2\n      swap1\n      tag_372\n      jump\t// in\n    tag_371:\n      pop\n      pop\n      pop\n      pop\n      0x40\n      dup4\n      dup2\n      add\n      mload\n      0x06\n      dup5\n      add\n      sstore\n      0x60\n      dup5\n      add\n      mload\n      0x07\n      dup5\n      add\n      sstore\n      0x80\n      dup5\n      add\n      mload\n      0x08\n      dup5\n      add\n      sstore\n      0xa0\n      dup5\n      add\n      mload\n      0x09\n      dup5\n      add\n      sstore\n      0xc0\n      swap1\n      swap4\n      add\n      mload\n      0x0a\n      swap3\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":8633:8668  sendIdsByRecipient[_projectAddress] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n      0x20\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n      keccak256\n        /* \"contracts/core/MADeliveryStrategy.sol\":8674:8685  _sendIds[y] */\n      dup7\n      mload\n      dup8\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":8683:8684  y */\n      dup5\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":8674:8685  _sendIds[y] */\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_374\n      tag_159\n      jump\t// in\n    tag_374:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/core/MADeliveryStrategy.sol\":8633:8686  sendIdsByRecipient[_projectAddress].push(_sendIds[y]) */\n      dup3\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup6\n      sstore\n      0x00\n      swap5\n      dup6\n      mstore\n      swap3\n      swap1\n      swap4\n      keccak256\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/core/MADeliveryStrategy.sol\":7145:7148  y++ */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":7095:8698  for(uint256 y = 0; y < paymentDirectives_.length; y++){... */\n      jump(tag_326)\n    tag_327:\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":8708:8737  return (_sendIds, _totalPaid) */\n      pop\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":6726:8746  function payoutDirectives(PaymentDirective [] memory paymentDirectives_, address _projectAddress) internal returns (uint256 [] memory _sendIds, uint256 _totalPaid){... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/core/MADeliveryStrategy.sol\":8784:8915  function getIndex() internal returns (uint256 _index) {... */\n    tag_361:\n        /* \"contracts/core/MADeliveryStrategy.sol\":8858:8863  index */\n      0x0c\n      dup1\n      sload\n      swap1\n      dup2\n      swap1\n        /* \"contracts/core/MADeliveryStrategy.sol\":8822:8836  uint256 _index */\n      0x00\n        /* \"contracts/core/MADeliveryStrategy.sol\":8875:8882  index++ */\n      tag_377\n        /* \"contracts/core/MADeliveryStrategy.sol\":8858:8863  index */\n      dup4\n        /* \"contracts/core/MADeliveryStrategy.sol\":8875:8882  index++ */\n      tag_378\n      jump\t// in\n    tag_377:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/core/MADeliveryStrategy.sol\":8784:8915  function getIndex() internal returns (uint256 _index) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_148:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:401   */\n    tag_379:\n        /* \"#utility.yul\":218:220   */\n      0x40\n        /* \"#utility.yul\":212:221   */\n      mload\n        /* \"#utility.yul\":260:266   */\n      0x0100\n        /* \"#utility.yul\":248:267   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":282:316   */\n      dup2\n      gt\n        /* \"#utility.yul\":318:340   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":279:341   */\n      or\n        /* \"#utility.yul\":276:364   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":344:362   */\n      tag_405\n      tag_148\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":380:382   */\n      0x40\n        /* \"#utility.yul\":373:395   */\n      mstore\n        /* \"#utility.yul\":146:401   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":406:659   */\n    tag_380:\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":472:481   */\n      mload\n        /* \"#utility.yul\":520:524   */\n      0x80\n        /* \"#utility.yul\":508:525   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":540:574   */\n      dup2\n      gt\n        /* \"#utility.yul\":576:598   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":537:599   */\n      or\n        /* \"#utility.yul\":534:622   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":602:620   */\n      tag_405\n      tag_148\n      jump\t// in\n        /* \"#utility.yul\":664:915   */\n    tag_381:\n        /* \"#utility.yul\":736:738   */\n      0x40\n        /* \"#utility.yul\":730:739   */\n      dup1\n      mload\n      swap1\n        /* \"#utility.yul\":766:781   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":796:830   */\n      dup2\n      gt\n        /* \"#utility.yul\":832:854   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":793:855   */\n      or\n        /* \"#utility.yul\":790:878   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":858:876   */\n      tag_405\n      tag_148\n      jump\t// in\n        /* \"#utility.yul\":920:1173   */\n    tag_382:\n        /* \"#utility.yul\":992:994   */\n      0x40\n        /* \"#utility.yul\":986:995   */\n      mload\n        /* \"#utility.yul\":1034:1038   */\n      0xe0\n        /* \"#utility.yul\":1022:1039   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1054:1088   */\n      dup2\n      gt\n        /* \"#utility.yul\":1090:1112   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1051:1113   */\n      or\n        /* \"#utility.yul\":1048:1136   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":1116:1134   */\n      tag_405\n      tag_148\n      jump\t// in\n        /* \"#utility.yul\":1178:1453   */\n    tag_383:\n        /* \"#utility.yul\":1249:1251   */\n      0x40\n        /* \"#utility.yul\":1243:1252   */\n      mload\n        /* \"#utility.yul\":1314:1316   */\n      0x1f\n        /* \"#utility.yul\":1295:1308   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1291:1318   */\n      and\n        /* \"#utility.yul\":1279:1319   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1334:1368   */\n      dup2\n      gt\n        /* \"#utility.yul\":1370:1392   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1331:1393   */\n      or\n        /* \"#utility.yul\":1328:1416   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":1396:1414   */\n      tag_417\n      tag_148\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1432:1434   */\n      0x40\n        /* \"#utility.yul\":1425:1447   */\n      mstore\n        /* \"#utility.yul\":1178:1453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1458:1641   */\n    tag_384:\n        /* \"#utility.yul\":1518:1522   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1543:1549   */\n      dup3\n        /* \"#utility.yul\":1540:1570   */\n      gt\n        /* \"#utility.yul\":1537:1593   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1573:1591   */\n      tag_420\n      tag_148\n      jump\t// in\n    tag_420:\n      pop\n        /* \"#utility.yul\":1618:1619   */\n      0x05\n        /* \"#utility.yul\":1614:1628   */\n      shl\n        /* \"#utility.yul\":1630:1634   */\n      0x20\n        /* \"#utility.yul\":1610:1635   */\n      add\n      swap1\n        /* \"#utility.yul\":1458:1641   */\n      jump\t// out\n        /* \"#utility.yul\":1646:1777   */\n    tag_385:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1721:1752   */\n      dup2\n      and\n        /* \"#utility.yul\":1711:1753   */\n      dup2\n      eq\n        /* \"#utility.yul\":1701:1771   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":1767:1768   */\n      0x00\n        /* \"#utility.yul\":1764:1765   */\n      dup1\n        /* \"#utility.yul\":1757:1769   */\n      revert\n        /* \"#utility.yul\":1782:2525   */\n    tag_386:\n        /* \"#utility.yul\":1836:1841   */\n      0x00\n        /* \"#utility.yul\":1889:1892   */\n      dup3\n        /* \"#utility.yul\":1882:1886   */\n      0x1f\n        /* \"#utility.yul\":1874:1880   */\n      dup4\n        /* \"#utility.yul\":1870:1887   */\n      add\n        /* \"#utility.yul\":1866:1893   */\n      slt\n        /* \"#utility.yul\":1856:1911   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":1907:1908   */\n      0x00\n        /* \"#utility.yul\":1904:1905   */\n      dup1\n        /* \"#utility.yul\":1897:1909   */\n      revert\n        /* \"#utility.yul\":1856:1911   */\n    tag_424:\n        /* \"#utility.yul\":1943:1949   */\n      dup2\n        /* \"#utility.yul\":1930:1950   */\n      calldataload\n        /* \"#utility.yul\":1969:1973   */\n      0x20\n        /* \"#utility.yul\":1993:2053   */\n      tag_425\n        /* \"#utility.yul\":2009:2052   */\n      tag_426\n        /* \"#utility.yul\":2049:2051   */\n      dup4\n        /* \"#utility.yul\":2009:2052   */\n      tag_384\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1993:2053   */\n      tag_383\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2075:2078   */\n      dup1\n        /* \"#utility.yul\":2099:2101   */\n      dup4\n        /* \"#utility.yul\":2094:2097   */\n      dup3\n        /* \"#utility.yul\":2087:2102   */\n      mstore\n        /* \"#utility.yul\":2127:2131   */\n      0x20\n        /* \"#utility.yul\":2122:2125   */\n      dup3\n        /* \"#utility.yul\":2118:2132   */\n      add\n        /* \"#utility.yul\":2111:2132   */\n      swap2\n      pop\n        /* \"#utility.yul\":2184:2188   */\n      0x20\n        /* \"#utility.yul\":2178:2180   */\n      dup5\n        /* \"#utility.yul\":2175:2176   */\n      0x05\n        /* \"#utility.yul\":2171:2181   */\n      shl\n        /* \"#utility.yul\":2163:2169   */\n      dup8\n        /* \"#utility.yul\":2159:2182   */\n      add\n        /* \"#utility.yul\":2155:2189   */\n      add\n        /* \"#utility.yul\":2141:2189   */\n      swap4\n      pop\n        /* \"#utility.yul\":2212:2215   */\n      dup7\n        /* \"#utility.yul\":2204:2210   */\n      dup5\n        /* \"#utility.yul\":2201:2216   */\n      gt\n        /* \"#utility.yul\":2198:2233   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":2229:2230   */\n      0x00\n        /* \"#utility.yul\":2226:2227   */\n      dup1\n        /* \"#utility.yul\":2219:2231   */\n      revert\n        /* \"#utility.yul\":2198:2233   */\n    tag_427:\n        /* \"#utility.yul\":2265:2269   */\n      0x20\n        /* \"#utility.yul\":2257:2263   */\n      dup7\n        /* \"#utility.yul\":2253:2270   */\n      add\n        /* \"#utility.yul\":2279:2496   */\n    tag_428:\n        /* \"#utility.yul\":2295:2301   */\n      dup5\n        /* \"#utility.yul\":2290:2293   */\n      dup2\n        /* \"#utility.yul\":2287:2302   */\n      lt\n        /* \"#utility.yul\":2279:2496   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":2375:2378   */\n      dup1\n        /* \"#utility.yul\":2362:2379   */\n      calldataload\n        /* \"#utility.yul\":2392:2423   */\n      tag_431\n        /* \"#utility.yul\":2417:2422   */\n      dup2\n        /* \"#utility.yul\":2392:2423   */\n      tag_385\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2436:2454   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2474:2486   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":2312:2324   */\n      dup4\n      add\n        /* \"#utility.yul\":2279:2496   */\n      jump(tag_428)\n    tag_430:\n      pop\n        /* \"#utility.yul\":2514:2519   */\n      swap7\n        /* \"#utility.yul\":1782:2525   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2530:2716   */\n    tag_387:\n        /* \"#utility.yul\":2578:2582   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2603:2609   */\n      dup3\n        /* \"#utility.yul\":2600:2630   */\n      gt\n        /* \"#utility.yul\":2597:2653   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":2633:2651   */\n      tag_434\n      tag_148\n      jump\t// in\n    tag_434:\n      pop\n        /* \"#utility.yul\":2699:2701   */\n      0x1f\n        /* \"#utility.yul\":2678:2693   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2674:2703   */\n      and\n        /* \"#utility.yul\":2705:2709   */\n      0x20\n        /* \"#utility.yul\":2670:2710   */\n      add\n      swap1\n        /* \"#utility.yul\":2530:2716   */\n      jump\t// out\n        /* \"#utility.yul\":2721:3183   */\n    tag_388:\n        /* \"#utility.yul\":2763:2768   */\n      0x00\n        /* \"#utility.yul\":2816:2819   */\n      dup3\n        /* \"#utility.yul\":2809:2813   */\n      0x1f\n        /* \"#utility.yul\":2801:2807   */\n      dup4\n        /* \"#utility.yul\":2797:2814   */\n      add\n        /* \"#utility.yul\":2793:2820   */\n      slt\n        /* \"#utility.yul\":2783:2838   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2834:2835   */\n      0x00\n        /* \"#utility.yul\":2831:2832   */\n      dup1\n        /* \"#utility.yul\":2824:2836   */\n      revert\n        /* \"#utility.yul\":2783:2838   */\n    tag_436:\n        /* \"#utility.yul\":2870:2876   */\n      dup2\n        /* \"#utility.yul\":2857:2877   */\n      calldataload\n        /* \"#utility.yul\":2901:2949   */\n      tag_437\n        /* \"#utility.yul\":2917:2948   */\n      tag_426\n        /* \"#utility.yul\":2945:2947   */\n      dup3\n        /* \"#utility.yul\":2917:2948   */\n      tag_387\n      jump\t// in\n        /* \"#utility.yul\":2901:2949   */\n    tag_437:\n        /* \"#utility.yul\":2974:2976   */\n      dup2\n        /* \"#utility.yul\":2965:2972   */\n      dup2\n        /* \"#utility.yul\":2958:2977   */\n      mstore\n        /* \"#utility.yul\":3020:3023   */\n      dup5\n        /* \"#utility.yul\":3013:3017   */\n      0x20\n        /* \"#utility.yul\":3008:3010   */\n      dup4\n        /* \"#utility.yul\":3000:3006   */\n      dup7\n        /* \"#utility.yul\":2996:3011   */\n      add\n        /* \"#utility.yul\":2992:3018   */\n      add\n        /* \"#utility.yul\":2989:3024   */\n      gt\n        /* \"#utility.yul\":2986:3041   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":3037:3038   */\n      0x00\n        /* \"#utility.yul\":3034:3035   */\n      dup1\n        /* \"#utility.yul\":3027:3039   */\n      revert\n        /* \"#utility.yul\":2986:3041   */\n    tag_439:\n        /* \"#utility.yul\":3102:3104   */\n      dup2\n        /* \"#utility.yul\":3095:3099   */\n      0x20\n        /* \"#utility.yul\":3087:3093   */\n      dup6\n        /* \"#utility.yul\":3083:3100   */\n      add\n        /* \"#utility.yul\":3076:3080   */\n      0x20\n        /* \"#utility.yul\":3067:3074   */\n      dup4\n        /* \"#utility.yul\":3063:3081   */\n      add\n        /* \"#utility.yul\":3050:3105   */\n      calldatacopy\n        /* \"#utility.yul\":3150:3151   */\n      0x00\n        /* \"#utility.yul\":3125:3141   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3143:3147   */\n      0x20\n        /* \"#utility.yul\":3121:3148   */\n      add\n        /* \"#utility.yul\":3114:3152   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3129:3136   */\n      swap4\n        /* \"#utility.yul\":2721:3183   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3188:3890   */\n    tag_25:\n        /* \"#utility.yul\":3299:3305   */\n      0x00\n        /* \"#utility.yul\":3307:3313   */\n      dup1\n        /* \"#utility.yul\":3315:3321   */\n      0x00\n        /* \"#utility.yul\":3368:3370   */\n      0x60\n        /* \"#utility.yul\":3356:3365   */\n      dup5\n        /* \"#utility.yul\":3347:3354   */\n      dup7\n        /* \"#utility.yul\":3343:3366   */\n      sub\n        /* \"#utility.yul\":3339:3371   */\n      slt\n        /* \"#utility.yul\":3336:3388   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":3384:3385   */\n      0x00\n        /* \"#utility.yul\":3381:3382   */\n      dup1\n        /* \"#utility.yul\":3374:3386   */\n      revert\n        /* \"#utility.yul\":3336:3388   */\n    tag_441:\n        /* \"#utility.yul\":3424:3433   */\n      dup4\n        /* \"#utility.yul\":3411:3434   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3494:3496   */\n      dup1\n        /* \"#utility.yul\":3486:3492   */\n      dup3\n        /* \"#utility.yul\":3483:3497   */\n      gt\n        /* \"#utility.yul\":3480:3514   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":3510:3511   */\n      0x00\n        /* \"#utility.yul\":3507:3508   */\n      dup1\n        /* \"#utility.yul\":3500:3512   */\n      revert\n        /* \"#utility.yul\":3480:3514   */\n    tag_442:\n        /* \"#utility.yul\":3533:3594   */\n      tag_443\n        /* \"#utility.yul\":3586:3593   */\n      dup8\n        /* \"#utility.yul\":3577:3583   */\n      dup4\n        /* \"#utility.yul\":3566:3575   */\n      dup9\n        /* \"#utility.yul\":3562:3584   */\n      add\n        /* \"#utility.yul\":3533:3594   */\n      tag_386\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":3523:3594   */\n      swap5\n      pop\n        /* \"#utility.yul\":3647:3649   */\n      0x20\n        /* \"#utility.yul\":3636:3645   */\n      dup7\n        /* \"#utility.yul\":3632:3650   */\n      add\n        /* \"#utility.yul\":3619:3651   */\n      calldataload\n        /* \"#utility.yul\":3603:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3676:3678   */\n      dup1\n        /* \"#utility.yul\":3666:3674   */\n      dup3\n        /* \"#utility.yul\":3663:3679   */\n      gt\n        /* \"#utility.yul\":3660:3696   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3692:3693   */\n      0x00\n        /* \"#utility.yul\":3689:3690   */\n      dup1\n        /* \"#utility.yul\":3682:3694   */\n      revert\n        /* \"#utility.yul\":3660:3696   */\n    tag_444:\n      pop\n        /* \"#utility.yul\":3715:3766   */\n      tag_445\n        /* \"#utility.yul\":3758:3765   */\n      dup7\n        /* \"#utility.yul\":3747:3755   */\n      dup3\n        /* \"#utility.yul\":3736:3745   */\n      dup8\n        /* \"#utility.yul\":3732:3756   */\n      add\n        /* \"#utility.yul\":3715:3766   */\n      tag_388\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3705:3766   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3816:3818   */\n      0x40\n        /* \"#utility.yul\":3805:3814   */\n      dup5\n        /* \"#utility.yul\":3801:3819   */\n      add\n        /* \"#utility.yul\":3788:3820   */\n      calldataload\n        /* \"#utility.yul\":3829:3860   */\n      tag_446\n        /* \"#utility.yul\":3854:3859   */\n      dup2\n        /* \"#utility.yul\":3829:3860   */\n      tag_385\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3879:3884   */\n      dup1\n        /* \"#utility.yul\":3869:3884   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3188:3890   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4299:4549   */\n    tag_389:\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4394:4507   */\n    tag_450:\n        /* \"#utility.yul\":4408:4414   */\n      dup4\n        /* \"#utility.yul\":4405:4406   */\n      dup2\n        /* \"#utility.yul\":4402:4415   */\n      lt\n        /* \"#utility.yul\":4394:4507   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":4484:4495   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4478:4496   */\n      mload\n        /* \"#utility.yul\":4465:4476   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4458:4497   */\n      mstore\n        /* \"#utility.yul\":4430:4432   */\n      0x20\n        /* \"#utility.yul\":4423:4433   */\n      add\n        /* \"#utility.yul\":4394:4507   */\n      jump(tag_450)\n    tag_452:\n      pop\n      pop\n        /* \"#utility.yul\":4541:4542   */\n      0x00\n        /* \"#utility.yul\":4523:4539   */\n      swap2\n      add\n        /* \"#utility.yul\":4516:4543   */\n      mstore\n        /* \"#utility.yul\":4299:4549   */\n      jump\t// out\n        /* \"#utility.yul\":4554:4950   */\n    tag_41:\n        /* \"#utility.yul\":4703:4705   */\n      0x20\n        /* \"#utility.yul\":4692:4701   */\n      dup2\n        /* \"#utility.yul\":4685:4706   */\n      mstore\n        /* \"#utility.yul\":4666:4670   */\n      0x00\n        /* \"#utility.yul\":4735:4741   */\n      dup3\n        /* \"#utility.yul\":4729:4742   */\n      mload\n        /* \"#utility.yul\":4778:4784   */\n      dup1\n        /* \"#utility.yul\":4773:4775   */\n      0x20\n        /* \"#utility.yul\":4762:4771   */\n      dup5\n        /* \"#utility.yul\":4758:4776   */\n      add\n        /* \"#utility.yul\":4751:4785   */\n      mstore\n        /* \"#utility.yul\":4794:4873   */\n      tag_454\n        /* \"#utility.yul\":4866:4872   */\n      dup2\n        /* \"#utility.yul\":4861:4863   */\n      0x40\n        /* \"#utility.yul\":4850:4859   */\n      dup6\n        /* \"#utility.yul\":4846:4864   */\n      add\n        /* \"#utility.yul\":4841:4843   */\n      0x20\n        /* \"#utility.yul\":4833:4839   */\n      dup8\n        /* \"#utility.yul\":4829:4844   */\n      add\n        /* \"#utility.yul\":4794:4873   */\n      tag_389\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4934:4936   */\n      0x1f\n        /* \"#utility.yul\":4913:4928   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4909:4938   */\n      and\n        /* \"#utility.yul\":4894:4939   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4941:4943   */\n      0x40\n        /* \"#utility.yul\":4890:4944   */\n      add\n      swap3\n        /* \"#utility.yul\":4554:4950   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4955:5410   */\n    tag_44:\n        /* \"#utility.yul\":5032:5038   */\n      0x00\n        /* \"#utility.yul\":5040:5046   */\n      dup1\n        /* \"#utility.yul\":5093:5095   */\n      0x40\n        /* \"#utility.yul\":5081:5090   */\n      dup4\n        /* \"#utility.yul\":5072:5079   */\n      dup6\n        /* \"#utility.yul\":5068:5091   */\n      sub\n        /* \"#utility.yul\":5064:5096   */\n      slt\n        /* \"#utility.yul\":5061:5113   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":5109:5110   */\n      0x00\n        /* \"#utility.yul\":5106:5107   */\n      dup1\n        /* \"#utility.yul\":5099:5111   */\n      revert\n        /* \"#utility.yul\":5061:5113   */\n    tag_456:\n        /* \"#utility.yul\":5149:5158   */\n      dup3\n        /* \"#utility.yul\":5136:5159   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5174:5180   */\n      dup2\n        /* \"#utility.yul\":5171:5201   */\n      gt\n        /* \"#utility.yul\":5168:5218   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":5214:5215   */\n      0x00\n        /* \"#utility.yul\":5211:5212   */\n      dup1\n        /* \"#utility.yul\":5204:5216   */\n      revert\n        /* \"#utility.yul\":5168:5218   */\n    tag_457:\n        /* \"#utility.yul\":5237:5286   */\n      tag_458\n        /* \"#utility.yul\":5278:5285   */\n      dup6\n        /* \"#utility.yul\":5269:5275   */\n      dup3\n        /* \"#utility.yul\":5258:5267   */\n      dup7\n        /* \"#utility.yul\":5254:5276   */\n      add\n        /* \"#utility.yul\":5237:5286   */\n      tag_388\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5227:5286   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup4\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5308:5340   */\n      calldataload\n        /* \"#utility.yul\":5349:5380   */\n      tag_459\n        /* \"#utility.yul\":5374:5379   */\n      dup2\n        /* \"#utility.yul\":5349:5380   */\n      tag_385\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5399:5404   */\n      dup1\n        /* \"#utility.yul\":5389:5404   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4955:5410   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5870   */\n    tag_55:\n        /* \"#utility.yul\":5682:5688   */\n      0x00\n        /* \"#utility.yul\":5735:5737   */\n      0x20\n        /* \"#utility.yul\":5723:5732   */\n      dup3\n        /* \"#utility.yul\":5714:5721   */\n      dup5\n        /* \"#utility.yul\":5710:5733   */\n      sub\n        /* \"#utility.yul\":5706:5738   */\n      slt\n        /* \"#utility.yul\":5703:5755   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":5751:5752   */\n      0x00\n        /* \"#utility.yul\":5748:5749   */\n      dup1\n        /* \"#utility.yul\":5741:5753   */\n      revert\n        /* \"#utility.yul\":5703:5755   */\n    tag_462:\n        /* \"#utility.yul\":5790:5799   */\n      dup2\n        /* \"#utility.yul\":5777:5800   */\n      calldataload\n        /* \"#utility.yul\":5809:5840   */\n      tag_292\n        /* \"#utility.yul\":5834:5839   */\n      dup2\n        /* \"#utility.yul\":5809:5840   */\n      tag_385\n      jump\t// in\n        /* \"#utility.yul\":6249:7606   */\n    tag_76:\n        /* \"#utility.yul\":6376:6382   */\n      0x00\n        /* \"#utility.yul\":6384:6390   */\n      dup1\n        /* \"#utility.yul\":6437:6439   */\n      0x40\n        /* \"#utility.yul\":6425:6434   */\n      dup4\n        /* \"#utility.yul\":6416:6423   */\n      dup6\n        /* \"#utility.yul\":6412:6435   */\n      sub\n        /* \"#utility.yul\":6408:6440   */\n      slt\n        /* \"#utility.yul\":6405:6457   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":6453:6454   */\n      0x00\n        /* \"#utility.yul\":6450:6451   */\n      dup1\n        /* \"#utility.yul\":6443:6455   */\n      revert\n        /* \"#utility.yul\":6405:6457   */\n    tag_467:\n        /* \"#utility.yul\":6493:6502   */\n      dup3\n        /* \"#utility.yul\":6480:6503   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6563:6565   */\n      dup1\n        /* \"#utility.yul\":6555:6561   */\n      dup3\n        /* \"#utility.yul\":6552:6566   */\n      gt\n        /* \"#utility.yul\":6549:6583   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":6579:6580   */\n      0x00\n        /* \"#utility.yul\":6576:6577   */\n      dup1\n        /* \"#utility.yul\":6569:6581   */\n      revert\n        /* \"#utility.yul\":6549:6583   */\n    tag_468:\n        /* \"#utility.yul\":6602:6663   */\n      tag_469\n        /* \"#utility.yul\":6655:6662   */\n      dup7\n        /* \"#utility.yul\":6646:6652   */\n      dup4\n        /* \"#utility.yul\":6635:6644   */\n      dup8\n        /* \"#utility.yul\":6631:6653   */\n      add\n        /* \"#utility.yul\":6602:6663   */\n      tag_386\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6592:6663   */\n      swap4\n      pop\n        /* \"#utility.yul\":6682:6684   */\n      0x20\n        /* \"#utility.yul\":6672:6684   */\n      swap2\n      pop\n        /* \"#utility.yul\":6737:6739   */\n      dup2\n        /* \"#utility.yul\":6726:6735   */\n      dup6\n        /* \"#utility.yul\":6722:6740   */\n      add\n        /* \"#utility.yul\":6709:6741   */\n      calldataload\n        /* \"#utility.yul\":6766:6768   */\n      dup2\n        /* \"#utility.yul\":6756:6764   */\n      dup2\n        /* \"#utility.yul\":6753:6769   */\n      gt\n        /* \"#utility.yul\":6750:6786   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":6782:6783   */\n      0x00\n        /* \"#utility.yul\":6779:6780   */\n      dup1\n        /* \"#utility.yul\":6772:6784   */\n      revert\n        /* \"#utility.yul\":6750:6786   */\n    tag_470:\n        /* \"#utility.yul\":6805:6829   */\n      dup6\n      add\n        /* \"#utility.yul\":6860:6864   */\n      0x1f\n        /* \"#utility.yul\":6852:6865   */\n      dup2\n      add\n        /* \"#utility.yul\":6848:6875   */\n      dup8\n      sgt\n        /* \"#utility.yul\":6838:6893   */\n      tag_471\n      jumpi\n        /* \"#utility.yul\":6889:6890   */\n      0x00\n        /* \"#utility.yul\":6886:6887   */\n      dup1\n        /* \"#utility.yul\":6879:6891   */\n      revert\n        /* \"#utility.yul\":6838:6893   */\n    tag_471:\n        /* \"#utility.yul\":6925:6927   */\n      dup1\n        /* \"#utility.yul\":6912:6928   */\n      calldataload\n        /* \"#utility.yul\":6948:7008   */\n      tag_472\n        /* \"#utility.yul\":6964:7007   */\n      tag_426\n        /* \"#utility.yul\":7004:7006   */\n      dup3\n        /* \"#utility.yul\":6964:7007   */\n      tag_384\n      jump\t// in\n        /* \"#utility.yul\":6948:7008   */\n    tag_472:\n        /* \"#utility.yul\":7042:7057   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":7124:7125   */\n      0x05\n        /* \"#utility.yul\":7120:7130   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":7112:7131   */\n      dup3\n      add\n        /* \"#utility.yul\":7108:7136   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":7073:7085   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":7148:7167   */\n      dup10\n      dup4\n      gt\n        /* \"#utility.yul\":7145:7184   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7180:7181   */\n      0x00\n        /* \"#utility.yul\":7177:7178   */\n      dup1\n        /* \"#utility.yul\":7170:7182   */\n      revert\n        /* \"#utility.yul\":7145:7184   */\n    tag_474:\n        /* \"#utility.yul\":7212:7214   */\n      dup6\n        /* \"#utility.yul\":7208:7210   */\n      dup5\n        /* \"#utility.yul\":7204:7215   */\n      add\n        /* \"#utility.yul\":7224:7576   */\n    tag_475:\n        /* \"#utility.yul\":7240:7246   */\n      dup4\n        /* \"#utility.yul\":7235:7238   */\n      dup2\n        /* \"#utility.yul\":7232:7247   */\n      lt\n        /* \"#utility.yul\":7224:7576   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":7326:7329   */\n      dup1\n        /* \"#utility.yul\":7313:7330   */\n      calldataload\n        /* \"#utility.yul\":7362:7364   */\n      dup7\n        /* \"#utility.yul\":7349:7360   */\n      dup2\n        /* \"#utility.yul\":7346:7365   */\n      gt\n        /* \"#utility.yul\":7343:7452   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":7406:7407   */\n      0x00\n        /* \"#utility.yul\":7435:7437   */\n      dup1\n        /* \"#utility.yul\":7431:7433   */\n      dup2\n        /* \"#utility.yul\":7424:7438   */\n      revert\n        /* \"#utility.yul\":7343:7452   */\n    tag_478:\n        /* \"#utility.yul\":7477:7533   */\n      tag_479\n        /* \"#utility.yul\":7525:7532   */\n      dup13\n        /* \"#utility.yul\":7520:7522   */\n      dup10\n        /* \"#utility.yul\":7506:7517   */\n      dup4\n        /* \"#utility.yul\":7502:7504   */\n      dup10\n        /* \"#utility.yul\":7498:7518   */\n      add\n        /* \"#utility.yul\":7494:7523   */\n      add\n        /* \"#utility.yul\":7477:7533   */\n      tag_388\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":7465:7534   */\n      dup5\n      mstore\n      pop\n        /* \"#utility.yul\":7554:7566   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"#utility.yul\":7257:7269   */\n      dup7\n      add\n        /* \"#utility.yul\":7224:7576   */\n      jump(tag_475)\n    tag_477:\n        /* \"#utility.yul\":7228:7231   */\n      pop\n        /* \"#utility.yul\":7595:7600   */\n      dup1\n        /* \"#utility.yul\":7585:7600   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6249:7606   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7611:8437   */\n    tag_79:\n        /* \"#utility.yul\":7844:7846   */\n      0x20\n        /* \"#utility.yul\":7896:7917   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7966:7979   */\n      dup3\n      mload\n        /* \"#utility.yul\":7869:7887   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":7988:8010   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7815:7819   */\n      0x00\n      swap2\n        /* \"#utility.yul\":7844:7846   */\n      swap1\n        /* \"#utility.yul\":8029:8031   */\n      0x40\n      swap1\n        /* \"#utility.yul\":8047:8065   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":8088:8103   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":7815:7819   */\n      dup6\n        /* \"#utility.yul\":8131:8411   */\n    tag_481:\n        /* \"#utility.yul\":8145:8151   */\n      dup3\n        /* \"#utility.yul\":8142:8143   */\n      dup2\n        /* \"#utility.yul\":8139:8152   */\n      lt\n        /* \"#utility.yul\":8131:8411   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":8204:8217   */\n      dup2\n      mload\n        /* \"#utility.yul\":8246:8255   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8242:8277   */\n      and\n        /* \"#utility.yul\":8230:8278   */\n      dup6\n      mstore\n        /* \"#utility.yul\":8318:8329   */\n      dup7\n      add\n        /* \"#utility.yul\":8312:8330   */\n      mload\n        /* \"#utility.yul\":8298:8310   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":8291:8331   */\n      mstore\n        /* \"#utility.yul\":8351:8363   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":8386:8401   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":8274:8275   */\n      0x01\n        /* \"#utility.yul\":8160:8169   */\n      add\n        /* \"#utility.yul\":8131:8411   */\n      jump(tag_481)\n    tag_483:\n      pop\n        /* \"#utility.yul\":8428:8431   */\n      swap2\n      swap8\n        /* \"#utility.yul\":7611:8437   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8442:9100   */\n    tag_84:\n        /* \"#utility.yul\":8613:8615   */\n      0x20\n        /* \"#utility.yul\":8665:8686   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8735:8748   */\n      dup3\n      mload\n        /* \"#utility.yul\":8638:8656   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":8757:8779   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8584:8588   */\n      0x00\n      swap2\n        /* \"#utility.yul\":8613:8615   */\n      swap1\n        /* \"#utility.yul\":8836:8851   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":8810:8812   */\n      0x40\n        /* \"#utility.yul\":8795:8813   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":8584:8588   */\n      dup5\n        /* \"#utility.yul\":8879:9074   */\n    tag_485:\n        /* \"#utility.yul\":8893:8899   */\n      dup2\n        /* \"#utility.yul\":8890:8891   */\n      dup2\n        /* \"#utility.yul\":8887:8900   */\n      lt\n        /* \"#utility.yul\":8879:9074   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":8958:8971   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8954:8993   */\n      and\n        /* \"#utility.yul\":8942:8994   */\n      dup4\n      mstore\n        /* \"#utility.yul\":9049:9064   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":9014:9026   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":8990:8991   */\n      0x01\n        /* \"#utility.yul\":8908:8917   */\n      add\n        /* \"#utility.yul\":8879:9074   */\n      jump(tag_485)\n    tag_487:\n      pop\n        /* \"#utility.yul\":9091:9094   */\n      swap1\n      swap7\n        /* \"#utility.yul\":8442:9100   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9105:9232   */\n    tag_390:\n        /* \"#utility.yul\":9166:9176   */\n      0x4e487b71\n        /* \"#utility.yul\":9161:9164   */\n      0xe0\n        /* \"#utility.yul\":9157:9177   */\n      shl\n        /* \"#utility.yul\":9154:9155   */\n      0x00\n        /* \"#utility.yul\":9147:9178   */\n      mstore\n        /* \"#utility.yul\":9197:9201   */\n      0x21\n        /* \"#utility.yul\":9194:9195   */\n      0x04\n        /* \"#utility.yul\":9187:9202   */\n      mstore\n        /* \"#utility.yul\":9221:9225   */\n      0x24\n        /* \"#utility.yul\":9218:9219   */\n      0x00\n        /* \"#utility.yul\":9211:9226   */\n      revert\n        /* \"#utility.yul\":9237:9479   */\n    tag_94:\n        /* \"#utility.yul\":9380:9382   */\n      0x20\n        /* \"#utility.yul\":9365:9383   */\n      dup2\n      add\n        /* \"#utility.yul\":9413:9414   */\n      0x07\n        /* \"#utility.yul\":9402:9415   */\n      dup4\n      lt\n        /* \"#utility.yul\":9392:9439   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":9419:9437   */\n      tag_491\n      tag_390\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9448:9473   */\n      swap2\n      swap1\n      mstore\n        /* \"#utility.yul\":9237:9479   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":9484:9872   */\n    tag_98:\n        /* \"#utility.yul\":9561:9567   */\n      0x00\n        /* \"#utility.yul\":9569:9575   */\n      dup1\n        /* \"#utility.yul\":9622:9624   */\n      0x40\n        /* \"#utility.yul\":9610:9619   */\n      dup4\n        /* \"#utility.yul\":9601:9608   */\n      dup6\n        /* \"#utility.yul\":9597:9620   */\n      sub\n        /* \"#utility.yul\":9593:9625   */\n      slt\n        /* \"#utility.yul\":9590:9642   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":9638:9639   */\n      0x00\n        /* \"#utility.yul\":9635:9636   */\n      dup1\n        /* \"#utility.yul\":9628:9640   */\n      revert\n        /* \"#utility.yul\":9590:9642   */\n    tag_493:\n        /* \"#utility.yul\":9674:9683   */\n      dup3\n        /* \"#utility.yul\":9661:9684   */\n      calldataload\n        /* \"#utility.yul\":9651:9684   */\n      swap2\n      pop\n        /* \"#utility.yul\":9735:9737   */\n      0x20\n        /* \"#utility.yul\":9724:9733   */\n      dup4\n        /* \"#utility.yul\":9720:9738   */\n      add\n        /* \"#utility.yul\":9707:9739   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":9754:9760   */\n      dup2\n        /* \"#utility.yul\":9751:9781   */\n      gt\n        /* \"#utility.yul\":9748:9798   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":9794:9795   */\n      0x00\n        /* \"#utility.yul\":9791:9792   */\n      dup1\n        /* \"#utility.yul\":9784:9796   */\n      revert\n        /* \"#utility.yul\":9748:9798   */\n    tag_494:\n        /* \"#utility.yul\":9817:9866   */\n      tag_495\n        /* \"#utility.yul\":9858:9865   */\n      dup6\n        /* \"#utility.yul\":9849:9855   */\n      dup3\n        /* \"#utility.yul\":9838:9847   */\n      dup7\n        /* \"#utility.yul\":9834:9856   */\n      add\n        /* \"#utility.yul\":9817:9866   */\n      tag_388\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9807:9866   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9484:9872   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9877:10057   */\n    tag_106:\n        /* \"#utility.yul\":9936:9942   */\n      0x00\n        /* \"#utility.yul\":9989:9991   */\n      0x20\n        /* \"#utility.yul\":9977:9986   */\n      dup3\n        /* \"#utility.yul\":9968:9975   */\n      dup5\n        /* \"#utility.yul\":9964:9987   */\n      sub\n        /* \"#utility.yul\":9960:9992   */\n      slt\n        /* \"#utility.yul\":9957:10009   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":10005:10006   */\n      0x00\n        /* \"#utility.yul\":10002:10003   */\n      dup1\n        /* \"#utility.yul\":9995:10007   */\n      revert\n        /* \"#utility.yul\":9957:10009   */\n    tag_497:\n      pop\n        /* \"#utility.yul\":10028:10051   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":9877:10057   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10405:10532   */\n    tag_159:\n        /* \"#utility.yul\":10466:10476   */\n      0x4e487b71\n        /* \"#utility.yul\":10461:10464   */\n      0xe0\n        /* \"#utility.yul\":10457:10477   */\n      shl\n        /* \"#utility.yul\":10454:10455   */\n      0x00\n        /* \"#utility.yul\":10447:10478   */\n      mstore\n        /* \"#utility.yul\":10497:10501   */\n      0x32\n        /* \"#utility.yul\":10494:10495   */\n      0x04\n        /* \"#utility.yul\":10487:10502   */\n      mstore\n        /* \"#utility.yul\":10521:10525   */\n      0x24\n        /* \"#utility.yul\":10518:10519   */\n      0x00\n        /* \"#utility.yul\":10511:10526   */\n      revert\n        /* \"#utility.yul\":10537:10664   */\n    tag_391:\n        /* \"#utility.yul\":10598:10608   */\n      0x4e487b71\n        /* \"#utility.yul\":10593:10596   */\n      0xe0\n        /* \"#utility.yul\":10589:10609   */\n      shl\n        /* \"#utility.yul\":10586:10587   */\n      0x00\n        /* \"#utility.yul\":10579:10610   */\n      mstore\n        /* \"#utility.yul\":10629:10633   */\n      0x11\n        /* \"#utility.yul\":10626:10627   */\n      0x04\n        /* \"#utility.yul\":10619:10634   */\n      mstore\n        /* \"#utility.yul\":10653:10657   */\n      0x24\n        /* \"#utility.yul\":10650:10651   */\n      0x00\n        /* \"#utility.yul\":10643:10658   */\n      revert\n        /* \"#utility.yul\":10669:10794   */\n    tag_192:\n        /* \"#utility.yul\":10734:10743   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10755:10765   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10752:10788   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":10768:10786   */\n      tag_133\n      tag_391\n      jump\t// in\n        /* \"#utility.yul\":11484:11926   */\n    tag_392:\n        /* \"#utility.yul\":11538:11543   */\n      0x00\n        /* \"#utility.yul\":11591:11594   */\n      dup3\n        /* \"#utility.yul\":11584:11588   */\n      0x1f\n        /* \"#utility.yul\":11576:11582   */\n      dup4\n        /* \"#utility.yul\":11572:11589   */\n      add\n        /* \"#utility.yul\":11568:11595   */\n      slt\n        /* \"#utility.yul\":11558:11613   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":11609:11610   */\n      0x00\n        /* \"#utility.yul\":11606:11607   */\n      dup1\n        /* \"#utility.yul\":11599:11611   */\n      revert\n        /* \"#utility.yul\":11558:11613   */\n    tag_507:\n        /* \"#utility.yul\":11638:11644   */\n      dup2\n        /* \"#utility.yul\":11632:11645   */\n      mload\n        /* \"#utility.yul\":11669:11717   */\n      tag_508\n        /* \"#utility.yul\":11685:11716   */\n      tag_426\n        /* \"#utility.yul\":11713:11715   */\n      dup3\n        /* \"#utility.yul\":11685:11716   */\n      tag_387\n      jump\t// in\n        /* \"#utility.yul\":11669:11717   */\n    tag_508:\n        /* \"#utility.yul\":11742:11744   */\n      dup2\n        /* \"#utility.yul\":11733:11740   */\n      dup2\n        /* \"#utility.yul\":11726:11745   */\n      mstore\n        /* \"#utility.yul\":11788:11791   */\n      dup5\n        /* \"#utility.yul\":11781:11785   */\n      0x20\n        /* \"#utility.yul\":11776:11778   */\n      dup4\n        /* \"#utility.yul\":11768:11774   */\n      dup7\n        /* \"#utility.yul\":11764:11779   */\n      add\n        /* \"#utility.yul\":11760:11786   */\n      add\n        /* \"#utility.yul\":11757:11792   */\n      gt\n        /* \"#utility.yul\":11754:11809   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":11805:11806   */\n      0x00\n        /* \"#utility.yul\":11802:11803   */\n      dup1\n        /* \"#utility.yul\":11795:11807   */\n      revert\n        /* \"#utility.yul\":11754:11809   */\n    tag_510:\n        /* \"#utility.yul\":11818:11895   */\n      tag_511\n        /* \"#utility.yul\":11892:11894   */\n      dup3\n        /* \"#utility.yul\":11885:11889   */\n      0x20\n        /* \"#utility.yul\":11876:11883   */\n      dup4\n        /* \"#utility.yul\":11872:11890   */\n      add\n        /* \"#utility.yul\":11865:11869   */\n      0x20\n        /* \"#utility.yul\":11857:11863   */\n      dup8\n        /* \"#utility.yul\":11853:11870   */\n      add\n        /* \"#utility.yul\":11818:11895   */\n      tag_389\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":11913:11920   */\n      swap5\n        /* \"#utility.yul\":11484:11926   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11931:12069   */\n    tag_393:\n        /* \"#utility.yul\":12010:12023   */\n      dup1\n      mload\n        /* \"#utility.yul\":12032:12063   */\n      tag_513\n        /* \"#utility.yul\":12010:12023   */\n      dup2\n        /* \"#utility.yul\":12032:12063   */\n      tag_385\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":11931:12069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12074:12739   */\n    tag_394:\n        /* \"#utility.yul\":12139:12144   */\n      0x00\n        /* \"#utility.yul\":12192:12195   */\n      dup3\n        /* \"#utility.yul\":12185:12189   */\n      0x1f\n        /* \"#utility.yul\":12177:12183   */\n      dup4\n        /* \"#utility.yul\":12173:12190   */\n      add\n        /* \"#utility.yul\":12169:12196   */\n      slt\n        /* \"#utility.yul\":12159:12214   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":12210:12211   */\n      0x00\n        /* \"#utility.yul\":12207:12208   */\n      dup1\n        /* \"#utility.yul\":12200:12212   */\n      revert\n        /* \"#utility.yul\":12159:12214   */\n    tag_515:\n        /* \"#utility.yul\":12239:12245   */\n      dup2\n        /* \"#utility.yul\":12233:12246   */\n      mload\n        /* \"#utility.yul\":12265:12269   */\n      0x20\n        /* \"#utility.yul\":12289:12349   */\n      tag_516\n        /* \"#utility.yul\":12305:12348   */\n      tag_426\n        /* \"#utility.yul\":12345:12347   */\n      dup4\n        /* \"#utility.yul\":12305:12348   */\n      tag_384\n      jump\t// in\n        /* \"#utility.yul\":12289:12349   */\n    tag_516:\n        /* \"#utility.yul\":12371:12374   */\n      dup1\n        /* \"#utility.yul\":12395:12397   */\n      dup4\n        /* \"#utility.yul\":12390:12393   */\n      dup3\n        /* \"#utility.yul\":12383:12398   */\n      mstore\n        /* \"#utility.yul\":12423:12427   */\n      0x20\n        /* \"#utility.yul\":12418:12421   */\n      dup3\n        /* \"#utility.yul\":12414:12428   */\n      add\n        /* \"#utility.yul\":12407:12428   */\n      swap2\n      pop\n        /* \"#utility.yul\":12480:12484   */\n      0x20\n        /* \"#utility.yul\":12474:12476   */\n      dup5\n        /* \"#utility.yul\":12471:12472   */\n      0x05\n        /* \"#utility.yul\":12467:12477   */\n      shl\n        /* \"#utility.yul\":12459:12465   */\n      dup8\n        /* \"#utility.yul\":12455:12478   */\n      add\n        /* \"#utility.yul\":12451:12485   */\n      add\n        /* \"#utility.yul\":12437:12485   */\n      swap4\n      pop\n        /* \"#utility.yul\":12508:12511   */\n      dup7\n        /* \"#utility.yul\":12500:12506   */\n      dup5\n        /* \"#utility.yul\":12497:12512   */\n      gt\n        /* \"#utility.yul\":12494:12529   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":12525:12526   */\n      0x00\n        /* \"#utility.yul\":12522:12523   */\n      dup1\n        /* \"#utility.yul\":12515:12527   */\n      revert\n        /* \"#utility.yul\":12494:12529   */\n    tag_518:\n        /* \"#utility.yul\":12561:12565   */\n      0x20\n        /* \"#utility.yul\":12553:12559   */\n      dup7\n        /* \"#utility.yul\":12549:12566   */\n      add\n        /* \"#utility.yul\":12575:12710   */\n    tag_519:\n        /* \"#utility.yul\":12591:12597   */\n      dup5\n        /* \"#utility.yul\":12586:12589   */\n      dup2\n        /* \"#utility.yul\":12583:12598   */\n      lt\n        /* \"#utility.yul\":12575:12710   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":12657:12667   */\n      dup1\n      mload\n        /* \"#utility.yul\":12645:12668   */\n      dup4\n      mstore\n        /* \"#utility.yul\":12688:12700   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":12608:12620   */\n      dup4\n      add\n        /* \"#utility.yul\":12575:12710   */\n      jump(tag_519)\n        /* \"#utility.yul\":12744:13484   */\n    tag_395:\n        /* \"#utility.yul\":12809:12814   */\n      0x00\n        /* \"#utility.yul\":12862:12865   */\n      dup3\n        /* \"#utility.yul\":12855:12859   */\n      0x1f\n        /* \"#utility.yul\":12847:12853   */\n      dup4\n        /* \"#utility.yul\":12843:12860   */\n      add\n        /* \"#utility.yul\":12839:12866   */\n      slt\n        /* \"#utility.yul\":12829:12884   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":12880:12881   */\n      0x00\n        /* \"#utility.yul\":12877:12878   */\n      dup1\n        /* \"#utility.yul\":12870:12882   */\n      revert\n        /* \"#utility.yul\":12829:12884   */\n    tag_523:\n        /* \"#utility.yul\":12909:12915   */\n      dup2\n        /* \"#utility.yul\":12903:12916   */\n      mload\n        /* \"#utility.yul\":12935:12939   */\n      0x20\n        /* \"#utility.yul\":12959:13019   */\n      tag_524\n        /* \"#utility.yul\":12975:13018   */\n      tag_426\n        /* \"#utility.yul\":13015:13017   */\n      dup4\n        /* \"#utility.yul\":12975:13018   */\n      tag_384\n      jump\t// in\n        /* \"#utility.yul\":12959:13019   */\n    tag_524:\n        /* \"#utility.yul\":13041:13044   */\n      dup1\n        /* \"#utility.yul\":13065:13067   */\n      dup4\n        /* \"#utility.yul\":13060:13063   */\n      dup3\n        /* \"#utility.yul\":13053:13068   */\n      mstore\n        /* \"#utility.yul\":13093:13097   */\n      0x20\n        /* \"#utility.yul\":13088:13091   */\n      dup3\n        /* \"#utility.yul\":13084:13098   */\n      add\n        /* \"#utility.yul\":13077:13098   */\n      swap2\n      pop\n        /* \"#utility.yul\":13150:13154   */\n      0x20\n        /* \"#utility.yul\":13144:13146   */\n      dup5\n        /* \"#utility.yul\":13141:13142   */\n      0x05\n        /* \"#utility.yul\":13137:13147   */\n      shl\n        /* \"#utility.yul\":13129:13135   */\n      dup8\n        /* \"#utility.yul\":13125:13148   */\n      add\n        /* \"#utility.yul\":13121:13155   */\n      add\n        /* \"#utility.yul\":13107:13155   */\n      swap4\n      pop\n        /* \"#utility.yul\":13178:13181   */\n      dup7\n        /* \"#utility.yul\":13170:13176   */\n      dup5\n        /* \"#utility.yul\":13167:13182   */\n      gt\n        /* \"#utility.yul\":13164:13199   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":13195:13196   */\n      0x00\n        /* \"#utility.yul\":13192:13193   */\n      dup1\n        /* \"#utility.yul\":13185:13197   */\n      revert\n        /* \"#utility.yul\":13164:13199   */\n    tag_526:\n        /* \"#utility.yul\":13231:13235   */\n      0x20\n        /* \"#utility.yul\":13223:13229   */\n      dup7\n        /* \"#utility.yul\":13219:13236   */\n      add\n        /* \"#utility.yul\":13245:13455   */\n    tag_527:\n        /* \"#utility.yul\":13261:13267   */\n      dup5\n        /* \"#utility.yul\":13256:13259   */\n      dup2\n        /* \"#utility.yul\":13253:13268   */\n      lt\n        /* \"#utility.yul\":13245:13455   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":13334:13337   */\n      dup1\n        /* \"#utility.yul\":13328:13338   */\n      mload\n        /* \"#utility.yul\":13351:13382   */\n      tag_530\n        /* \"#utility.yul\":13376:13381   */\n      dup2\n        /* \"#utility.yul\":13351:13382   */\n      tag_385\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":13395:13413   */\n      dup4\n      mstore\n        /* \"#utility.yul\":13433:13445   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":13278:13290   */\n      dup4\n      add\n        /* \"#utility.yul\":13245:13455   */\n      jump(tag_527)\n        /* \"#utility.yul\":13489:14771   */\n    tag_213:\n        /* \"#utility.yul\":13584:13590   */\n      0x00\n        /* \"#utility.yul\":13637:13639   */\n      0x20\n        /* \"#utility.yul\":13625:13634   */\n      dup3\n        /* \"#utility.yul\":13616:13623   */\n      dup5\n        /* \"#utility.yul\":13612:13635   */\n      sub\n        /* \"#utility.yul\":13608:13640   */\n      slt\n        /* \"#utility.yul\":13605:13657   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":13653:13654   */\n      0x00\n        /* \"#utility.yul\":13650:13651   */\n      dup1\n        /* \"#utility.yul\":13643:13655   */\n      revert\n        /* \"#utility.yul\":13605:13657   */\n    tag_532:\n        /* \"#utility.yul\":13686:13695   */\n      dup2\n        /* \"#utility.yul\":13680:13696   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":13756:13758   */\n      dup1\n        /* \"#utility.yul\":13748:13754   */\n      dup3\n        /* \"#utility.yul\":13745:13759   */\n      gt\n        /* \"#utility.yul\":13742:13776   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":13772:13773   */\n      0x00\n        /* \"#utility.yul\":13769:13770   */\n      dup1\n        /* \"#utility.yul\":13762:13774   */\n      revert\n        /* \"#utility.yul\":13742:13776   */\n    tag_533:\n        /* \"#utility.yul\":13795:13817   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":13851:13857   */\n      0x0100\n        /* \"#utility.yul\":13833:13849   */\n      dup3\n      dup7\n      sub\n        /* \"#utility.yul\":13829:13858   */\n      slt\n        /* \"#utility.yul\":13826:13875   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":13871:13872   */\n      0x00\n        /* \"#utility.yul\":13868:13869   */\n      dup1\n        /* \"#utility.yul\":13861:13873   */\n      revert\n        /* \"#utility.yul\":13826:13875   */\n    tag_534:\n        /* \"#utility.yul\":13897:13919   */\n      tag_535\n      tag_379\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":13948:13950   */\n      dup3\n        /* \"#utility.yul\":13942:13951   */\n      mload\n        /* \"#utility.yul\":13935:13940   */\n      dup2\n        /* \"#utility.yul\":13928:13952   */\n      mstore\n        /* \"#utility.yul\":13991:13993   */\n      0x20\n        /* \"#utility.yul\":13987:13989   */\n      dup4\n        /* \"#utility.yul\":13983:13994   */\n      add\n        /* \"#utility.yul\":13977:13995   */\n      mload\n        /* \"#utility.yul\":14020:14022   */\n      dup3\n        /* \"#utility.yul\":14010:14018   */\n      dup2\n        /* \"#utility.yul\":14007:14023   */\n      gt\n        /* \"#utility.yul\":14004:14040   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":14036:14037   */\n      0x00\n        /* \"#utility.yul\":14033:14034   */\n      dup1\n        /* \"#utility.yul\":14026:14038   */\n      revert\n        /* \"#utility.yul\":14004:14040   */\n    tag_536:\n        /* \"#utility.yul\":14072:14128   */\n      tag_537\n        /* \"#utility.yul\":14120:14127   */\n      dup8\n        /* \"#utility.yul\":14109:14117   */\n      dup3\n        /* \"#utility.yul\":14105:14107   */\n      dup7\n        /* \"#utility.yul\":14101:14118   */\n      add\n        /* \"#utility.yul\":14072:14128   */\n      tag_392\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":14067:14069   */\n      0x20\n        /* \"#utility.yul\":14060:14065   */\n      dup4\n        /* \"#utility.yul\":14056:14070   */\n      add\n        /* \"#utility.yul\":14049:14129   */\n      mstore\n      pop\n        /* \"#utility.yul\":14175:14177   */\n      0x40\n        /* \"#utility.yul\":14171:14173   */\n      dup4\n        /* \"#utility.yul\":14167:14178   */\n      add\n        /* \"#utility.yul\":14161:14179   */\n      mload\n        /* \"#utility.yul\":14156:14158   */\n      0x40\n        /* \"#utility.yul\":14149:14154   */\n      dup3\n        /* \"#utility.yul\":14145:14159   */\n      add\n        /* \"#utility.yul\":14138:14180   */\n      mstore\n        /* \"#utility.yul\":14226:14228   */\n      0x60\n        /* \"#utility.yul\":14222:14224   */\n      dup4\n        /* \"#utility.yul\":14218:14229   */\n      add\n        /* \"#utility.yul\":14212:14230   */\n      mload\n        /* \"#utility.yul\":14207:14209   */\n      0x60\n        /* \"#utility.yul\":14200:14205   */\n      dup3\n        /* \"#utility.yul\":14196:14210   */\n      add\n        /* \"#utility.yul\":14189:14231   */\n      mstore\n        /* \"#utility.yul\":14264:14307   */\n      tag_538\n        /* \"#utility.yul\":14302:14305   */\n      0x80\n        /* \"#utility.yul\":14298:14300   */\n      dup5\n        /* \"#utility.yul\":14294:14306   */\n      add\n        /* \"#utility.yul\":14264:14307   */\n      tag_393\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14258:14261   */\n      0x80\n        /* \"#utility.yul\":14251:14256   */\n      dup3\n        /* \"#utility.yul\":14247:14262   */\n      add\n        /* \"#utility.yul\":14240:14308   */\n      mstore\n        /* \"#utility.yul\":14355:14358   */\n      0xa0\n        /* \"#utility.yul\":14351:14353   */\n      dup4\n        /* \"#utility.yul\":14347:14359   */\n      add\n        /* \"#utility.yul\":14341:14360   */\n      mload\n        /* \"#utility.yul\":14335:14338   */\n      0xa0\n        /* \"#utility.yul\":14328:14333   */\n      dup3\n        /* \"#utility.yul\":14324:14339   */\n      add\n        /* \"#utility.yul\":14317:14361   */\n      mstore\n        /* \"#utility.yul\":14400:14403   */\n      0xc0\n        /* \"#utility.yul\":14396:14398   */\n      dup4\n        /* \"#utility.yul\":14392:14404   */\n      add\n        /* \"#utility.yul\":14386:14405   */\n      mload\n        /* \"#utility.yul\":14430:14432   */\n      dup3\n        /* \"#utility.yul\":14420:14428   */\n      dup2\n        /* \"#utility.yul\":14417:14433   */\n      gt\n        /* \"#utility.yul\":14414:14450   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":14446:14447   */\n      0x00\n        /* \"#utility.yul\":14443:14444   */\n      dup1\n        /* \"#utility.yul\":14436:14448   */\n      revert\n        /* \"#utility.yul\":14414:14450   */\n    tag_539:\n        /* \"#utility.yul\":14483:14550   */\n      tag_540\n        /* \"#utility.yul\":14542:14549   */\n      dup8\n        /* \"#utility.yul\":14531:14539   */\n      dup3\n        /* \"#utility.yul\":14527:14529   */\n      dup7\n        /* \"#utility.yul\":14523:14540   */\n      add\n        /* \"#utility.yul\":14483:14550   */\n      tag_394\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":14477:14480   */\n      0xc0\n        /* \"#utility.yul\":14470:14475   */\n      dup4\n        /* \"#utility.yul\":14466:14481   */\n      add\n        /* \"#utility.yul\":14459:14551   */\n      mstore\n      pop\n        /* \"#utility.yul\":14590:14593   */\n      0xe0\n        /* \"#utility.yul\":14586:14588   */\n      dup4\n        /* \"#utility.yul\":14582:14594   */\n      add\n        /* \"#utility.yul\":14576:14595   */\n      mload\n        /* \"#utility.yul\":14620:14622   */\n      dup3\n        /* \"#utility.yul\":14610:14618   */\n      dup2\n        /* \"#utility.yul\":14607:14623   */\n      gt\n        /* \"#utility.yul\":14604:14640   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":14636:14637   */\n      0x00\n        /* \"#utility.yul\":14633:14634   */\n      dup1\n        /* \"#utility.yul\":14626:14638   */\n      revert\n        /* \"#utility.yul\":14604:14640   */\n    tag_541:\n        /* \"#utility.yul\":14673:14740   */\n      tag_542\n        /* \"#utility.yul\":14732:14739   */\n      dup8\n        /* \"#utility.yul\":14721:14729   */\n      dup3\n        /* \"#utility.yul\":14717:14719   */\n      dup7\n        /* \"#utility.yul\":14713:14730   */\n      add\n        /* \"#utility.yul\":14673:14740   */\n      tag_395\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":14667:14670   */\n      0xe0\n        /* \"#utility.yul\":14656:14671   */\n      dup4\n      add\n        /* \"#utility.yul\":14649:14741   */\n      mstore\n      pop\n        /* \"#utility.yul\":14660:14665   */\n      swap6\n        /* \"#utility.yul\":13489:14771   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15543:15671   */\n    tag_227:\n        /* \"#utility.yul\":15610:15619   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":15631:15642   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":15628:15665   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":15645:15663   */\n      tag_133\n      tag_391\n      jump\t// in\n        /* \"#utility.yul\":16085:16269   */\n    tag_237:\n        /* \"#utility.yul\":16155:16161   */\n      0x00\n        /* \"#utility.yul\":16208:16210   */\n      0x20\n        /* \"#utility.yul\":16196:16205   */\n      dup3\n        /* \"#utility.yul\":16187:16194   */\n      dup5\n        /* \"#utility.yul\":16183:16206   */\n      sub\n        /* \"#utility.yul\":16179:16211   */\n      slt\n        /* \"#utility.yul\":16176:16228   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":16224:16225   */\n      0x00\n        /* \"#utility.yul\":16221:16222   */\n      dup1\n        /* \"#utility.yul\":16214:16226   */\n      revert\n        /* \"#utility.yul\":16176:16228   */\n    tag_550:\n      pop\n        /* \"#utility.yul\":16247:16263   */\n      mload\n      swap2\n        /* \"#utility.yul\":16085:16269   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16629:16880   */\n    tag_245:\n        /* \"#utility.yul\":16699:16705   */\n      0x00\n        /* \"#utility.yul\":16752:16754   */\n      0x20\n        /* \"#utility.yul\":16740:16749   */\n      dup3\n        /* \"#utility.yul\":16731:16738   */\n      dup5\n        /* \"#utility.yul\":16727:16750   */\n      sub\n        /* \"#utility.yul\":16723:16755   */\n      slt\n        /* \"#utility.yul\":16720:16772   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":16768:16769   */\n      0x00\n        /* \"#utility.yul\":16765:16766   */\n      dup1\n        /* \"#utility.yul\":16758:16770   */\n      revert\n        /* \"#utility.yul\":16720:16772   */\n    tag_553:\n        /* \"#utility.yul\":16800:16809   */\n      dup2\n        /* \"#utility.yul\":16794:16810   */\n      mload\n        /* \"#utility.yul\":16819:16850   */\n      tag_292\n        /* \"#utility.yul\":16844:16849   */\n      dup2\n        /* \"#utility.yul\":16819:16850   */\n      tag_385\n      jump\t// in\n        /* \"#utility.yul\":17164:17441   */\n    tag_251:\n        /* \"#utility.yul\":17231:17237   */\n      0x00\n        /* \"#utility.yul\":17284:17286   */\n      0x20\n        /* \"#utility.yul\":17272:17281   */\n      dup3\n        /* \"#utility.yul\":17263:17270   */\n      dup5\n        /* \"#utility.yul\":17259:17282   */\n      sub\n        /* \"#utility.yul\":17255:17287   */\n      slt\n        /* \"#utility.yul\":17252:17304   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":17300:17301   */\n      0x00\n        /* \"#utility.yul\":17297:17298   */\n      dup1\n        /* \"#utility.yul\":17290:17302   */\n      revert\n        /* \"#utility.yul\":17252:17304   */\n    tag_557:\n        /* \"#utility.yul\":17332:17341   */\n      dup2\n        /* \"#utility.yul\":17326:17342   */\n      mload\n        /* \"#utility.yul\":17385:17390   */\n      dup1\n        /* \"#utility.yul\":17378:17391   */\n      iszero\n        /* \"#utility.yul\":17371:17392   */\n      iszero\n        /* \"#utility.yul\":17364:17369   */\n      dup2\n        /* \"#utility.yul\":17361:17393   */\n      eq\n        /* \"#utility.yul\":17351:17411   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":17407:17408   */\n      0x00\n        /* \"#utility.yul\":17404:17405   */\n      dup1\n        /* \"#utility.yul\":17397:17409   */\n      revert\n        /* \"#utility.yul\":17446:18375   */\n    tag_396:\n        /* \"#utility.yul\":17515:17520   */\n      0x00\n        /* \"#utility.yul\":17563:17567   */\n      0x80\n        /* \"#utility.yul\":17551:17560   */\n      dup3\n        /* \"#utility.yul\":17546:17549   */\n      dup5\n        /* \"#utility.yul\":17542:17561   */\n      sub\n        /* \"#utility.yul\":17538:17568   */\n      slt\n        /* \"#utility.yul\":17535:17585   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":17581:17582   */\n      0x00\n        /* \"#utility.yul\":17578:17579   */\n      dup1\n        /* \"#utility.yul\":17571:17583   */\n      revert\n        /* \"#utility.yul\":17535:17585   */\n    tag_560:\n        /* \"#utility.yul\":17603:17625   */\n      tag_561\n      tag_380\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":17594:17625   */\n      swap1\n      pop\n        /* \"#utility.yul\":17654:17663   */\n      dup2\n        /* \"#utility.yul\":17648:17664   */\n      mload\n        /* \"#utility.yul\":17641:17646   */\n      dup2\n        /* \"#utility.yul\":17634:17665   */\n      mstore\n        /* \"#utility.yul\":17718:17720   */\n      0x20\n        /* \"#utility.yul\":17707:17716   */\n      dup3\n        /* \"#utility.yul\":17703:17721   */\n      add\n        /* \"#utility.yul\":17697:17722   */\n      mload\n        /* \"#utility.yul\":17692:17694   */\n      0x20\n        /* \"#utility.yul\":17685:17690   */\n      dup3\n        /* \"#utility.yul\":17681:17695   */\n      add\n        /* \"#utility.yul\":17674:17723   */\n      mstore\n        /* \"#utility.yul\":17768:17770   */\n      0x40\n        /* \"#utility.yul\":17757:17766   */\n      dup3\n        /* \"#utility.yul\":17753:17771   */\n      add\n        /* \"#utility.yul\":17747:17772   */\n      mload\n        /* \"#utility.yul\":17781:17814   */\n      tag_562\n        /* \"#utility.yul\":17806:17813   */\n      dup2\n        /* \"#utility.yul\":17781:17814   */\n      tag_385\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":17841:17843   */\n      0x40\n        /* \"#utility.yul\":17830:17844   */\n      dup3\n      add\n        /* \"#utility.yul\":17823:17854   */\n      mstore\n        /* \"#utility.yul\":17898:17900   */\n      0x60\n        /* \"#utility.yul\":17883:17901   */\n      dup3\n      add\n        /* \"#utility.yul\":17877:17902   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":17951:17965   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":17948:17982   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":17978:17979   */\n      0x00\n        /* \"#utility.yul\":17975:17976   */\n      dup1\n        /* \"#utility.yul\":17968:17980   */\n      revert\n        /* \"#utility.yul\":17948:17982   */\n    tag_563:\n        /* \"#utility.yul\":18001:18023   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":18053:18055   */\n      0x40\n        /* \"#utility.yul\":18039:18051   */\n      dup3\n      dup7\n      sub\n        /* \"#utility.yul\":18035:18056   */\n      slt\n        /* \"#utility.yul\":18032:18073   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":18069:18070   */\n      0x00\n        /* \"#utility.yul\":18066:18067   */\n      dup1\n        /* \"#utility.yul\":18059:18071   */\n      revert\n        /* \"#utility.yul\":18032:18073   */\n    tag_564:\n        /* \"#utility.yul\":18097:18119   */\n      tag_565\n      tag_381\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18150:18152   */\n      dup3\n        /* \"#utility.yul\":18144:18153   */\n      mload\n        /* \"#utility.yul\":18135:18142   */\n      dup2\n        /* \"#utility.yul\":18128:18154   */\n      mstore\n        /* \"#utility.yul\":18193:18195   */\n      0x20\n        /* \"#utility.yul\":18189:18191   */\n      dup4\n        /* \"#utility.yul\":18185:18196   */\n      add\n        /* \"#utility.yul\":18179:18197   */\n      mload\n        /* \"#utility.yul\":18222:18224   */\n      dup3\n        /* \"#utility.yul\":18212:18220   */\n      dup2\n        /* \"#utility.yul\":18209:18225   */\n      gt\n        /* \"#utility.yul\":18206:18242   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":18238:18239   */\n      0x00\n        /* \"#utility.yul\":18235:18236   */\n      dup1\n        /* \"#utility.yul\":18228:18240   */\n      revert\n        /* \"#utility.yul\":18206:18242   */\n    tag_566:\n        /* \"#utility.yul\":18276:18328   */\n      tag_567\n        /* \"#utility.yul\":18324:18327   */\n      dup8\n        /* \"#utility.yul\":18313:18321   */\n      dup3\n        /* \"#utility.yul\":18309:18311   */\n      dup7\n        /* \"#utility.yul\":18305:18322   */\n      add\n        /* \"#utility.yul\":18276:18328   */\n      tag_392\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":18271:18273   */\n      0x20\n        /* \"#utility.yul\":18258:18274   */\n      dup4\n      add\n        /* \"#utility.yul\":18251:18329   */\n      mstore\n      pop\n        /* \"#utility.yul\":18356:18358   */\n      0x60\n        /* \"#utility.yul\":18345:18359   */\n      dup5\n      add\n        /* \"#utility.yul\":18338:18369   */\n      mstore\n      pop\n        /* \"#utility.yul\":18349:18354   */\n      swap1\n      swap4\n        /* \"#utility.yul\":17446:18375   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18380:20503   */\n    tag_255:\n        /* \"#utility.yul\":18509:18515   */\n      0x00\n        /* \"#utility.yul\":18540:18542   */\n      0x20\n        /* \"#utility.yul\":18583:18585   */\n      dup1\n        /* \"#utility.yul\":18571:18580   */\n      dup4\n        /* \"#utility.yul\":18562:18569   */\n      dup6\n        /* \"#utility.yul\":18558:18581   */\n      sub\n        /* \"#utility.yul\":18554:18586   */\n      slt\n        /* \"#utility.yul\":18551:18603   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":18599:18600   */\n      0x00\n        /* \"#utility.yul\":18596:18597   */\n      dup1\n        /* \"#utility.yul\":18589:18601   */\n      revert\n        /* \"#utility.yul\":18551:18603   */\n    tag_569:\n        /* \"#utility.yul\":18632:18641   */\n      dup3\n        /* \"#utility.yul\":18626:18642   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":18702:18704   */\n      dup1\n        /* \"#utility.yul\":18694:18700   */\n      dup3\n        /* \"#utility.yul\":18691:18705   */\n      gt\n        /* \"#utility.yul\":18688:18722   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":18718:18719   */\n      0x00\n        /* \"#utility.yul\":18715:18716   */\n      dup1\n        /* \"#utility.yul\":18708:18720   */\n      revert\n        /* \"#utility.yul\":18688:18722   */\n    tag_570:\n        /* \"#utility.yul\":18756:18762   */\n      dup2\n        /* \"#utility.yul\":18745:18754   */\n      dup6\n        /* \"#utility.yul\":18741:18763   */\n      add\n        /* \"#utility.yul\":18731:18763   */\n      swap2\n      pop\n        /* \"#utility.yul\":18801:18808   */\n      dup6\n        /* \"#utility.yul\":18794:18798   */\n      0x1f\n        /* \"#utility.yul\":18790:18792   */\n      dup4\n        /* \"#utility.yul\":18786:18799   */\n      add\n        /* \"#utility.yul\":18782:18809   */\n      slt\n        /* \"#utility.yul\":18772:18827   */\n      tag_571\n      jumpi\n        /* \"#utility.yul\":18823:18824   */\n      0x00\n        /* \"#utility.yul\":18820:18821   */\n      dup1\n        /* \"#utility.yul\":18813:18825   */\n      revert\n        /* \"#utility.yul\":18772:18827   */\n    tag_571:\n        /* \"#utility.yul\":18852:18854   */\n      dup2\n        /* \"#utility.yul\":18846:18855   */\n      mload\n        /* \"#utility.yul\":18875:18935   */\n      tag_572\n        /* \"#utility.yul\":18891:18934   */\n      tag_426\n        /* \"#utility.yul\":18931:18933   */\n      dup3\n        /* \"#utility.yul\":18891:18934   */\n      tag_384\n      jump\t// in\n        /* \"#utility.yul\":18875:18935   */\n    tag_572:\n        /* \"#utility.yul\":18969:18984   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":19051:19052   */\n      0x05\n        /* \"#utility.yul\":19047:19057   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":19039:19058   */\n      dup4\n      add\n        /* \"#utility.yul\":19035:19063   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":19000:19012   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":19075:19094   */\n      dup9\n      dup4\n      gt\n        /* \"#utility.yul\":19072:19111   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":19107:19108   */\n      0x00\n        /* \"#utility.yul\":19104:19105   */\n      dup1\n        /* \"#utility.yul\":19097:19109   */\n      revert\n        /* \"#utility.yul\":19072:19111   */\n    tag_574:\n        /* \"#utility.yul\":19139:19141   */\n      dup6\n        /* \"#utility.yul\":19135:19137   */\n      dup6\n        /* \"#utility.yul\":19131:19142   */\n      add\n        /* \"#utility.yul\":19151:20473   */\n    tag_575:\n        /* \"#utility.yul\":19167:19173   */\n      dup4\n        /* \"#utility.yul\":19162:19165   */\n      dup2\n        /* \"#utility.yul\":19159:19174   */\n      lt\n        /* \"#utility.yul\":19151:20473   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":19246:19249   */\n      dup1\n        /* \"#utility.yul\":19240:19250   */\n      mload\n        /* \"#utility.yul\":19282:19284   */\n      dup6\n        /* \"#utility.yul\":19269:19280   */\n      dup2\n        /* \"#utility.yul\":19266:19285   */\n      gt\n        /* \"#utility.yul\":19263:19372   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":19326:19327   */\n      0x00\n        /* \"#utility.yul\":19355:19357   */\n      dup1\n        /* \"#utility.yul\":19351:19353   */\n      dup2\n        /* \"#utility.yul\":19344:19358   */\n      revert\n        /* \"#utility.yul\":19263:19372   */\n    tag_578:\n        /* \"#utility.yul\":19395:19415   */\n      dup7\n      add\n        /* \"#utility.yul\":19438:19442   */\n      0xe0\n        /* \"#utility.yul\":19466:19482   */\n      dup2\n      dup13\n      sub\n      not(0x1f)\n        /* \"#utility.yul\":19462:19492   */\n      add\n        /* \"#utility.yul\":19458:19497   */\n      dup2\n      sgt\n        /* \"#utility.yul\":19455:19584   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":19538:19539   */\n      0x00\n        /* \"#utility.yul\":19567:19569   */\n      dup1\n        /* \"#utility.yul\":19563:19565   */\n      dup2\n        /* \"#utility.yul\":19556:19570   */\n      revert\n        /* \"#utility.yul\":19455:19584   */\n    tag_579:\n        /* \"#utility.yul\":19610:19632   */\n      tag_580\n      tag_382\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":19673:19675   */\n      dup10\n        /* \"#utility.yul\":19669:19671   */\n      dup4\n        /* \"#utility.yul\":19665:19676   */\n      add\n        /* \"#utility.yul\":19659:19677   */\n      mload\n        /* \"#utility.yul\":19652:19657   */\n      dup2\n        /* \"#utility.yul\":19645:19678   */\n      mstore\n        /* \"#utility.yul\":19701:19703   */\n      0x40\n        /* \"#utility.yul\":19746:19748   */\n      dup1\n        /* \"#utility.yul\":19742:19744   */\n      dup5\n        /* \"#utility.yul\":19738:19749   */\n      add\n        /* \"#utility.yul\":19732:19750   */\n      mload\n        /* \"#utility.yul\":19779:19781   */\n      dup10\n        /* \"#utility.yul\":19769:19777   */\n      dup2\n        /* \"#utility.yul\":19766:19782   */\n      gt\n        /* \"#utility.yul\":19763:19872   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":19824:19825   */\n      0x00\n        /* \"#utility.yul\":19854:19857   */\n      dup1\n        /* \"#utility.yul\":19849:19852   */\n      dup2\n        /* \"#utility.yul\":19842:19858   */\n      revert\n        /* \"#utility.yul\":19763:19872   */\n    tag_581:\n        /* \"#utility.yul\":19908:19985   */\n      tag_582\n        /* \"#utility.yul\":19977:19984   */\n      dup16\n        /* \"#utility.yul\":19972:19974   */\n      dup14\n        /* \"#utility.yul\":19961:19969   */\n      dup4\n        /* \"#utility.yul\":19957:19959   */\n      dup9\n        /* \"#utility.yul\":19953:19970   */\n      add\n        /* \"#utility.yul\":19949:19975   */\n      add\n        /* \"#utility.yul\":19908:19985   */\n      tag_396\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":19903:19905   */\n      dup13\n        /* \"#utility.yul\":19896:19901   */\n      dup5\n        /* \"#utility.yul\":19892:19906   */\n      add\n        /* \"#utility.yul\":19885:19986   */\n      mstore\n      pop\n        /* \"#utility.yul\":20010:20012   */\n      0x60\n        /* \"#utility.yul\":20062:20065   */\n      dup1\n        /* \"#utility.yul\":20058:20060   */\n      dup6\n        /* \"#utility.yul\":20054:20066   */\n      add\n        /* \"#utility.yul\":20048:20067   */\n      mload\n        /* \"#utility.yul\":20043:20045   */\n      dup3\n        /* \"#utility.yul\":20036:20041   */\n      dup5\n        /* \"#utility.yul\":20032:20046   */\n      add\n        /* \"#utility.yul\":20025:20068   */\n      mstore\n        /* \"#utility.yul\":20092:20095   */\n      0x80\n        /* \"#utility.yul\":20081:20095   */\n      swap2\n      pop\n        /* \"#utility.yul\":20146:20149   */\n      dup2\n        /* \"#utility.yul\":20142:20144   */\n      dup6\n        /* \"#utility.yul\":20138:20150   */\n      add\n        /* \"#utility.yul\":20132:20151   */\n      mload\n        /* \"#utility.yul\":20126:20129   */\n      dup2\n        /* \"#utility.yul\":20119:20124   */\n      dup5\n        /* \"#utility.yul\":20115:20130   */\n      add\n        /* \"#utility.yul\":20108:20152   */\n      mstore\n      pop\n        /* \"#utility.yul\":20176:20179   */\n      0xa0\n        /* \"#utility.yul\":20230:20233   */\n      dup1\n        /* \"#utility.yul\":20226:20228   */\n      dup6\n        /* \"#utility.yul\":20222:20234   */\n      add\n        /* \"#utility.yul\":20216:20235   */\n      mload\n        /* \"#utility.yul\":20210:20213   */\n      dup3\n        /* \"#utility.yul\":20203:20208   */\n      dup5\n        /* \"#utility.yul\":20199:20214   */\n      add\n        /* \"#utility.yul\":20192:20236   */\n      mstore\n        /* \"#utility.yul\":20260:20263   */\n      0xc0\n        /* \"#utility.yul\":20249:20263   */\n      swap2\n      pop\n        /* \"#utility.yul\":20314:20317   */\n      dup2\n        /* \"#utility.yul\":20310:20312   */\n      dup6\n        /* \"#utility.yul\":20306:20318   */\n      add\n        /* \"#utility.yul\":20300:20319   */\n      mload\n        /* \"#utility.yul\":20294:20297   */\n      dup2\n        /* \"#utility.yul\":20287:20292   */\n      dup5\n        /* \"#utility.yul\":20283:20298   */\n      add\n        /* \"#utility.yul\":20276:20320   */\n      mstore\n      pop\n        /* \"#utility.yul\":20357:20399   */\n      tag_583\n        /* \"#utility.yul\":20395:20397   */\n      dup4\n        /* \"#utility.yul\":20391:20393   */\n      dup6\n        /* \"#utility.yul\":20387:20398   */\n      add\n        /* \"#utility.yul\":20357:20399   */\n      tag_393\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":20340:20355   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":20333:20400   */\n      mstore\n        /* \"#utility.yul\":20413:20431   */\n      dup6\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":20451:20463   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"#utility.yul\":19184:19196   */\n      dup7\n      add\n        /* \"#utility.yul\":19151:20473   */\n      jump(tag_575)\n    tag_577:\n      pop\n        /* \"#utility.yul\":20492:20497   */\n      swap9\n        /* \"#utility.yul\":18380:20503   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21117:21540   */\n    tag_281:\n        /* \"#utility.yul\":21222:21228   */\n      0x00\n        /* \"#utility.yul\":21275:21277   */\n      0x40\n        /* \"#utility.yul\":21263:21272   */\n      dup3\n        /* \"#utility.yul\":21254:21261   */\n      dup5\n        /* \"#utility.yul\":21250:21273   */\n      sub\n        /* \"#utility.yul\":21246:21278   */\n      slt\n        /* \"#utility.yul\":21243:21295   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":21291:21292   */\n      0x00\n        /* \"#utility.yul\":21288:21289   */\n      dup1\n        /* \"#utility.yul\":21281:21293   */\n      revert\n        /* \"#utility.yul\":21243:21295   */\n    tag_589:\n        /* \"#utility.yul\":21317:21339   */\n      tag_590\n      tag_381\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":21369:21378   */\n      dup3\n        /* \"#utility.yul\":21363:21379   */\n      mload\n        /* \"#utility.yul\":21388:21421   */\n      tag_591\n        /* \"#utility.yul\":21413:21420   */\n      dup2\n        /* \"#utility.yul\":21388:21421   */\n      tag_385\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":21430:21452   */\n      dup2\n      mstore\n        /* \"#utility.yul\":21505:21507   */\n      0x20\n        /* \"#utility.yul\":21490:21508   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":21484:21509   */\n      mload\n        /* \"#utility.yul\":21468:21482   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":21461:21510   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":21437:21442   */\n      swap2\n        /* \"#utility.yul\":21117:21540   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22973:23292   */\n    tag_365:\n        /* \"#utility.yul\":23162:23187   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":23150:23152   */\n      0x40\n        /* \"#utility.yul\":23135:23153   */\n      dup2\n      add\n        /* \"#utility.yul\":23217:23218   */\n      0x05\n        /* \"#utility.yul\":23206:23219   */\n      dup4\n      lt\n        /* \"#utility.yul\":23196:23243   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":23223:23241   */\n      tag_600\n      tag_390\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":23279:23285   */\n      dup3\n        /* \"#utility.yul\":23274:23276   */\n      0x20\n        /* \"#utility.yul\":23263:23272   */\n      dup4\n        /* \"#utility.yul\":23259:23277   */\n      add\n        /* \"#utility.yul\":23252:23286   */\n      mstore\n        /* \"#utility.yul\":22973:23292   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23297:23677   */\n    tag_397:\n        /* \"#utility.yul\":23376:23377   */\n      0x01\n        /* \"#utility.yul\":23372:23384   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":23419:23431   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":23440:23501   */\n      tag_602\n      jumpi\n        /* \"#utility.yul\":23494:23498   */\n      0x7f\n        /* \"#utility.yul\":23486:23492   */\n      dup3\n        /* \"#utility.yul\":23482:23499   */\n      and\n        /* \"#utility.yul\":23472:23499   */\n      swap2\n      pop\n        /* \"#utility.yul\":23440:23501   */\n    tag_602:\n        /* \"#utility.yul\":23547:23549   */\n      0x20\n        /* \"#utility.yul\":23539:23545   */\n      dup3\n        /* \"#utility.yul\":23536:23550   */\n      lt\n        /* \"#utility.yul\":23516:23534   */\n      dup2\n        /* \"#utility.yul\":23513:23551   */\n      sub\n        /* \"#utility.yul\":23510:23671   */\n      tag_603\n      jumpi\n        /* \"#utility.yul\":23593:23603   */\n      0x4e487b71\n        /* \"#utility.yul\":23588:23591   */\n      0xe0\n        /* \"#utility.yul\":23584:23604   */\n      shl\n        /* \"#utility.yul\":23581:23582   */\n      0x00\n        /* \"#utility.yul\":23574:23605   */\n      mstore\n        /* \"#utility.yul\":23628:23632   */\n      0x22\n        /* \"#utility.yul\":23625:23626   */\n      0x04\n        /* \"#utility.yul\":23618:23633   */\n      mstore\n        /* \"#utility.yul\":23656:23660   */\n      0x24\n        /* \"#utility.yul\":23653:23654   */\n      0x00\n        /* \"#utility.yul\":23646:23661   */\n      revert\n        /* \"#utility.yul\":23510:23671   */\n    tag_603:\n      pop\n        /* \"#utility.yul\":23297:23677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23808:24351   */\n    tag_399:\n        /* \"#utility.yul\":23910:23912   */\n      0x1f\n        /* \"#utility.yul\":23905:23908   */\n      dup3\n        /* \"#utility.yul\":23902:23913   */\n      gt\n        /* \"#utility.yul\":23899:24345   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":23946:23947   */\n      0x00\n        /* \"#utility.yul\":23970:23975   */\n      dup2\n        /* \"#utility.yul\":23967:23968   */\n      0x00\n        /* \"#utility.yul\":23960:23976   */\n      mstore\n        /* \"#utility.yul\":24014:24018   */\n      0x20\n        /* \"#utility.yul\":24011:24012   */\n      0x00\n        /* \"#utility.yul\":24001:24019   */\n      keccak256\n        /* \"#utility.yul\":24084:24086   */\n      0x1f\n        /* \"#utility.yul\":24072:24082   */\n      dup6\n        /* \"#utility.yul\":24068:24087   */\n      add\n        /* \"#utility.yul\":24065:24066   */\n      0x05\n        /* \"#utility.yul\":24061:24088   */\n      shr\n        /* \"#utility.yul\":24055:24059   */\n      dup2\n        /* \"#utility.yul\":24051:24089   */\n      add\n        /* \"#utility.yul\":24120:24124   */\n      0x20\n        /* \"#utility.yul\":24108:24118   */\n      dup7\n        /* \"#utility.yul\":24105:24125   */\n      lt\n        /* \"#utility.yul\":24102:24149   */\n      iszero\n      tag_607\n      jumpi\n      pop\n        /* \"#utility.yul\":24143:24147   */\n      dup1\n        /* \"#utility.yul\":24102:24149   */\n    tag_607:\n        /* \"#utility.yul\":24198:24200   */\n      0x1f\n        /* \"#utility.yul\":24193:24196   */\n      dup6\n        /* \"#utility.yul\":24189:24201   */\n      add\n        /* \"#utility.yul\":24186:24187   */\n      0x05\n        /* \"#utility.yul\":24182:24202   */\n      shr\n        /* \"#utility.yul\":24176:24180   */\n      dup3\n        /* \"#utility.yul\":24172:24203   */\n      add\n        /* \"#utility.yul\":24162:24203   */\n      swap2\n      pop\n        /* \"#utility.yul\":24253:24335   */\n    tag_608:\n        /* \"#utility.yul\":24271:24273   */\n      dup2\n        /* \"#utility.yul\":24264:24269   */\n      dup2\n        /* \"#utility.yul\":24261:24274   */\n      lt\n        /* \"#utility.yul\":24253:24335   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":24316:24333   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":24297:24298   */\n      0x01\n        /* \"#utility.yul\":24286:24299   */\n      add\n        /* \"#utility.yul\":24253:24335   */\n      jump(tag_608)\n    tag_610:\n        /* \"#utility.yul\":24257:24260   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23808:24351   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24527:25872   */\n    tag_372:\n        /* \"#utility.yul\":24653:24656   */\n      dup2\n        /* \"#utility.yul\":24647:24657   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":24672:24678   */\n      dup2\n        /* \"#utility.yul\":24669:24699   */\n      gt\n        /* \"#utility.yul\":24666:24722   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":24702:24720   */\n      tag_614\n      tag_148\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":24731:24828   */\n      tag_615\n        /* \"#utility.yul\":24821:24827   */\n      dup2\n        /* \"#utility.yul\":24781:24819   */\n      tag_616\n        /* \"#utility.yul\":24813:24817   */\n      dup5\n        /* \"#utility.yul\":24807:24818   */\n      sload\n        /* \"#utility.yul\":24781:24819   */\n      tag_397\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":24775:24779   */\n      dup5\n        /* \"#utility.yul\":24731:24828   */\n      tag_399\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":24883:24887   */\n      0x20\n      dup1\n        /* \"#utility.yul\":24940:24942   */\n      0x1f\n        /* \"#utility.yul\":24929:24943   */\n      dup4\n      gt\n        /* \"#utility.yul\":24957:24958   */\n      0x01\n        /* \"#utility.yul\":24952:25615   */\n      dup2\n      eq\n      tag_618\n      jumpi\n        /* \"#utility.yul\":25659:25660   */\n      0x00\n        /* \"#utility.yul\":25676:25682   */\n      dup5\n        /* \"#utility.yul\":25673:25762   */\n      iszero\n      tag_619\n      jumpi\n      pop\n        /* \"#utility.yul\":25728:25747   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":25722:25748   */\n      mload\n        /* \"#utility.yul\":25673:25762   */\n    tag_619:\n      not(0x00)\n        /* \"#utility.yul\":24484:24485   */\n      0x03\n        /* \"#utility.yul\":24480:24491   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":24476:24500   */\n      shr\n        /* \"#utility.yul\":24472:24501   */\n      not\n        /* \"#utility.yul\":24462:24502   */\n      and\n        /* \"#utility.yul\":24508:24509   */\n      0x01\n        /* \"#utility.yul\":24504:24515   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":24459:24516   */\n      or\n        /* \"#utility.yul\":25775:25856   */\n      dup6\n      sstore\n        /* \"#utility.yul\":24922:25866   */\n      jump(tag_610)\n        /* \"#utility.yul\":24952:25615   */\n    tag_618:\n        /* \"#utility.yul\":23755:23756   */\n      0x00\n        /* \"#utility.yul\":23748:23762   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":23792:23796   */\n      0x20\n        /* \"#utility.yul\":23779:23797   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":24988:25008   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":25106:25342   */\n    tag_622:\n        /* \"#utility.yul\":25120:25127   */\n      dup3\n        /* \"#utility.yul\":25117:25118   */\n      dup2\n        /* \"#utility.yul\":25114:25128   */\n      lt\n        /* \"#utility.yul\":25106:25342   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":25209:25228   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":25203:25229   */\n      mload\n        /* \"#utility.yul\":25188:25230   */\n      dup3\n      sstore\n        /* \"#utility.yul\":25301:25328   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":25269:25270   */\n      0x01\n        /* \"#utility.yul\":25257:25271   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":25136:25155   */\n      dup5\n      add\n        /* \"#utility.yul\":25106:25342   */\n      jump(tag_622)\n    tag_624:\n        /* \"#utility.yul\":25110:25113   */\n      pop\n        /* \"#utility.yul\":25370:25376   */\n      dup6\n        /* \"#utility.yul\":25361:25368   */\n      dup3\n        /* \"#utility.yul\":25358:25377   */\n      lt\n        /* \"#utility.yul\":25355:25556   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":25431:25450   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":25425:25451   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":25514:25515   */\n      0x03\n        /* \"#utility.yul\":25510:25524   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":25526:25529   */\n      0xf8\n        /* \"#utility.yul\":25506:25530   */\n      and\n        /* \"#utility.yul\":25502:25539   */\n      shr\n        /* \"#utility.yul\":25498:25540   */\n      not\n        /* \"#utility.yul\":25483:25541   */\n      and\n        /* \"#utility.yul\":25468:25542   */\n      dup2\n      sstore\n        /* \"#utility.yul\":25355:25556   */\n    tag_625:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25602:25603   */\n      0x01\n        /* \"#utility.yul\":25586:25600   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":25582:25604   */\n      add\n        /* \"#utility.yul\":25569:25605   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":24527:25872   */\n      jump\t// out\n        /* \"#utility.yul\":25877:26012   */\n    tag_378:\n        /* \"#utility.yul\":25916:25919   */\n      0x00\n        /* \"#utility.yul\":25937:25954   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":25934:25977   */\n      tag_628\n      jumpi\n        /* \"#utility.yul\":25957:25975   */\n      tag_628\n      tag_391\n      jump\t// in\n    tag_628:\n      pop\n        /* \"#utility.yul\":26004:26005   */\n      0x01\n        /* \"#utility.yul\":25993:26006   */\n      add\n      swap1\n        /* \"#utility.yul\":25877:26012   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206fa922810d036d6123da454c079629c1bff0a1ad52c185aa505154b3c2f1025f64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_179": {
									"entryPoint": null,
									"id": 179,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_865": {
									"entryPoint": null,
									"id": 865,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_string_memory_ptr_fromMemory": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2053:13",
										"nodeType": "YulBlock",
										"src": "0:2053:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:13",
													"nodeType": "YulBlock",
													"src": "74:117:13",
													"statements": [
														{
															"nativeSrc": "84:22:13",
															"nodeType": "YulAssignment",
															"src": "84:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:13"
																},
																"nativeSrc": "93:13:13",
																"nodeType": "YulFunctionCall",
																"src": "93:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:13",
																"nodeType": "YulBlock",
																"src": "169:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:13",
																					"nodeType": "YulLiteral",
																					"src": "178:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:13",
																					"nodeType": "YulLiteral",
																					"src": "181:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:13"
																			},
																			"nativeSrc": "171:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:13"
																		},
																		"nativeSrc": "171:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:13",
																										"nodeType": "YulLiteral",
																										"src": "154:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:13",
																										"nodeType": "YulLiteral",
																										"src": "159:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:13"
																								},
																								"nativeSrc": "150:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:13",
																								"nodeType": "YulLiteral",
																								"src": "163:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:13"
																						},
																						"nativeSrc": "146:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:13"
																				},
																				"nativeSrc": "135:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:13"
																		},
																		"nativeSrc": "125:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:13"
																},
																"nativeSrc": "118:50:13",
																"nodeType": "YulFunctionCall",
																"src": "118:50:13"
															},
															"nativeSrc": "115:70:13",
															"nodeType": "YulIf",
															"src": "115:70:13"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:13",
														"nodeType": "YulTypedName",
														"src": "53:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:13",
														"nodeType": "YulTypedName",
														"src": "64:5:13",
														"type": ""
													}
												],
												"src": "14:177:13"
											},
											{
												"body": {
													"nativeSrc": "228:95:13",
													"nodeType": "YulBlock",
													"src": "228:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:13",
																		"nodeType": "YulLiteral",
																		"src": "245:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "252:3:13",
																				"nodeType": "YulLiteral",
																				"src": "252:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "257:10:13",
																				"nodeType": "YulLiteral",
																				"src": "257:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "248:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:13"
																		},
																		"nativeSrc": "248:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:13"
																},
																"nativeSrc": "238:31:13",
																"nodeType": "YulFunctionCall",
																"src": "238:31:13"
															},
															"nativeSrc": "238:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "238:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:13",
																		"nodeType": "YulLiteral",
																		"src": "285:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "288:4:13",
																		"nodeType": "YulLiteral",
																		"src": "288:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:13"
																},
																"nativeSrc": "278:15:13",
																"nodeType": "YulFunctionCall",
																"src": "278:15:13"
															},
															"nativeSrc": "278:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "278:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "309:1:13",
																		"nodeType": "YulLiteral",
																		"src": "309:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "312:4:13",
																		"nodeType": "YulLiteral",
																		"src": "312:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "302:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:13"
																},
																"nativeSrc": "302:15:13",
																"nodeType": "YulFunctionCall",
																"src": "302:15:13"
															},
															"nativeSrc": "302:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "302:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:13"
											},
											{
												"body": {
													"nativeSrc": "394:184:13",
													"nodeType": "YulBlock",
													"src": "394:184:13",
													"statements": [
														{
															"nativeSrc": "404:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "404:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "413:1:13",
																"nodeType": "YulLiteral",
																"src": "413:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "408:1:13",
																	"nodeType": "YulTypedName",
																	"src": "408:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "473:63:13",
																"nodeType": "YulBlock",
																"src": "473:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "498:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "498:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "503:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "503:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "494:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "494:3:13"
																					},
																					"nativeSrc": "494:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "494:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "517:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "517:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "522:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "522:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "513:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "513:3:13"
																							},
																							"nativeSrc": "513:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "513:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "507:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "507:5:13"
																					},
																					"nativeSrc": "507:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "507:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "487:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "487:6:13"
																			},
																			"nativeSrc": "487:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "487:39:13"
																		},
																		"nativeSrc": "487:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "487:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "434:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "434:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "437:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "431:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "431:2:13"
																},
																"nativeSrc": "431:13:13",
																"nodeType": "YulFunctionCall",
																"src": "431:13:13"
															},
															"nativeSrc": "423:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "445:19:13",
																"nodeType": "YulBlock",
																"src": "445:19:13",
																"statements": [
																	{
																		"nativeSrc": "447:15:13",
																		"nodeType": "YulAssignment",
																		"src": "447:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "456:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "456:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "459:2:13",
																					"nodeType": "YulLiteral",
																					"src": "459:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "452:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "452:3:13"
																			},
																			"nativeSrc": "452:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "452:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "447:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "447:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "427:3:13",
																"nodeType": "YulBlock",
																"src": "427:3:13",
																"statements": []
															},
															"src": "423:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "556:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "556:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "561:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "561:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "552:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:13"
																		},
																		"nativeSrc": "552:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "552:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "570:1:13",
																		"nodeType": "YulLiteral",
																		"src": "570:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "545:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:13"
																},
																"nativeSrc": "545:27:13",
																"nodeType": "YulFunctionCall",
																"src": "545:27:13"
															},
															"nativeSrc": "545:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "545:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "328:250:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "372:3:13",
														"nodeType": "YulTypedName",
														"src": "372:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "377:3:13",
														"nodeType": "YulTypedName",
														"src": "377:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "382:6:13",
														"nodeType": "YulTypedName",
														"src": "382:6:13",
														"type": ""
													}
												],
												"src": "328:250:13"
											},
											{
												"body": {
													"nativeSrc": "708:942:13",
													"nodeType": "YulBlock",
													"src": "708:942:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "754:16:13",
																"nodeType": "YulBlock",
																"src": "754:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "763:1:13",
																					"nodeType": "YulLiteral",
																					"src": "763:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "766:1:13",
																					"nodeType": "YulLiteral",
																					"src": "766:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "756:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "756:6:13"
																			},
																			"nativeSrc": "756:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "756:12:13"
																		},
																		"nativeSrc": "756:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "756:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "729:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "729:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "738:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "725:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "725:3:13"
																		},
																		"nativeSrc": "725:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "725:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "750:2:13",
																		"nodeType": "YulLiteral",
																		"src": "750:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "721:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "721:3:13"
																},
																"nativeSrc": "721:32:13",
																"nodeType": "YulFunctionCall",
																"src": "721:32:13"
															},
															"nativeSrc": "718:52:13",
															"nodeType": "YulIf",
															"src": "718:52:13"
														},
														{
															"nativeSrc": "779:50:13",
															"nodeType": "YulAssignment",
															"src": "779:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "819:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "819:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "789:29:13",
																	"nodeType": "YulIdentifier",
																	"src": "789:29:13"
																},
																"nativeSrc": "789:40:13",
																"nodeType": "YulFunctionCall",
																"src": "789:40:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "779:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "779:6:13"
																}
															]
														},
														{
															"nativeSrc": "838:59:13",
															"nodeType": "YulAssignment",
															"src": "838:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "882:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "882:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "893:2:13",
																				"nodeType": "YulLiteral",
																				"src": "893:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "878:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:13"
																		},
																		"nativeSrc": "878:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "878:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "848:29:13",
																	"nodeType": "YulIdentifier",
																	"src": "848:29:13"
																},
																"nativeSrc": "848:49:13",
																"nodeType": "YulFunctionCall",
																"src": "848:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "838:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "838:6:13"
																}
															]
														},
														{
															"nativeSrc": "906:39:13",
															"nodeType": "YulVariableDeclaration",
															"src": "906:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "930:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:2:13",
																				"nodeType": "YulLiteral",
																				"src": "941:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "926:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:13"
																		},
																		"nativeSrc": "926:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "926:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "920:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "920:5:13"
																},
																"nativeSrc": "920:25:13",
																"nodeType": "YulFunctionCall",
																"src": "920:25:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "910:6:13",
																	"nodeType": "YulTypedName",
																	"src": "910:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "954:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "954:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "972:2:13",
																				"nodeType": "YulLiteral",
																				"src": "972:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "976:1:13",
																				"nodeType": "YulLiteral",
																				"src": "976:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "968:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "968:3:13"
																		},
																		"nativeSrc": "968:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "968:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "980:1:13",
																		"nodeType": "YulLiteral",
																		"src": "980:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "964:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "964:3:13"
																},
																"nativeSrc": "964:18:13",
																"nodeType": "YulFunctionCall",
																"src": "964:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "958:2:13",
																	"nodeType": "YulTypedName",
																	"src": "958:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1009:16:13",
																"nodeType": "YulBlock",
																"src": "1009:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1018:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1018:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1021:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1021:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1011:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1011:6:13"
																			},
																			"nativeSrc": "1011:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1011:12:13"
																		},
																		"nativeSrc": "1011:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1011:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "997:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "997:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1005:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1005:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "994:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "994:2:13"
																},
																"nativeSrc": "994:14:13",
																"nodeType": "YulFunctionCall",
																"src": "994:14:13"
															},
															"nativeSrc": "991:34:13",
															"nodeType": "YulIf",
															"src": "991:34:13"
														},
														{
															"nativeSrc": "1034:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1034:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1048:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1048:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1059:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1059:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1044:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1044:3:13"
																},
																"nativeSrc": "1044:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1044:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1038:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1038:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1114:16:13",
																"nodeType": "YulBlock",
																"src": "1114:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1123:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1123:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1126:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1116:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1116:6:13"
																			},
																			"nativeSrc": "1116:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1116:12:13"
																		},
																		"nativeSrc": "1116:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1093:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1093:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1097:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1097:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1089:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1089:3:13"
																				},
																				"nativeSrc": "1089:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1089:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1104:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1104:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1085:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1085:3:13"
																		},
																		"nativeSrc": "1085:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1085:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1078:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:13"
																},
																"nativeSrc": "1078:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1078:35:13"
															},
															"nativeSrc": "1075:55:13",
															"nodeType": "YulIf",
															"src": "1075:55:13"
														},
														{
															"nativeSrc": "1139:19:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1139:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1155:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1155:2:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1149:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1149:5:13"
																},
																"nativeSrc": "1149:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1149:9:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "1143:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1143:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1181:22:13",
																"nodeType": "YulBlock",
																"src": "1181:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1183:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1183:16:13"
																			},
																			"nativeSrc": "1183:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1183:18:13"
																		},
																		"nativeSrc": "1183:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "1173:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1173:2:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1177:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1177:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1170:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1170:2:13"
																},
																"nativeSrc": "1170:10:13",
																"nodeType": "YulFunctionCall",
																"src": "1170:10:13"
															},
															"nativeSrc": "1167:36:13",
															"nodeType": "YulIf",
															"src": "1167:36:13"
														},
														{
															"nativeSrc": "1212:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1212:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1226:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1226:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "1222:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1222:3:13"
																},
																"nativeSrc": "1222:7:13",
																"nodeType": "YulFunctionCall",
																"src": "1222:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "1216:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1216:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1238:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1238:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1258:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1258:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1252:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1252:5:13"
																},
																"nativeSrc": "1252:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1252:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1242:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1242:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1270:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1270:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1292:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1292:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "1316:2:13",
																										"nodeType": "YulIdentifier",
																										"src": "1316:2:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1320:4:13",
																										"nodeType": "YulLiteral",
																										"src": "1320:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1312:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1312:3:13"
																								},
																								"nativeSrc": "1312:13:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1312:13:13"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "1327:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "1327:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1308:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1308:3:13"
																						},
																						"nativeSrc": "1308:22:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1308:22:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1332:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1332:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1304:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1304:3:13"
																				},
																				"nativeSrc": "1304:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1304:31:13"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "1337:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1337:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1300:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1300:3:13"
																		},
																		"nativeSrc": "1300:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1300:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1288:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1288:3:13"
																},
																"nativeSrc": "1288:53:13",
																"nodeType": "YulFunctionCall",
																"src": "1288:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1274:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1274:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1400:22:13",
																"nodeType": "YulBlock",
																"src": "1400:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1402:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1402:16:13"
																			},
																			"nativeSrc": "1402:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1402:18:13"
																		},
																		"nativeSrc": "1402:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1402:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1359:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1359:10:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1371:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1371:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1356:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1356:2:13"
																		},
																		"nativeSrc": "1356:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1356:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1379:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1379:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1391:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1391:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1376:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1376:2:13"
																		},
																		"nativeSrc": "1376:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1376:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1353:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1353:2:13"
																},
																"nativeSrc": "1353:46:13",
																"nodeType": "YulFunctionCall",
																"src": "1353:46:13"
															},
															"nativeSrc": "1350:72:13",
															"nodeType": "YulIf",
															"src": "1350:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1438:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1438:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1442:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1442:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1431:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1431:6:13"
																},
																"nativeSrc": "1431:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1431:22:13"
															},
															"nativeSrc": "1431:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1431:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1469:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1469:6:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1477:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1477:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1462:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1462:6:13"
																},
																"nativeSrc": "1462:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1462:18:13"
															},
															"nativeSrc": "1462:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "1462:18:13"
														},
														{
															"body": {
																"nativeSrc": "1526:16:13",
																"nodeType": "YulBlock",
																"src": "1526:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1535:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1535:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1538:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1538:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1528:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1528:6:13"
																			},
																			"nativeSrc": "1528:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1528:12:13"
																		},
																		"nativeSrc": "1528:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1528:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1503:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1503:2:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1507:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "1507:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1499:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1499:3:13"
																				},
																				"nativeSrc": "1499:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1499:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1512:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1512:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1495:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1495:3:13"
																		},
																		"nativeSrc": "1495:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1495:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1517:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1517:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1492:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1492:2:13"
																},
																"nativeSrc": "1492:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1492:33:13"
															},
															"nativeSrc": "1489:53:13",
															"nodeType": "YulIf",
															"src": "1489:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1590:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "1590:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1594:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1594:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1586:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1586:3:13"
																		},
																		"nativeSrc": "1586:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1586:11:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1603:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1603:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1611:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1611:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1599:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1599:3:13"
																		},
																		"nativeSrc": "1599:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1599:15:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1616:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1616:2:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1551:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "1551:34:13"
																},
																"nativeSrc": "1551:68:13",
																"nodeType": "YulFunctionCall",
																"src": "1551:68:13"
															},
															"nativeSrc": "1551:68:13",
															"nodeType": "YulExpressionStatement",
															"src": "1551:68:13"
														},
														{
															"nativeSrc": "1628:16:13",
															"nodeType": "YulAssignment",
															"src": "1628:16:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1638:6:13",
																"nodeType": "YulIdentifier",
																"src": "1638:6:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1628:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_string_memory_ptr_fromMemory",
												"nativeSrc": "583:1067:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "658:9:13",
														"nodeType": "YulTypedName",
														"src": "658:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "669:7:13",
														"nodeType": "YulTypedName",
														"src": "669:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "681:6:13",
														"nodeType": "YulTypedName",
														"src": "681:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "689:6:13",
														"nodeType": "YulTypedName",
														"src": "689:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "697:6:13",
														"nodeType": "YulTypedName",
														"src": "697:6:13",
														"type": ""
													}
												],
												"src": "583:1067:13"
											},
											{
												"body": {
													"nativeSrc": "1776:275:13",
													"nodeType": "YulBlock",
													"src": "1776:275:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1793:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1793:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1804:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1804:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1786:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1786:6:13"
																},
																"nativeSrc": "1786:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1786:21:13"
															},
															"nativeSrc": "1786:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "1786:21:13"
														},
														{
															"nativeSrc": "1816:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1816:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1836:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1836:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1830:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1830:5:13"
																},
																"nativeSrc": "1830:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1830:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1820:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1820:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1863:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1863:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1874:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1874:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1859:3:13"
																		},
																		"nativeSrc": "1859:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1859:18:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1879:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1879:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1852:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1852:6:13"
																},
																"nativeSrc": "1852:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1852:34:13"
															},
															"nativeSrc": "1852:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1852:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1934:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1934:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1942:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1942:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1930:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1930:3:13"
																		},
																		"nativeSrc": "1930:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1930:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1951:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1951:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1962:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1962:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1947:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1947:3:13"
																		},
																		"nativeSrc": "1947:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1947:18:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1967:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1967:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1895:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "1895:34:13"
																},
																"nativeSrc": "1895:79:13",
																"nodeType": "YulFunctionCall",
																"src": "1895:79:13"
															},
															"nativeSrc": "1895:79:13",
															"nodeType": "YulExpressionStatement",
															"src": "1895:79:13"
														},
														{
															"nativeSrc": "1983:62:13",
															"nodeType": "YulAssignment",
															"src": "1983:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1999:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1999:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2018:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "2018:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2026:2:13",
																								"nodeType": "YulLiteral",
																								"src": "2026:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2014:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2014:3:13"
																						},
																						"nativeSrc": "2014:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2014:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2035:2:13",
																								"nodeType": "YulLiteral",
																								"src": "2035:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2031:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2031:3:13"
																						},
																						"nativeSrc": "2031:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2031:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2010:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2010:3:13"
																				},
																				"nativeSrc": "2010:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2010:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1995:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1995:3:13"
																		},
																		"nativeSrc": "1995:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1995:45:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2042:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2042:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1991:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1991:3:13"
																},
																"nativeSrc": "1991:54:13",
																"nodeType": "YulFunctionCall",
																"src": "1991:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1983:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1983:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1655:396:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1745:9:13",
														"nodeType": "YulTypedName",
														"src": "1745:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1756:6:13",
														"nodeType": "YulTypedName",
														"src": "1756:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1767:4:13",
														"nodeType": "YulTypedName",
														"src": "1767:4:13",
														"type": ""
													}
												],
												"src": "1655:396:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value2 := memPtr\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040526103e8600c553480156200001757600080fd5b50604051620025a9380380620025a98339810160408190526200003a9162000101565b6001600160a01b038216608052604051829082906200005e908290602001620001e1565b60408051808303601f19018152919052805160209091012060a0525050600380546001600160a01b0319166001600160a01b03949094169390931790925550503060c05262000216565b80516001600160a01b0381168114620000c057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620000f8578181015183820152602001620000de565b50506000910152565b6000806000606084860312156200011757600080fd5b6200012284620000a8565b92506200013260208501620000a8565b60408501519092506001600160401b03808211156200015057600080fd5b818601915086601f8301126200016557600080fd5b8151818111156200017a576200017a620000c5565b604051601f8201601f19908116603f01168101908382118183101715620001a557620001a5620000c5565b81604052828152896020848701011115620001bf57600080fd5b620001d2836020830160208801620000db565b80955050505050509250925092565b602081526000825180602084015262000202816040850160208701620000db565b601f01601f19169190910160400192915050565b60805160a05160c05161235562000254600039600081816108d0015261097901526000610265015260008181610157015261060701526123556000f3fe6080604052600436106100fe5760003560e01c80634ab4ba4211610095578063df868ed311610064578063df868ed31461030d578063eb11af9314610325578063edd146cc14610352578063ef2920fc14610373578063f5b0dfb71461038657600080fd5b80634ab4ba42146102895780634d31d0871461029e578063b2b878d0146102be578063dcc60128146102eb57600080fd5b80632bbe0cae116100d15780632bbe0cae146101db57806338fff2d0146101ee57806341f441251461020357806342fda9c71461025657600080fd5b80630a6f0ee9146101035780630d8e6e2c1461012557806315cc481e1461014857806317d7de7c1461018f575b600080fd5b34801561010f57600080fd5b5061012361011e366004611989565b6103a6565b005b34801561013157600080fd5b5060035b6040519081526020015b60405180910390f35b34801561015457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161013f565b34801561019b57600080fd5b50604080518082018252601e81527f52455345525645445f4d5f415f44454c49564552595f535452415445475900006020820152905161013f9190611a24565b6101776101e9366004611a57565b6103c6565b3480156101fa57600080fd5b50600154610135565b34801561020f57600080fd5b5061024661021e366004611aa8565b6001600160a01b03166000908152600860205260409020805460ff1916600190811790915590565b604051901515815260200161013f565b34801561026257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610135565b34801561029557600080fd5b50600254610135565b3480156102aa57600080fd5b506102466102b9366004611aa8565b6103eb565b3480156102ca57600080fd5b506102de6102d9366004611ac5565b6103f4565b60405161013f9190611b99565b3480156102f757600080fd5b5061030061054a565b60405161013f9190611bf1565b34801561031957600080fd5b5060005460ff16610246565b34801561033157600080fd5b50610345610340366004611aa8565b6105ac565b60405161013f9190611c54565b34801561035e57600080fd5b5061012361036d366004611c6e565b50600155565b610123610381366004611a57565b6105b4565b34801561039257600080fd5b506101236103a1366004611cb4565b6105d2565b6103ae6105fc565b6103b6610665565b6103c18383836106a9565b505050565b60006103d06105fc565b6103d8610665565b6103e28383610c14565b90505b92915050565b600060016103e5565b815181516060919081146104405760405162461bcd60e51b815260206004820152600e60248201526d082a4a482b2409a92a69a82a886960931b60448201526064015b60405180910390fd5b6000816001600160401b0381111561045a5761045a61178c565b60405190808252806020026020018201604052801561049f57816020015b60408051808201909152600080825260208201528152602001906001900390816104785790505b50905060005b828110156105415761051c8682815181106104c2576104c2611ccd565b60200260200101518683815181106104dc576104dc611ccd565b505060408051808201825260008082526020918201819052825180840184526001600160a01b03949094168085528152600b825291909120549082015290565b82828151811061052e5761052e611ccd565b60209081029190910101526001016104a5565b50949350505050565b606060048054806020026020016040519081016040528092919081815260200182805480156105a257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610584575b5050505050905090565b6000806103e5565b6105bc6105fc565b6105c4610665565b6105ce8282610d42565b5050565b6105da6105fc565b80600260008282546105ec9190611cf9565b909155506105f990508181565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106635760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610437565b565b6001546000036106635760405162461bcd60e51b815260206004820152600f60248201526e1393d517d253925512505312569151608a1b6044820152606401610437565b60005b8351811015610c0e5760008482815181106106c9576106c9611ccd565b6020026020010151905060008190506000816001600160a01b0316633ba94ed86040518163ffffffff1660e01b8152600401600060405180830381865afa158015610718573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107409190810190611e30565b90506107558582604001518360600151610e8d565b6107a15760405162461bcd60e51b815260206004820152601d60248201527f726563697069656e74203c3e2073656e646572206d69732d6d617463680000006044820152606401610437565b6000816080015190508160a00151600660008a88815181106107c5576107c5611ccd565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054101561084d5760405162461bcd60e51b815260206004820152602860248201527f627564676574203c3e2072656d61696e696e6720616c6c6f636174696f6e206d6044820152670d2e65adac2e8c6d60c31b6064820152608401610437565b8160a00151600660008a888151811061086857610868611ccd565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600082825461089f9190611f1e565b909155505073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0382160161095d578160a001517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163110156109585760405162461bcd60e51b815260206004820152602860248201527f696e73756666696369656e74206e617469766520746f6b656e2066756e647320604482015267034b7103837b7b6160c51b6064820152608401610437565b610b52565b60a08201516040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301528316906370a0823190602401602060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190611f31565b1015610a3a5760405162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e742066756e647320696e20706f6f6c0000000000006044820152606401610437565b600354604080518082018252601581527452455345525645445f4d4152474152495f434f524560581b6020820152905163bf40fac160e01b81526001600160a01b038085169363095ea7b39391169163bf40fac191610a9b91600401611a24565b602060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190611f4a565b60a08501516040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b509190611f67565b505b6000836001600160a01b0316631fae35d46040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b92573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bba9190810190612032565b9050600080610bc9838861110f565b6001600160a01b0389166000908152600b6020526040812080549395509193508392610bf6908490611cf9565b9091555050600190970196506106ac95505050505050565b50505050565b60008083806020019051810190610c2b9190611f4a565b905060008190506000816001600160a01b0316633ba94ed86040518163ffffffff1660e01b8152600401600060405180830381865afa158015610c72573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c9a9190810190611e30565b9050610caf8582604001518360600151610e8d565b610cee5760405162461bcd60e51b815260206004820152601060248201526f01037b9339030b236b4b71037b7363c960851b6044820152606401610437565b5050600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0383161790559392505050565b600082806020019051810190610d58919061215f565b90506000816000015190506000816001600160a01b0316633ba94ed86040518163ffffffff1660e01b8152600401600060405180830381865afa158015610da3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dcb9190810190611e30565b9050610de08482604001518360600151610e8d565b610e1f5760405162461bcd60e51b815260206004820152601060248201526f01037b9339030b236b4b71037b7363c960851b6044820152606401610437565b60208084015184516001600160a01b0390811660009081526005808552604080832094909455875183168252600785528382205488519093168252909352912054610e6a9190611f1e565b92516001600160a01b031660009081526006602052604090209290925550505050565b600354604080518082018252601281527152455345525645445f414c4c4f5f434f524560701b6020820152905163bf40fac160e01b815260009283926001600160a01b039091169163bf40fac191610ee791600401611a24565b602060405180830381865afa158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f289190611f4a565b90506000816001600160a01b0316635ab1bd536040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e9190611f4a565b6040516329e40d4b60e01b8152600481018790526001600160a01b038881166024830152919250908316906329e40d4b90604401602060405180830381865afa158015610fdf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110039190611f67565b8061107a575060405163559ff5e360e11b8152600481018690526001600160a01b03878116602483015283169063ab3febc690604401602060405180830381865afa158015611056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107a9190611f67565b806110f15750604051630e6e1ae360e21b8152600481018590526001600160a01b0387811660248301528216906339b86b8c90604401602060405180830381865afa1580156110cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f19190611f67565b1561110157600192505050611108565b6000925050505b9392505050565b600354604080518082018252601581527452455345525645445f4d4152474152495f434f524560581b6020820152905163bf40fac160e01b815260609260009283926001600160a01b039092169163bf40fac19161116f91600401611a24565b602060405180830381865afa15801561118c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b09190611f4a565b855190915084906001600160401b038111156111ce576111ce61178c565b6040519080825280602002602001820160405280156111f7578160200160208202803683370190505b50935060005b865181101561176857600087828151811061121a5761121a611ccd565b602002602001015190508060a00151856112349190611cf9565b9450600360009054906101000a90046001600160a01b03166001600160a01b0316633408e4706040518163ffffffff1660e01b8152600401602060405180830381865afa158015611289573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ad9190611f31565b816020015160200151146114755773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b03168160c001516001600160a01b0316036113c25760a08101516020808301519081015160c084015160409283015160608601518487015194516360f71bf160e11b815260048101949094526001600160a01b039283166024850152604484018690529082166064840152608483015260a48201929092529086169163c1ee37e29160c40160206040518083038185885af115801561137a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061139f9190611f31565b8683815181106113b1576113b1611ccd565b6020026020010181815250506115a3565b6020808201519081015160c083015160a084015160409384015160608601518587015195516360f71bf160e11b815260048101959095526001600160a01b039384166024860152604485019290925282166064840152608483015260a48201929092529085169063c1ee37e29060c4016020604051808303816000875af1158015611451573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139f9190611f31565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b03168160c001516001600160a01b0316036114f1578060200151604001516001600160a01b03166108fc8260a001519081150290604051600060405180830381858888f193505050501580156114eb573d6000803e3d6000fd5b5061157c565b60c0810151602082015160409081015160a0840151915163a9059cbb60e01b81526001600160a01b03918216600482015260248101929092529091169063a9059cbb906044016020604051808303816000875af1158015611556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157a9190611f67565b505b611584611772565b86838151811061159657611596611ccd565b6020026020010181815250505b608081015160405163026192df60e11b81526001600160a01b038516916304c325be916115d69190600290600401612199565b6020604051808303816000875af11580156115f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116199190611f67565b50806009600088858151811061163157611631611ccd565b6020026020010151815260200190815260200160002060008201518160000155602082015181600101600082015181600001556020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506060820151816003016000820151816000015560208201518160010190816116c39190612247565b505050506040838101516006840155606084015160078401556080840151600884015560a0840151600984015560c090930151600a92830180546001600160a01b0319166001600160a01b039283161790558a1660009081526020929092525020865187908490811061173857611738611ccd565b602090810291909101810151825460018181018555600094855292909320909201919091559190910190506111fd565b5050509250929050565b600c8054908190600061178483612306565b919050555090565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b03811182821017156117c5576117c561178c565b60405290565b604051608081016001600160401b03811182821017156117c5576117c561178c565b604080519081016001600160401b03811182821017156117c5576117c561178c565b60405160e081016001600160401b03811182821017156117c5576117c561178c565b604051601f8201601f191681016001600160401b03811182821017156118595761185961178c565b604052919050565b60006001600160401b0382111561187a5761187a61178c565b5060051b60200190565b6001600160a01b03811681146105f957600080fd5b600082601f8301126118aa57600080fd5b813560206118bf6118ba83611861565b611831565b8083825260208201915060208460051b8701019350868411156118e157600080fd5b602086015b848110156119065780356118f981611884565b83529183019183016118e6565b509695505050505050565b60006001600160401b0382111561192a5761192a61178c565b50601f01601f191660200190565b600082601f83011261194957600080fd5b81356119576118ba82611911565b81815284602083860101111561196c57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561199e57600080fd5b83356001600160401b03808211156119b557600080fd5b6119c187838801611899565b945060208601359150808211156119d757600080fd5b506119e486828701611938565b92505060408401356119f581611884565b809150509250925092565b60005b83811015611a1b578181015183820152602001611a03565b50506000910152565b6020815260008251806020840152611a43816040850160208701611a00565b601f01601f19169190910160400192915050565b60008060408385031215611a6a57600080fd5b82356001600160401b03811115611a8057600080fd5b611a8c85828601611938565b9250506020830135611a9d81611884565b809150509250929050565b600060208284031215611aba57600080fd5b813561110881611884565b60008060408385031215611ad857600080fd5b82356001600160401b0380821115611aef57600080fd5b611afb86838701611899565b9350602091508185013581811115611b1257600080fd5b8501601f81018713611b2357600080fd5b8035611b316118ba82611861565b81815260059190911b82018401908481019089831115611b5057600080fd5b8584015b83811015611b8857803586811115611b6c5760008081fd5b611b7a8c8983890101611938565b845250918601918601611b54565b508096505050505050509250929050565b602080825282518282018190526000919060409081850190868401855b82811015611be457815180516001600160a01b03168552860151868501529284019290850190600101611bb6565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611c325783516001600160a01b031683529284019291840191600101611c0d565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b6020810160078310611c6857611c68611c3e565b91905290565b60008060408385031215611c8157600080fd5b8235915060208301356001600160401b03811115611c9e57600080fd5b611caa85828601611938565b9150509250929050565b600060208284031215611cc657600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156103e5576103e5611ce3565b600082601f830112611d1d57600080fd5b8151611d2b6118ba82611911565b818152846020838601011115611d4057600080fd5b611d51826020830160208701611a00565b949350505050565b8051611d6481611884565b919050565b600082601f830112611d7a57600080fd5b81516020611d8a6118ba83611861565b8083825260208201915060208460051b870101935086841115611dac57600080fd5b602086015b848110156119065780518352918301918301611db1565b600082601f830112611dd957600080fd5b81516020611de96118ba83611861565b8083825260208201915060208460051b870101935086841115611e0b57600080fd5b602086015b84811015611906578051611e2381611884565b8352918301918301611e10565b600060208284031215611e4257600080fd5b81516001600160401b0380821115611e5957600080fd5b908301906101008286031215611e6e57600080fd5b611e766117a2565b82518152602083015182811115611e8c57600080fd5b611e9887828601611d0c565b6020830152506040830151604082015260608301516060820152611ebe60808401611d59565b608082015260a083015160a082015260c083015182811115611edf57600080fd5b611eeb87828601611d69565b60c08301525060e083015182811115611f0357600080fd5b611f0f87828601611dc8565b60e08301525095945050505050565b818103818111156103e5576103e5611ce3565b600060208284031215611f4357600080fd5b5051919050565b600060208284031215611f5c57600080fd5b815161110881611884565b600060208284031215611f7957600080fd5b8151801515811461110857600080fd5b600060808284031215611f9b57600080fd5b611fa36117cb565b905081518152602082015160208201526040820151611fc181611884565b604082015260608201516001600160401b0380821115611fe057600080fd5b9083019060408286031215611ff457600080fd5b611ffc6117ed565b8251815260208301518281111561201257600080fd5b61201e87828601611d0c565b602083015250606084015250909392505050565b6000602080838503121561204557600080fd5b82516001600160401b038082111561205c57600080fd5b818501915085601f83011261207057600080fd5b815161207e6118ba82611861565b81815260059190911b8301840190848101908883111561209d57600080fd5b8585015b83811015612152578051858111156120b95760008081fd5b860160e0818c03601f19018113156120d15760008081fd5b6120d961180f565b898301518152604080840151898111156120f35760008081fd5b6121018f8d83880101611f89565b8c84015250606080850151828401526080915081850151818401525060a0808501518284015260c0915081850151818401525061213f838501611d59565b90820152855250509186019186016120a1565b5098975050505050505050565b60006040828403121561217157600080fd5b6121796117ed565b825161218481611884565b81526020928301519281019290925250919050565b82815260408101600583106121b0576121b0611c3e565b8260208301529392505050565b600181811c908216806121d157607f821691505b6020821081036121f157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103c1576000816000526020600020601f850160051c810160208610156122205750805b601f850160051c820191505b8181101561223f5782815560010161222c565b505050505050565b81516001600160401b038111156122605761226061178c565b6122748161226e84546121bd565b846121f7565b602080601f8311600181146122a957600084156122915750858301515b600019600386901b1c1916600185901b17855561223f565b600085815260208120601f198616915b828110156122d8578886015182559484019460019091019084016122b9565b50858210156122f65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820161231857612318611ce3565b506001019056fea26469706673582212206fa922810d036d6123da454c079629c1bff0a1ad52c185aa505154b3c2f1025f64736f6c63430008170033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH2 0x3E8 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25A9 CODESIZE SUB DUP1 PUSH3 0x25A9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3A SWAP2 PUSH3 0x101 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH3 0x5E SWAP1 DUP3 SWAP1 PUSH1 0x20 ADD PUSH3 0x1E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xA0 MSTORE POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE PUSH3 0x216 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xF8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xDE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x122 DUP5 PUSH3 0xA8 JUMP JUMPDEST SWAP3 POP PUSH3 0x132 PUSH1 0x20 DUP6 ADD PUSH3 0xA8 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x17A JUMPI PUSH3 0x17A PUSH3 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1A5 JUMPI PUSH3 0x1A5 PUSH3 0xC5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1D2 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0xDB JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x202 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0xDB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x2355 PUSH3 0x254 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x8D0 ADD MSTORE PUSH2 0x979 ADD MSTORE PUSH1 0x0 PUSH2 0x265 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x157 ADD MSTORE PUSH2 0x607 ADD MSTORE PUSH2 0x2355 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AB4BA42 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDF868ED3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDF868ED3 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xEB11AF93 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xEDD146CC EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xEF2920FC EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xF5B0DFB7 EQ PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4AB4BA42 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x4D31D087 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xB2B878D0 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xDCC60128 EQ PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BBE0CAE GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2BBE0CAE EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x41F44125 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42FDA9C7 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6F0EE9 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x15CC481E EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x18F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH32 0x52455345525645445F4D5F415F44454C49564552595F53545241544547590000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x246 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6E JUMP JUMPDEST POP PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x123 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x5B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x3B6 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x3C1 DUP4 DUP4 DUP4 PUSH2 0x6A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D0 PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x3E2 DUP4 DUP4 PUSH2 0xC14 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3E5 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH1 0x60 SWAP2 SWAP1 DUP2 EQ PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x82A4A482B2409A92A69A82A8869 PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x45A JUMPI PUSH2 0x45A PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x49F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x478 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH2 0x51C DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C2 JUMPI PUSH2 0x4C2 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4DC JUMPI PUSH2 0x4DC PUSH2 0x1CCD JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP1 DUP6 MSTORE DUP2 MSTORE PUSH1 0xB DUP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x52E JUMPI PUSH2 0x52E PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4A5 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x584 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x5CE DUP3 DUP3 PUSH2 0xD42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5FC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5F9 SWAP1 POP DUP2 DUP2 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SUB PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1393D517D253925512505312569151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6C9 JUMPI PUSH2 0x6C9 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3BA94ED8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x740 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP PUSH2 0x755 DUP6 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726563697069656E74203C3E2073656E646572206D69732D6D61746368000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD SWAP1 POP DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x6 PUSH1 0x0 DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x7C5 JUMPI PUSH2 0x7C5 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x627564676574203C3E2072656D61696E696E6720616C6C6F636174696F6E206D PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xD2E65ADAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x437 JUMP JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x6 PUSH1 0x0 DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x868 JUMPI PUSH2 0x868 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x89F SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADD PUSH2 0x95D JUMPI DUP2 PUSH1 0xA0 ADD MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE LT ISZERO PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E74206E617469766520746F6B656E2066756E647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x34B7103837B7B61 PUSH1 0xC5 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x437 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST LT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E647320696E20706F6F6C000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x52455345525645445F4D4152474152495F434F5245 PUSH1 0x58 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 PUSH4 0x95EA7B3 SWAP4 SWAP2 AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0xA9B SWAP2 PUSH1 0x4 ADD PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1FAE35D4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xBBA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2032 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xBC9 DUP4 DUP9 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP DUP4 SWAP3 PUSH2 0xBF6 SWAP1 DUP5 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SWAP1 SWAP8 ADD SWAP7 POP PUSH2 0x6AC SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC2B SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3BA94ED8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC9A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP PUSH2 0xCAF DUP6 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1037B9339030B236B4B71037B7363C9 PUSH1 0x85 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3BA94ED8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xDCB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP PUSH2 0xDE0 DUP5 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1037B9339030B236B4B71037B7363C9 PUSH1 0x85 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP1 DUP6 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP8 MLOAD DUP4 AND DUP3 MSTORE PUSH1 0x7 DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD DUP9 MLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x52455345525645445F414C4C4F5F434F5245 PUSH1 0x70 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0xEE7 SWAP2 PUSH1 0x4 ADD PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AB1BD53 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF8E SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x29E40D4B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP4 AND SWAP1 PUSH4 0x29E40D4B SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1003 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST DUP1 PUSH2 0x107A JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x559FF5E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0xAB3FEBC6 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1056 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST DUP1 PUSH2 0x10F1 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xE6E1AE3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x39B86B8C SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F1 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST ISZERO PUSH2 0x1101 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x52455345525645445F4D4152474152495F434F5245 PUSH1 0x58 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP3 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0x116F SWAP2 PUSH1 0x4 ADD PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B0 SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST DUP6 MLOAD SWAP1 SWAP2 POP DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH2 0x11CE PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1768 JUMPI PUSH1 0x0 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x121A JUMPI PUSH2 0x121A PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0xA0 ADD MLOAD DUP6 PUSH2 0x1234 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP5 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3408E470 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x20 ADD MLOAD EQ PUSH2 0x1475 JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x13C2 JUMPI PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x40 SWAP3 DUP4 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD DUP5 DUP8 ADD MLOAD SWAP5 MLOAD PUSH4 0x60F71BF1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP7 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA4 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP7 AND SWAP2 PUSH4 0xC1EE37E2 SWAP2 PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x137A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x13B1 JUMPI PUSH2 0x13B1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x40 SWAP4 DUP5 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD DUP6 DUP8 ADD MLOAD SWAP6 MLOAD PUSH4 0x60F71BF1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA4 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP6 AND SWAP1 PUSH4 0xC1EE37E2 SWAP1 PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1451 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x14F1 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 PUSH1 0xA0 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x157C JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1556 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1584 PUSH2 0x1772 JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1596 JUMPI PUSH2 0x1596 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x26192DF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x4C325BE SWAP2 PUSH2 0x15D6 SWAP2 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x4 ADD PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1619 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1631 JUMPI PUSH2 0x1631 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x16C3 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST POP POP POP POP PUSH1 0x40 DUP4 DUP2 ADD MLOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x9 DUP5 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD PUSH1 0xA SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 DUP7 MLOAD DUP8 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1738 JUMPI PUSH2 0x1738 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 POP PUSH2 0x11FD JUMP JUMPDEST POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x1784 DUP4 PUSH2 0x2306 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1859 JUMPI PUSH2 0x1859 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x187A JUMPI PUSH2 0x187A PUSH2 0x178C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x18BF PUSH2 0x18BA DUP4 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x18E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1906 JUMPI DUP1 CALLDATALOAD PUSH2 0x18F9 DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x18E6 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x192A JUMPI PUSH2 0x192A PUSH2 0x178C JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1957 PUSH2 0x18BA DUP3 PUSH2 0x1911 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x199E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C1 DUP8 DUP4 DUP9 ADD PUSH2 0x1899 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E4 DUP7 DUP3 DUP8 ADD PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x19F5 DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A1B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A03 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A43 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8C DUP6 DUP3 DUP7 ADD PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1A9D DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1108 DUP2 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AFB DUP7 DUP4 DUP8 ADD PUSH2 0x1899 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1B31 PUSH2 0x18BA DUP3 PUSH2 0x1861 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP10 DUP4 GT ISZERO PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B88 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B7A DUP13 DUP10 DUP4 DUP10 ADD ADD PUSH2 0x1938 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x1B54 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BE4 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1BB6 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C32 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C0D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x7 DUP4 LT PUSH2 0x1C68 JUMPI PUSH2 0x1C68 PUSH2 0x1C3E JUMP JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CAA DUP6 DUP3 DUP7 ADD PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E5 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D2B PUSH2 0x18BA DUP3 PUSH2 0x1911 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1D40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D51 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A00 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1D64 DUP2 PUSH2 0x1884 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1D8A PUSH2 0x18BA DUP4 PUSH2 0x1861 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1DAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1906 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1DE9 PUSH2 0x18BA DUP4 PUSH2 0x1861 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1E0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1906 JUMPI DUP1 MLOAD PUSH2 0x1E23 DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1E59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x100 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x1E6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E76 PUSH2 0x17A2 JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1E8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E98 DUP8 DUP3 DUP7 ADD PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1EBE PUSH1 0x80 DUP5 ADD PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1EDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EEB DUP8 DUP3 DUP7 ADD PUSH2 0x1D69 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1F03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F0F DUP8 DUP3 DUP7 ADD PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E5 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1108 DUP2 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA3 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1FC1 DUP2 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x40 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x1FF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FFC PUSH2 0x17ED JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x2012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x201E DUP8 DUP3 DUP7 ADD PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x60 DUP5 ADD MSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x205C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x207E PUSH2 0x18BA DUP3 PUSH2 0x1861 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2152 JUMPI DUP1 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x20B9 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP7 ADD PUSH1 0xE0 DUP2 DUP13 SUB PUSH1 0x1F NOT ADD DUP2 SGT ISZERO PUSH2 0x20D1 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x20D9 PUSH2 0x180F JUMP JUMPDEST DUP10 DUP4 ADD MLOAD DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP10 DUP2 GT ISZERO PUSH2 0x20F3 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2101 DUP16 DUP14 DUP4 DUP9 ADD ADD PUSH2 0x1F89 JUMP JUMPDEST DUP13 DUP5 ADD MSTORE POP PUSH1 0x60 DUP1 DUP6 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 POP DUP2 DUP6 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP1 DUP6 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0xC0 SWAP2 POP DUP2 DUP6 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x213F DUP4 DUP6 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP6 MSTORE POP POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x20A1 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2179 PUSH2 0x17ED JUMP JUMPDEST DUP3 MLOAD PUSH2 0x2184 DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x21B0 JUMPI PUSH2 0x21B0 PUSH2 0x1C3E JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x21D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2220 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x223F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x222C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x2260 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x2274 DUP2 PUSH2 0x226E DUP5 SLOAD PUSH2 0x21BD JUMP JUMPDEST DUP5 PUSH2 0x21F7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22A9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2291 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x223F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22D8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x22B9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x22F6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2318 JUMPI PUSH2 0x2318 PUSH2 0x1CE3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xA922810D036D6123DA454C079629C1BF CREATE LOG1 0xAD MSTORE 0xC1 DUP6 0xAA POP MLOAD SLOAD 0xB3 0xC2 CALL MUL PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "773:9575:1:-:0;;;8770:4;8754:20;;1645:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5306:19:2;;;;5359:17;;1726:5:1;;1733;;5359:17:2;;1733:5:1;;5359:17:2;;;:::i;:::-;;;;;;;-1:-1:-1;;5359:17:2;;;;;;5349:28;;5359:17;5349:28;;;;5336:41;;-1:-1:-1;;1750:8:1::1;:32:::0;;-1:-1:-1;;;;;;1750:32:1::1;-1:-1:-1::0;;;;;1750:32:1;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;1818:4:1::1;1803:20;::::0;773:9575;;14:177:13;93:13;;-1:-1:-1;;;;;135:31:13;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:13;552:16;;545:27;328:250::o;583:1067::-;681:6;689;697;750:2;738:9;729:7;725:23;721:32;718:52;;;766:1;763;756:12;718:52;789:40;819:9;789:40;:::i;:::-;779:50;;848:49;893:2;882:9;878:18;848:49;:::i;:::-;941:2;926:18;;920:25;838:59;;-1:-1:-1;;;;;;994:14:13;;;991:34;;;1021:1;1018;1011:12;991:34;1059:6;1048:9;1044:22;1034:32;;1104:7;1097:4;1093:2;1089:13;1085:27;1075:55;;1126:1;1123;1116:12;1075:55;1155:2;1149:9;1177:2;1173;1170:10;1167:36;;;1183:18;;:::i;:::-;1258:2;1252:9;1226:2;1312:13;;-1:-1:-1;;1308:22:13;;;1332:2;1304:31;1300:40;1288:53;;;1356:18;;;1376:22;;;1353:46;1350:72;;;1402:18;;:::i;:::-;1442:10;1438:2;1431:22;1477:2;1469:6;1462:18;1517:7;1512:2;1507;1503;1499:11;1495:20;1492:33;1489:53;;;1538:1;1535;1528:12;1489:53;1551:68;1616:2;1611;1603:6;1599:15;1594:2;1590;1586:11;1551:68;:::i;:::-;1638:6;1628:16;;;;;;;583:1067;;;;;:::o;1655:396::-;1804:2;1793:9;1786:21;1767:4;1836:6;1830:13;1879:6;1874:2;1863:9;1859:18;1852:34;1895:79;1967:6;1962:2;1951:9;1947:18;1942:2;1934:6;1930:15;1895:79;:::i;:::-;2035:2;2014:15;-1:-1:-1;;2010:29:13;1995:45;;;;2042:2;1991:54;;1655:396;-1:-1:-1;;1655:396:13:o;:::-;773:9575:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterAllocate_1404": {
									"entryPoint": null,
									"id": 1404,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterDistribute_1428": {
									"entryPoint": null,
									"id": 1428,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterIncreasePoolAmount_1368": {
									"entryPoint": null,
									"id": 1368,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_afterRegisterRecipient_1386": {
									"entryPoint": null,
									"id": 1386,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_allocate_368": {
									"entryPoint": 3394,
									"id": 368,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeAllocate_1395": {
									"entryPoint": null,
									"id": 1395,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_beforeDistribute_1416": {
									"entryPoint": null,
									"id": 1416,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeIncreasePoolAmount_1361": {
									"entryPoint": null,
									"id": 1361,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_beforeRegisterRecipient_1377": {
									"entryPoint": null,
									"id": 1377,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOnlyAllo_1219": {
									"entryPoint": 1532,
									"id": 1219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOnlyInitialized_1273": {
									"entryPoint": 1637,
									"id": 1273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_distribute_521": {
									"entryPoint": 1705,
									"id": 521,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getPayout_756": {
									"entryPoint": null,
									"id": 756,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getRecipientStatus_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isPoolActive_1297": {
									"entryPoint": null,
									"id": 1297,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isValidAllocator_228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_registerRecipient_299": {
									"entryPoint": 3092,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@addAllocator_244": {
									"entryPoint": null,
									"id": 244,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allocate_1085": {
									"entryPoint": 1460,
									"id": 1085,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distribute_1119": {
									"entryPoint": 934,
									"id": 1119,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getAllo_919": {
									"entryPoint": null,
									"id": 919,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getIndex_736": {
									"entryPoint": 6002,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getName_199": {
									"entryPoint": null,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPayouts_1188": {
									"entryPoint": 1012,
									"id": 1188,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPoolAmount_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPoolId_929": {
									"entryPoint": null,
									"id": 929,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getProjects_216": {
									"entryPoint": 1354,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRecipientStatus_974": {
									"entryPoint": 1452,
									"id": 974,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStrategyId_939": {
									"entryPoint": null,
									"id": 939,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getVersion_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increasePoolAmount_1025": {
									"entryPoint": 1490,
									"id": 1025,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_191": {
									"entryPoint": null,
									"id": 191,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isPoolActive_960": {
									"entryPoint": null,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isValidAllocator_1202": {
									"entryPoint": 1003,
									"id": 1202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onlyAdmin_819": {
									"entryPoint": 3725,
									"id": 819,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@payoutDirectives_718": {
									"entryPoint": 4367,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@registerRecipient_1057": {
									"entryPoint": 966,
									"id": 1057,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_fromMemory": {
									"entryPoint": 7624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_fromMemory": {
									"entryPoint": 7529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 7436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_Contributor_fromMemory": {
									"entryPoint": 8073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 8242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptrt_address": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IRegistry_$2282_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_ProjectAllocation_$1658_memory_ptr_fromMemory": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_Project_$1653_memory_ptr_fromMemory": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IAllo_$2089__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$2296__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_061c27735e8d4de427c1d79927697f5893e7c1ed55f494a77889279330b06ae6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f639a352b68e6033960894fd239064f91f6227e67b30f35f71f3ed80642ad02__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96a721d265006ec8b79a4f231d5b616559a7b3d181d752324c3a3c78630a14a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a110f67727518ca7b3a14aca804c17f793c5bfe7f295e1afb41af41d4b4c568b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d30e69c99980e9196594fc9e631f2a27d78e3e2bdb28ce5149b307d64a620f1b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e09022697c85a7a7440752a329f6477a74e3db5b046ff4459bbe8c9847e2790b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef1bb694c59caf41511e71fefbf8b79caf80d578a7846a1dc497f4d47758c0c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_address_t_bytes32_t_uint256__to_t_uint256_t_address_t_uint256_t_address_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_PayoutStatus_$1615__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_3945": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_3947": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_3948": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_3952": {
									"entryPoint": 6159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 8695,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26014:13",
										"nodeType": "YulBlock",
										"src": "0:26014:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:13",
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:13",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:13",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:13",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nativeSrc": "66:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nativeSrc": "56:31:13",
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nativeSrc": "56:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:13",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:13",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nativeSrc": "96:15:13",
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nativeSrc": "96:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:13",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:13",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nativeSrc": "120:15:13",
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nativeSrc": "120:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nativeSrc": "192:209:13",
													"nodeType": "YulBlock",
													"src": "192:209:13",
													"statements": [
														{
															"nativeSrc": "202:19:13",
															"nodeType": "YulAssignment",
															"src": "202:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "218:2:13",
																		"nodeType": "YulLiteral",
																		"src": "218:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "212:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:13"
																},
																"nativeSrc": "212:9:13",
																"nodeType": "YulFunctionCall",
																"src": "212:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "202:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																}
															]
														},
														{
															"nativeSrc": "230:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "230:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "252:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "252:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "260:6:13",
																		"nodeType": "YulLiteral",
																		"src": "260:6:13",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "248:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "248:3:13"
																},
																"nativeSrc": "248:19:13",
																"nodeType": "YulFunctionCall",
																"src": "248:19:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "234:10:13",
																	"nodeType": "YulTypedName",
																	"src": "234:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "342:22:13",
																"nodeType": "YulBlock",
																"src": "342:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "344:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "344:16:13"
																			},
																			"nativeSrc": "344:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "344:18:13"
																		},
																		"nativeSrc": "344:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "344:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "285:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "285:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "297:18:13",
																				"nodeType": "YulLiteral",
																				"src": "297:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "282:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "282:2:13"
																		},
																		"nativeSrc": "282:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "282:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "321:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "321:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "333:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "318:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "318:2:13"
																		},
																		"nativeSrc": "318:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "318:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "279:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "279:2:13"
																},
																"nativeSrc": "279:62:13",
																"nodeType": "YulFunctionCall",
																"src": "279:62:13"
															},
															"nativeSrc": "276:88:13",
															"nodeType": "YulIf",
															"src": "276:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "380:2:13",
																		"nodeType": "YulLiteral",
																		"src": "380:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "384:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "384:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "373:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:13"
																},
																"nativeSrc": "373:22:13",
																"nodeType": "YulFunctionCall",
																"src": "373:22:13"
															},
															"nativeSrc": "373:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "373:22:13"
														}
													]
												},
												"name": "allocate_memory_3945",
												"nativeSrc": "146:255:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "181:6:13",
														"nodeType": "YulTypedName",
														"src": "181:6:13",
														"type": ""
													}
												],
												"src": "146:255:13"
											},
											{
												"body": {
													"nativeSrc": "452:207:13",
													"nodeType": "YulBlock",
													"src": "452:207:13",
													"statements": [
														{
															"nativeSrc": "462:19:13",
															"nodeType": "YulAssignment",
															"src": "462:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "478:2:13",
																		"nodeType": "YulLiteral",
																		"src": "478:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "472:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "472:5:13"
																},
																"nativeSrc": "472:9:13",
																"nodeType": "YulFunctionCall",
																"src": "472:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "462:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "462:6:13"
																}
															]
														},
														{
															"nativeSrc": "490:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "490:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "512:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "512:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "520:4:13",
																		"nodeType": "YulLiteral",
																		"src": "520:4:13",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "508:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:13"
																},
																"nativeSrc": "508:17:13",
																"nodeType": "YulFunctionCall",
																"src": "508:17:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "494:10:13",
																	"nodeType": "YulTypedName",
																	"src": "494:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "600:22:13",
																"nodeType": "YulBlock",
																"src": "600:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "602:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "602:16:13"
																			},
																			"nativeSrc": "602:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "602:18:13"
																		},
																		"nativeSrc": "602:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "602:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "543:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "543:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "555:18:13",
																				"nodeType": "YulLiteral",
																				"src": "555:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "540:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "540:2:13"
																		},
																		"nativeSrc": "540:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "540:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "579:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "579:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "591:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "591:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "576:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "576:2:13"
																		},
																		"nativeSrc": "576:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "576:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "537:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "537:2:13"
																},
																"nativeSrc": "537:62:13",
																"nodeType": "YulFunctionCall",
																"src": "537:62:13"
															},
															"nativeSrc": "534:88:13",
															"nodeType": "YulIf",
															"src": "534:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:2:13",
																		"nodeType": "YulLiteral",
																		"src": "638:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "642:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "642:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "631:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:13"
																},
																"nativeSrc": "631:22:13",
																"nodeType": "YulFunctionCall",
																"src": "631:22:13"
															},
															"nativeSrc": "631:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "631:22:13"
														}
													]
												},
												"name": "allocate_memory_3947",
												"nativeSrc": "406:253:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "441:6:13",
														"nodeType": "YulTypedName",
														"src": "441:6:13",
														"type": ""
													}
												],
												"src": "406:253:13"
											},
											{
												"body": {
													"nativeSrc": "710:205:13",
													"nodeType": "YulBlock",
													"src": "710:205:13",
													"statements": [
														{
															"nativeSrc": "720:19:13",
															"nodeType": "YulAssignment",
															"src": "720:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "736:2:13",
																		"nodeType": "YulLiteral",
																		"src": "736:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "730:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "730:5:13"
																},
																"nativeSrc": "730:9:13",
																"nodeType": "YulFunctionCall",
																"src": "730:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "720:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:13"
																}
															]
														},
														{
															"nativeSrc": "748:33:13",
															"nodeType": "YulVariableDeclaration",
															"src": "748:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "770:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "770:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "778:2:13",
																		"nodeType": "YulLiteral",
																		"src": "778:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "766:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "766:3:13"
																},
																"nativeSrc": "766:15:13",
																"nodeType": "YulFunctionCall",
																"src": "766:15:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "752:10:13",
																	"nodeType": "YulTypedName",
																	"src": "752:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "856:22:13",
																"nodeType": "YulBlock",
																"src": "856:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "858:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "858:16:13"
																			},
																			"nativeSrc": "858:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "858:18:13"
																		},
																		"nativeSrc": "858:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "858:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "799:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "799:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "811:18:13",
																				"nodeType": "YulLiteral",
																				"src": "811:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "796:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "796:2:13"
																		},
																		"nativeSrc": "796:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "796:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "835:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "835:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "847:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "832:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:13"
																		},
																		"nativeSrc": "832:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "832:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "793:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "793:2:13"
																},
																"nativeSrc": "793:62:13",
																"nodeType": "YulFunctionCall",
																"src": "793:62:13"
															},
															"nativeSrc": "790:88:13",
															"nodeType": "YulIf",
															"src": "790:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "894:2:13",
																		"nodeType": "YulLiteral",
																		"src": "894:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "898:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "898:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "887:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "887:6:13"
																},
																"nativeSrc": "887:22:13",
																"nodeType": "YulFunctionCall",
																"src": "887:22:13"
															},
															"nativeSrc": "887:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "887:22:13"
														}
													]
												},
												"name": "allocate_memory_3948",
												"nativeSrc": "664:251:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "699:6:13",
														"nodeType": "YulTypedName",
														"src": "699:6:13",
														"type": ""
													}
												],
												"src": "664:251:13"
											},
											{
												"body": {
													"nativeSrc": "966:207:13",
													"nodeType": "YulBlock",
													"src": "966:207:13",
													"statements": [
														{
															"nativeSrc": "976:19:13",
															"nodeType": "YulAssignment",
															"src": "976:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "992:2:13",
																		"nodeType": "YulLiteral",
																		"src": "992:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "986:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "986:5:13"
																},
																"nativeSrc": "986:9:13",
																"nodeType": "YulFunctionCall",
																"src": "986:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "976:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:13"
																}
															]
														},
														{
															"nativeSrc": "1004:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1004:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1026:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1026:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1034:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1034:4:13",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1022:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1022:3:13"
																},
																"nativeSrc": "1022:17:13",
																"nodeType": "YulFunctionCall",
																"src": "1022:17:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1008:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1008:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1114:22:13",
																"nodeType": "YulBlock",
																"src": "1114:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1116:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1116:16:13"
																			},
																			"nativeSrc": "1116:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1116:18:13"
																		},
																		"nativeSrc": "1116:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1116:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1057:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1057:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1069:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1069:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1054:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1054:2:13"
																		},
																		"nativeSrc": "1054:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1054:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1093:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1093:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1105:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1090:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1090:2:13"
																		},
																		"nativeSrc": "1090:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1090:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1051:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1051:2:13"
																},
																"nativeSrc": "1051:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1051:62:13"
															},
															"nativeSrc": "1048:88:13",
															"nodeType": "YulIf",
															"src": "1048:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1152:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1152:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1156:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1156:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1145:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1145:6:13"
																},
																"nativeSrc": "1145:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1145:22:13"
															},
															"nativeSrc": "1145:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1145:22:13"
														}
													]
												},
												"name": "allocate_memory_3952",
												"nativeSrc": "920:253:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "955:6:13",
														"nodeType": "YulTypedName",
														"src": "955:6:13",
														"type": ""
													}
												],
												"src": "920:253:13"
											},
											{
												"body": {
													"nativeSrc": "1223:230:13",
													"nodeType": "YulBlock",
													"src": "1223:230:13",
													"statements": [
														{
															"nativeSrc": "1233:19:13",
															"nodeType": "YulAssignment",
															"src": "1233:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1249:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1243:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1243:5:13"
																},
																"nativeSrc": "1243:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1243:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1233:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:13"
																}
															]
														},
														{
															"nativeSrc": "1261:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1261:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1283:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1283:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "1299:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "1299:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1305:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1305:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1295:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1295:3:13"
																				},
																				"nativeSrc": "1295:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1295:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1314:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1314:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1310:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1310:3:13"
																				},
																				"nativeSrc": "1310:7:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1310:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1291:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1291:3:13"
																		},
																		"nativeSrc": "1291:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1291:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1279:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:13"
																},
																"nativeSrc": "1279:40:13",
																"nodeType": "YulFunctionCall",
																"src": "1279:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1265:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1265:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1394:22:13",
																"nodeType": "YulBlock",
																"src": "1394:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1396:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1396:16:13"
																			},
																			"nativeSrc": "1396:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1396:18:13"
																		},
																		"nativeSrc": "1396:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1396:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1337:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1337:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1349:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1349:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1334:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1334:2:13"
																		},
																		"nativeSrc": "1334:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1334:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1373:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1373:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1385:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1385:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1370:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1370:2:13"
																		},
																		"nativeSrc": "1370:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1370:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1331:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1331:2:13"
																},
																"nativeSrc": "1331:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1331:62:13"
															},
															"nativeSrc": "1328:88:13",
															"nodeType": "YulIf",
															"src": "1328:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1432:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1432:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1436:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1436:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1425:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1425:6:13"
																},
																"nativeSrc": "1425:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1425:22:13"
															},
															"nativeSrc": "1425:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1425:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1178:275:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1203:4:13",
														"nodeType": "YulTypedName",
														"src": "1203:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1212:6:13",
														"nodeType": "YulTypedName",
														"src": "1212:6:13",
														"type": ""
													}
												],
												"src": "1178:275:13"
											},
											{
												"body": {
													"nativeSrc": "1527:114:13",
													"nodeType": "YulBlock",
													"src": "1527:114:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1571:22:13",
																"nodeType": "YulBlock",
																"src": "1571:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1573:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1573:16:13"
																			},
																			"nativeSrc": "1573:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1573:18:13"
																		},
																		"nativeSrc": "1573:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1573:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1543:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1543:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1551:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1551:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1540:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1540:2:13"
																},
																"nativeSrc": "1540:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1540:30:13"
															},
															"nativeSrc": "1537:56:13",
															"nodeType": "YulIf",
															"src": "1537:56:13"
														},
														{
															"nativeSrc": "1602:33:13",
															"nodeType": "YulAssignment",
															"src": "1602:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1618:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1618:1:13",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1621:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1621:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1614:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1614:3:13"
																		},
																		"nativeSrc": "1614:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1614:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1630:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1630:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1610:3:13"
																},
																"nativeSrc": "1610:25:13",
																"nodeType": "YulFunctionCall",
																"src": "1610:25:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1602:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1602:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nativeSrc": "1458:183:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1507:6:13",
														"nodeType": "YulTypedName",
														"src": "1507:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1518:4:13",
														"nodeType": "YulTypedName",
														"src": "1518:4:13",
														"type": ""
													}
												],
												"src": "1458:183:13"
											},
											{
												"body": {
													"nativeSrc": "1691:86:13",
													"nodeType": "YulBlock",
													"src": "1691:86:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1755:16:13",
																"nodeType": "YulBlock",
																"src": "1755:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1764:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1764:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1767:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1767:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1757:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1757:6:13"
																			},
																			"nativeSrc": "1757:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1757:12:13"
																		},
																		"nativeSrc": "1757:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1714:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1714:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1725:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1725:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1740:3:13",
																										"nodeType": "YulLiteral",
																										"src": "1740:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1745:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1745:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1736:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1736:3:13"
																								},
																								"nativeSrc": "1736:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1736:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1749:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1749:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1732:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1732:3:13"
																						},
																						"nativeSrc": "1732:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1732:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1721:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1721:3:13"
																				},
																				"nativeSrc": "1721:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1721:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1711:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1711:2:13"
																		},
																		"nativeSrc": "1711:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1704:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:13"
																},
																"nativeSrc": "1704:50:13",
																"nodeType": "YulFunctionCall",
																"src": "1704:50:13"
															},
															"nativeSrc": "1701:70:13",
															"nodeType": "YulIf",
															"src": "1701:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "1646:131:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1680:5:13",
														"nodeType": "YulTypedName",
														"src": "1680:5:13",
														"type": ""
													}
												],
												"src": "1646:131:13"
											},
											{
												"body": {
													"nativeSrc": "1846:679:13",
													"nodeType": "YulBlock",
													"src": "1846:679:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1895:16:13",
																"nodeType": "YulBlock",
																"src": "1895:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1904:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1907:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1907:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1897:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1897:6:13"
																			},
																			"nativeSrc": "1897:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1897:12:13"
																		},
																		"nativeSrc": "1897:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1897:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1874:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1874:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1882:4:13",
																						"nodeType": "YulLiteral",
																						"src": "1882:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1870:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1870:3:13"
																				},
																				"nativeSrc": "1870:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1870:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1889:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1889:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1866:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:13"
																		},
																		"nativeSrc": "1866:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:13"
																},
																"nativeSrc": "1859:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1859:35:13"
															},
															"nativeSrc": "1856:55:13",
															"nodeType": "YulIf",
															"src": "1856:55:13"
														},
														{
															"nativeSrc": "1920:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1920:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1943:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1943:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1930:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1930:12:13"
																},
																"nativeSrc": "1930:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1930:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1924:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1924:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1959:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1959:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1969:4:13",
																"nodeType": "YulLiteral",
																"src": "1969:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1963:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1963:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1982:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1982:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2049:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "2049:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "2009:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "2009:39:13"
																		},
																		"nativeSrc": "2009:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:43:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1993:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "1993:15:13"
																},
																"nativeSrc": "1993:60:13",
																"nodeType": "YulFunctionCall",
																"src": "1993:60:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1986:3:13",
																	"nodeType": "YulTypedName",
																	"src": "1986:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2062:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2062:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "2075:3:13",
																"nodeType": "YulIdentifier",
																"src": "2075:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "2066:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2066:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2094:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2094:3:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2099:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "2099:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2087:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2087:6:13"
																},
																"nativeSrc": "2087:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2087:15:13"
															},
															"nativeSrc": "2087:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2087:15:13"
														},
														{
															"nativeSrc": "2111:21:13",
															"nodeType": "YulAssignment",
															"src": "2111:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2122:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2122:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2127:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2127:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:13"
																},
																"nativeSrc": "2118:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2118:14:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2111:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2111:3:13"
																}
															]
														},
														{
															"nativeSrc": "2141:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2141:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2163:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2163:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2175:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2175:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2178:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "2178:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2171:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2171:3:13"
																				},
																				"nativeSrc": "2171:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2171:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2159:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2159:3:13"
																		},
																		"nativeSrc": "2159:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2159:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2184:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2184:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2155:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2155:3:13"
																},
																"nativeSrc": "2155:34:13",
																"nodeType": "YulFunctionCall",
																"src": "2155:34:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2145:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2145:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2217:16:13",
																"nodeType": "YulBlock",
																"src": "2217:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2226:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2226:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2229:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2229:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2219:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2219:6:13"
																			},
																			"nativeSrc": "2219:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2219:12:13"
																		},
																		"nativeSrc": "2219:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2219:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2204:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2204:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2212:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2212:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2201:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2201:2:13"
																},
																"nativeSrc": "2201:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2201:15:13"
															},
															"nativeSrc": "2198:35:13",
															"nodeType": "YulIf",
															"src": "2198:35:13"
														},
														{
															"nativeSrc": "2242:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2242:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2257:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2257:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2265:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2265:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2253:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:13"
																},
																"nativeSrc": "2253:17:13",
																"nodeType": "YulFunctionCall",
																"src": "2253:17:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "2246:3:13",
																	"nodeType": "YulTypedName",
																	"src": "2246:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2335:161:13",
																"nodeType": "YulBlock",
																"src": "2335:161:13",
																"statements": [
																	{
																		"nativeSrc": "2349:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2349:30:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2375:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2375:3:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "2362:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "2362:12:13"
																			},
																			"nativeSrc": "2362:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2362:17:13"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "2353:5:13",
																				"nodeType": "YulTypedName",
																				"src": "2353:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "2417:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2417:5:13"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nativeSrc": "2392:24:13",
																				"nodeType": "YulIdentifier",
																				"src": "2392:24:13"
																			},
																			"nativeSrc": "2392:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2392:31:13"
																		},
																		"nativeSrc": "2392:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2392:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2443:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2443:3:13"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "2448:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2448:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2436:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2436:6:13"
																			},
																			"nativeSrc": "2436:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2436:18:13"
																		},
																		"nativeSrc": "2436:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2436:18:13"
																	},
																	{
																		"nativeSrc": "2467:19:13",
																		"nodeType": "YulAssignment",
																		"src": "2467:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2478:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2478:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "2483:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "2483:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2474:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2474:3:13"
																			},
																			"nativeSrc": "2474:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2474:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2467:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2467:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2290:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2290:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2295:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2295:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2287:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2287:2:13"
																},
																"nativeSrc": "2287:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2287:15:13"
															},
															"nativeSrc": "2279:217:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2303:23:13",
																"nodeType": "YulBlock",
																"src": "2303:23:13",
																"statements": [
																	{
																		"nativeSrc": "2305:19:13",
																		"nodeType": "YulAssignment",
																		"src": "2305:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2316:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2316:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "2321:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "2321:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2312:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2312:3:13"
																			},
																			"nativeSrc": "2312:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2312:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2305:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2283:3:13",
																"nodeType": "YulBlock",
																"src": "2283:3:13",
																"statements": []
															},
															"src": "2279:217:13"
														},
														{
															"nativeSrc": "2505:14:13",
															"nodeType": "YulAssignment",
															"src": "2505:14:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "2514:5:13",
																"nodeType": "YulIdentifier",
																"src": "2514:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2505:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2505:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nativeSrc": "1782:743:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1820:6:13",
														"nodeType": "YulTypedName",
														"src": "1820:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1828:3:13",
														"nodeType": "YulTypedName",
														"src": "1828:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1836:5:13",
														"nodeType": "YulTypedName",
														"src": "1836:5:13",
														"type": ""
													}
												],
												"src": "1782:743:13"
											},
											{
												"body": {
													"nativeSrc": "2587:129:13",
													"nodeType": "YulBlock",
													"src": "2587:129:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2631:22:13",
																"nodeType": "YulBlock",
																"src": "2631:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2633:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2633:16:13"
																			},
																			"nativeSrc": "2633:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:18:13"
																		},
																		"nativeSrc": "2633:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2603:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2603:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2611:18:13",
																		"nodeType": "YulLiteral",
																		"src": "2611:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2600:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2600:2:13"
																},
																"nativeSrc": "2600:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2600:30:13"
															},
															"nativeSrc": "2597:56:13",
															"nodeType": "YulIf",
															"src": "2597:56:13"
														},
														{
															"nativeSrc": "2662:48:13",
															"nodeType": "YulAssignment",
															"src": "2662:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2682:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2682:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2690:2:13",
																						"nodeType": "YulLiteral",
																						"src": "2690:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2678:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:13"
																				},
																				"nativeSrc": "2678:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2678:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2699:2:13",
																						"nodeType": "YulLiteral",
																						"src": "2699:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2695:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2695:3:13"
																				},
																				"nativeSrc": "2695:7:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2695:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2674:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:13"
																		},
																		"nativeSrc": "2674:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2674:29:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2705:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2705:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2670:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2670:3:13"
																},
																"nativeSrc": "2670:40:13",
																"nodeType": "YulFunctionCall",
																"src": "2670:40:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2662:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_bytes",
												"nativeSrc": "2530:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2567:6:13",
														"nodeType": "YulTypedName",
														"src": "2567:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2578:4:13",
														"nodeType": "YulTypedName",
														"src": "2578:4:13",
														"type": ""
													}
												],
												"src": "2530:186:13"
											},
											{
												"body": {
													"nativeSrc": "2773:410:13",
													"nodeType": "YulBlock",
													"src": "2773:410:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2822:16:13",
																"nodeType": "YulBlock",
																"src": "2822:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2831:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2831:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2834:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2834:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2824:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2824:6:13"
																			},
																			"nativeSrc": "2824:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2824:12:13"
																		},
																		"nativeSrc": "2824:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2801:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2801:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2809:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2809:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2797:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:13"
																				},
																				"nativeSrc": "2797:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2797:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2816:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2816:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2793:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:13"
																		},
																		"nativeSrc": "2793:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2786:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2786:6:13"
																},
																"nativeSrc": "2786:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2786:35:13"
															},
															"nativeSrc": "2783:55:13",
															"nodeType": "YulIf",
															"src": "2783:55:13"
														},
														{
															"nativeSrc": "2847:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2847:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2870:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2870:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2857:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2857:12:13"
																},
																"nativeSrc": "2857:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2857:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2851:2:13",
																	"nodeType": "YulTypedName",
																	"src": "2851:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2886:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2886:63:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2945:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "2945:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_bytes",
																			"nativeSrc": "2917:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "2917:27:13"
																		},
																		"nativeSrc": "2917:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2917:31:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2901:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "2901:15:13"
																},
																"nativeSrc": "2901:48:13",
																"nodeType": "YulFunctionCall",
																"src": "2901:48:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "2890:7:13",
																	"nodeType": "YulTypedName",
																	"src": "2890:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nativeSrc": "2965:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2965:7:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2974:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "2974:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2958:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2958:6:13"
																},
																"nativeSrc": "2958:19:13",
																"nodeType": "YulFunctionCall",
																"src": "2958:19:13"
															},
															"nativeSrc": "2958:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "2958:19:13"
														},
														{
															"body": {
																"nativeSrc": "3025:16:13",
																"nodeType": "YulBlock",
																"src": "3025:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3034:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3034:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3037:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3027:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3027:6:13"
																			},
																			"nativeSrc": "3027:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3027:12:13"
																		},
																		"nativeSrc": "3027:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3027:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3000:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3000:6:13"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "3008:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3008:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2996:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:13"
																				},
																				"nativeSrc": "2996:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3013:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3013:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2992:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2992:3:13"
																		},
																		"nativeSrc": "2992:26:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2992:26:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3020:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3020:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2989:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2989:2:13"
																},
																"nativeSrc": "2989:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2989:35:13"
															},
															"nativeSrc": "2986:55:13",
															"nodeType": "YulIf",
															"src": "2986:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nativeSrc": "3067:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3067:7:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3076:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3076:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3063:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:13"
																		},
																		"nativeSrc": "3063:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3063:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3087:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3087:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3095:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3095:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3083:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:13"
																		},
																		"nativeSrc": "3083:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3083:17:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3102:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3102:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3050:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3050:12:13"
																},
																"nativeSrc": "3050:55:13",
																"nodeType": "YulFunctionCall",
																"src": "3050:55:13"
															},
															"nativeSrc": "3050:55:13",
															"nodeType": "YulExpressionStatement",
															"src": "3050:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nativeSrc": "3129:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "3129:7:13"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "3138:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3138:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3125:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3125:3:13"
																				},
																				"nativeSrc": "3125:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3125:16:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3143:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3143:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3121:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:13"
																		},
																		"nativeSrc": "3121:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3121:27:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3150:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:13"
																},
																"nativeSrc": "3114:38:13",
																"nodeType": "YulFunctionCall",
																"src": "3114:38:13"
															},
															"nativeSrc": "3114:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "3114:38:13"
														},
														{
															"nativeSrc": "3161:16:13",
															"nodeType": "YulAssignment",
															"src": "3161:16:13",
															"value": {
																"name": "array_1",
																"nativeSrc": "3170:7:13",
																"nodeType": "YulIdentifier",
																"src": "3170:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3161:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3161:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nativeSrc": "2721:462:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2747:6:13",
														"nodeType": "YulTypedName",
														"src": "2747:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2755:3:13",
														"nodeType": "YulTypedName",
														"src": "2755:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2763:5:13",
														"nodeType": "YulTypedName",
														"src": "2763:5:13",
														"type": ""
													}
												],
												"src": "2721:462:13"
											},
											{
												"body": {
													"nativeSrc": "3326:564:13",
													"nodeType": "YulBlock",
													"src": "3326:564:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3372:16:13",
																"nodeType": "YulBlock",
																"src": "3372:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3381:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3381:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3384:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3384:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3374:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3374:6:13"
																			},
																			"nativeSrc": "3374:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3374:12:13"
																		},
																		"nativeSrc": "3374:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3374:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3347:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3347:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3356:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3356:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3343:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3343:3:13"
																		},
																		"nativeSrc": "3343:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3343:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3368:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3368:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3339:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:13"
																},
																"nativeSrc": "3339:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3339:32:13"
															},
															"nativeSrc": "3336:52:13",
															"nodeType": "YulIf",
															"src": "3336:52:13"
														},
														{
															"nativeSrc": "3397:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3397:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3424:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3424:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3411:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3411:12:13"
																},
																"nativeSrc": "3411:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3411:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3401:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3401:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3443:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3443:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3453:18:13",
																"nodeType": "YulLiteral",
																"src": "3453:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3447:2:13",
																	"nodeType": "YulTypedName",
																	"src": "3447:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3498:16:13",
																"nodeType": "YulBlock",
																"src": "3498:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3507:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3507:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3510:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3510:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3500:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3500:6:13"
																			},
																			"nativeSrc": "3500:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3500:12:13"
																		},
																		"nativeSrc": "3500:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3500:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3486:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3486:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3494:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3494:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3483:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3483:2:13"
																},
																"nativeSrc": "3483:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3483:14:13"
															},
															"nativeSrc": "3480:34:13",
															"nodeType": "YulIf",
															"src": "3480:34:13"
														},
														{
															"nativeSrc": "3523:71:13",
															"nodeType": "YulAssignment",
															"src": "3523:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3577:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3577:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:13"
																		},
																		"nativeSrc": "3562:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3586:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3586:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "3533:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "3533:28:13"
																},
																"nativeSrc": "3533:61:13",
																"nodeType": "YulFunctionCall",
																"src": "3533:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3523:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:13"
																}
															]
														},
														{
															"nativeSrc": "3603:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3603:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3636:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3636:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3647:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3647:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3632:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3632:3:13"
																		},
																		"nativeSrc": "3632:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3632:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3619:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3619:12:13"
																},
																"nativeSrc": "3619:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3619:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3607:8:13",
																	"nodeType": "YulTypedName",
																	"src": "3607:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3680:16:13",
																"nodeType": "YulBlock",
																"src": "3680:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3689:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3689:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3692:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3692:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3682:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3682:6:13"
																			},
																			"nativeSrc": "3682:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3682:12:13"
																		},
																		"nativeSrc": "3682:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3682:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3666:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "3666:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3676:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3676:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3663:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3663:2:13"
																},
																"nativeSrc": "3663:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3663:16:13"
															},
															"nativeSrc": "3660:36:13",
															"nodeType": "YulIf",
															"src": "3660:36:13"
														},
														{
															"nativeSrc": "3705:61:13",
															"nodeType": "YulAssignment",
															"src": "3705:61:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3736:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3736:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3747:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "3747:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3732:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3732:3:13"
																		},
																		"nativeSrc": "3732:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3732:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3758:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3758:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "3715:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "3715:16:13"
																},
																"nativeSrc": "3715:51:13",
																"nodeType": "YulFunctionCall",
																"src": "3715:51:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3705:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:13"
																}
															]
														},
														{
															"nativeSrc": "3775:45:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3775:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3805:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3805:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3816:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3816:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3801:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3801:3:13"
																		},
																		"nativeSrc": "3801:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3801:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3788:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3788:12:13"
																},
																"nativeSrc": "3788:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3788:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3779:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3779:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3854:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3854:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3829:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "3829:24:13"
																},
																"nativeSrc": "3829:31:13",
																"nodeType": "YulFunctionCall",
																"src": "3829:31:13"
															},
															"nativeSrc": "3829:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "3829:31:13"
														},
														{
															"nativeSrc": "3869:15:13",
															"nodeType": "YulAssignment",
															"src": "3869:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3879:5:13",
																"nodeType": "YulIdentifier",
																"src": "3879:5:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3869:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address",
												"nativeSrc": "3188:702:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3276:9:13",
														"nodeType": "YulTypedName",
														"src": "3276:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3287:7:13",
														"nodeType": "YulTypedName",
														"src": "3287:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3299:6:13",
														"nodeType": "YulTypedName",
														"src": "3299:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3307:6:13",
														"nodeType": "YulTypedName",
														"src": "3307:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3315:6:13",
														"nodeType": "YulTypedName",
														"src": "3315:6:13",
														"type": ""
													}
												],
												"src": "3188:702:13"
											},
											{
												"body": {
													"nativeSrc": "3996:76:13",
													"nodeType": "YulBlock",
													"src": "3996:76:13",
													"statements": [
														{
															"nativeSrc": "4006:26:13",
															"nodeType": "YulAssignment",
															"src": "4006:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4018:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4018:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4029:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4029:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4014:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4014:3:13"
																},
																"nativeSrc": "4014:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4014:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4006:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4006:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4048:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4048:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4059:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4059:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4041:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:13"
																},
																"nativeSrc": "4041:25:13",
																"nodeType": "YulFunctionCall",
																"src": "4041:25:13"
															},
															"nativeSrc": "4041:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "4041:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3895:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3965:9:13",
														"nodeType": "YulTypedName",
														"src": "3965:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3976:6:13",
														"nodeType": "YulTypedName",
														"src": "3976:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3987:4:13",
														"nodeType": "YulTypedName",
														"src": "3987:4:13",
														"type": ""
													}
												],
												"src": "3895:177:13"
											},
											{
												"body": {
													"nativeSrc": "4192:102:13",
													"nodeType": "YulBlock",
													"src": "4192:102:13",
													"statements": [
														{
															"nativeSrc": "4202:26:13",
															"nodeType": "YulAssignment",
															"src": "4202:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4214:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4214:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4225:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4225:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4210:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:13"
																},
																"nativeSrc": "4210:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4210:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4202:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4202:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4244:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4244:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4259:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4259:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4275:3:13",
																								"nodeType": "YulLiteral",
																								"src": "4275:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4280:1:13",
																								"nodeType": "YulLiteral",
																								"src": "4280:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4271:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4271:3:13"
																						},
																						"nativeSrc": "4271:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4271:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4284:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4284:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4267:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4267:3:13"
																				},
																				"nativeSrc": "4267:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4267:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4255:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4255:3:13"
																		},
																		"nativeSrc": "4255:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4255:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4237:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4237:6:13"
																},
																"nativeSrc": "4237:51:13",
																"nodeType": "YulFunctionCall",
																"src": "4237:51:13"
															},
															"nativeSrc": "4237:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "4237:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IAllo_$2089__to_t_address__fromStack_reversed",
												"nativeSrc": "4077:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4161:9:13",
														"nodeType": "YulTypedName",
														"src": "4161:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4172:6:13",
														"nodeType": "YulTypedName",
														"src": "4172:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4183:4:13",
														"nodeType": "YulTypedName",
														"src": "4183:4:13",
														"type": ""
													}
												],
												"src": "4077:217:13"
											},
											{
												"body": {
													"nativeSrc": "4365:184:13",
													"nodeType": "YulBlock",
													"src": "4365:184:13",
													"statements": [
														{
															"nativeSrc": "4375:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4375:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4384:1:13",
																"nodeType": "YulLiteral",
																"src": "4384:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4379:1:13",
																	"nodeType": "YulTypedName",
																	"src": "4379:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4444:63:13",
																"nodeType": "YulBlock",
																"src": "4444:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "4469:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4469:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "4474:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "4474:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4465:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4465:3:13"
																					},
																					"nativeSrc": "4465:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4465:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4488:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4488:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4493:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "4493:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4484:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4484:3:13"
																							},
																							"nativeSrc": "4484:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4484:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					},
																					"nativeSrc": "4478:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4478:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4458:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4458:6:13"
																			},
																			"nativeSrc": "4458:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4458:39:13"
																		},
																		"nativeSrc": "4458:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4458:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4405:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4405:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4408:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4402:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4402:2:13"
																},
																"nativeSrc": "4402:13:13",
																"nodeType": "YulFunctionCall",
																"src": "4402:13:13"
															},
															"nativeSrc": "4394:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4416:19:13",
																"nodeType": "YulBlock",
																"src": "4416:19:13",
																"statements": [
																	{
																		"nativeSrc": "4418:15:13",
																		"nodeType": "YulAssignment",
																		"src": "4418:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4427:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "4427:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4430:2:13",
																					"nodeType": "YulLiteral",
																					"src": "4430:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4423:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4423:3:13"
																			},
																			"nativeSrc": "4423:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4423:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4418:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4418:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4398:3:13",
																"nodeType": "YulBlock",
																"src": "4398:3:13",
																"statements": []
															},
															"src": "4394:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4527:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4527:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4532:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4532:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4523:3:13"
																		},
																		"nativeSrc": "4523:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4523:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4541:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4541:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4516:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4516:6:13"
																},
																"nativeSrc": "4516:27:13",
																"nodeType": "YulFunctionCall",
																"src": "4516:27:13"
															},
															"nativeSrc": "4516:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "4516:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4299:250:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4343:3:13",
														"nodeType": "YulTypedName",
														"src": "4343:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4348:3:13",
														"nodeType": "YulTypedName",
														"src": "4348:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4353:6:13",
														"nodeType": "YulTypedName",
														"src": "4353:6:13",
														"type": ""
													}
												],
												"src": "4299:250:13"
											},
											{
												"body": {
													"nativeSrc": "4675:275:13",
													"nodeType": "YulBlock",
													"src": "4675:275:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4692:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4692:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4703:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4703:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4685:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4685:6:13"
																},
																"nativeSrc": "4685:21:13",
																"nodeType": "YulFunctionCall",
																"src": "4685:21:13"
															},
															"nativeSrc": "4685:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "4685:21:13"
														},
														{
															"nativeSrc": "4715:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4715:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4735:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4735:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4729:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4729:5:13"
																},
																"nativeSrc": "4729:13:13",
																"nodeType": "YulFunctionCall",
																"src": "4729:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4719:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4719:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4762:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4762:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4773:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4773:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4758:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4758:3:13"
																		},
																		"nativeSrc": "4758:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4758:18:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4778:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4778:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4751:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:13"
																},
																"nativeSrc": "4751:34:13",
																"nodeType": "YulFunctionCall",
																"src": "4751:34:13"
															},
															"nativeSrc": "4751:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "4751:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4833:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4833:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4841:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4841:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4829:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:13"
																		},
																		"nativeSrc": "4829:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4850:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4850:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4861:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4861:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4846:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4846:3:13"
																		},
																		"nativeSrc": "4846:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4846:18:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4866:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4866:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4794:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "4794:34:13"
																},
																"nativeSrc": "4794:79:13",
																"nodeType": "YulFunctionCall",
																"src": "4794:79:13"
															},
															"nativeSrc": "4794:79:13",
															"nodeType": "YulExpressionStatement",
															"src": "4794:79:13"
														},
														{
															"nativeSrc": "4882:62:13",
															"nodeType": "YulAssignment",
															"src": "4882:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4898:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4898:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4917:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "4917:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4925:2:13",
																								"nodeType": "YulLiteral",
																								"src": "4925:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4913:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4913:3:13"
																						},
																						"nativeSrc": "4913:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4913:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4934:2:13",
																								"nodeType": "YulLiteral",
																								"src": "4934:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4930:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4930:3:13"
																						},
																						"nativeSrc": "4930:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4930:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4909:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4909:3:13"
																				},
																				"nativeSrc": "4909:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4909:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4894:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:13"
																		},
																		"nativeSrc": "4894:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:45:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4941:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4890:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4890:3:13"
																},
																"nativeSrc": "4890:54:13",
																"nodeType": "YulFunctionCall",
																"src": "4890:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4882:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4882:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4554:396:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4644:9:13",
														"nodeType": "YulTypedName",
														"src": "4644:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4655:6:13",
														"nodeType": "YulTypedName",
														"src": "4655:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4666:4:13",
														"nodeType": "YulTypedName",
														"src": "4666:4:13",
														"type": ""
													}
												],
												"src": "4554:396:13"
											},
											{
												"body": {
													"nativeSrc": "5051:359:13",
													"nodeType": "YulBlock",
													"src": "5051:359:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5097:16:13",
																"nodeType": "YulBlock",
																"src": "5097:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5106:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5106:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5109:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5109:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5099:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5099:6:13"
																			},
																			"nativeSrc": "5099:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5099:12:13"
																		},
																		"nativeSrc": "5099:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5099:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5072:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5072:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5081:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5081:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5068:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5068:3:13"
																		},
																		"nativeSrc": "5068:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5068:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5093:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5093:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5064:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5064:3:13"
																},
																"nativeSrc": "5064:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5064:32:13"
															},
															"nativeSrc": "5061:52:13",
															"nodeType": "YulIf",
															"src": "5061:52:13"
														},
														{
															"nativeSrc": "5122:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5122:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5149:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5149:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5136:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5136:12:13"
																},
																"nativeSrc": "5136:23:13",
																"nodeType": "YulFunctionCall",
																"src": "5136:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5126:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5126:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5202:16:13",
																"nodeType": "YulBlock",
																"src": "5202:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5211:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5211:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5214:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5214:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5204:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5204:6:13"
																			},
																			"nativeSrc": "5204:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5204:12:13"
																		},
																		"nativeSrc": "5204:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5204:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5174:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5174:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5182:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5182:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5171:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5171:2:13"
																},
																"nativeSrc": "5171:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5171:30:13"
															},
															"nativeSrc": "5168:50:13",
															"nodeType": "YulIf",
															"src": "5168:50:13"
														},
														{
															"nativeSrc": "5227:59:13",
															"nodeType": "YulAssignment",
															"src": "5227:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5258:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5258:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5269:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5269:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5254:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:13"
																		},
																		"nativeSrc": "5254:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5254:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5278:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5278:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "5237:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "5237:16:13"
																},
																"nativeSrc": "5237:49:13",
																"nodeType": "YulFunctionCall",
																"src": "5237:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5227:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5227:6:13"
																}
															]
														},
														{
															"nativeSrc": "5295:45:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5295:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5325:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5325:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5336:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5336:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:13"
																		},
																		"nativeSrc": "5321:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5308:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5308:12:13"
																},
																"nativeSrc": "5308:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5308:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5299:5:13",
																	"nodeType": "YulTypedName",
																	"src": "5299:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5374:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5374:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5349:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "5349:24:13"
																},
																"nativeSrc": "5349:31:13",
																"nodeType": "YulFunctionCall",
																"src": "5349:31:13"
															},
															"nativeSrc": "5349:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "5349:31:13"
														},
														{
															"nativeSrc": "5389:15:13",
															"nodeType": "YulAssignment",
															"src": "5389:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "5399:5:13",
																"nodeType": "YulIdentifier",
																"src": "5399:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5389:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5389:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_address",
												"nativeSrc": "4955:455:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5009:9:13",
														"nodeType": "YulTypedName",
														"src": "5009:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5020:7:13",
														"nodeType": "YulTypedName",
														"src": "5020:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5032:6:13",
														"nodeType": "YulTypedName",
														"src": "5032:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5040:6:13",
														"nodeType": "YulTypedName",
														"src": "5040:6:13",
														"type": ""
													}
												],
												"src": "4955:455:13"
											},
											{
												"body": {
													"nativeSrc": "5516:102:13",
													"nodeType": "YulBlock",
													"src": "5516:102:13",
													"statements": [
														{
															"nativeSrc": "5526:26:13",
															"nodeType": "YulAssignment",
															"src": "5526:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5538:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5538:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5549:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5549:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5534:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:13"
																},
																"nativeSrc": "5534:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5534:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5526:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5526:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5568:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5568:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5583:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5583:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5599:3:13",
																								"nodeType": "YulLiteral",
																								"src": "5599:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5604:1:13",
																								"nodeType": "YulLiteral",
																								"src": "5604:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5595:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5595:3:13"
																						},
																						"nativeSrc": "5595:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "5595:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5608:1:13",
																						"nodeType": "YulLiteral",
																						"src": "5608:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5591:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5591:3:13"
																				},
																				"nativeSrc": "5591:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5591:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5579:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:13"
																		},
																		"nativeSrc": "5579:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5579:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5561:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5561:6:13"
																},
																"nativeSrc": "5561:51:13",
																"nodeType": "YulFunctionCall",
																"src": "5561:51:13"
															},
															"nativeSrc": "5561:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "5561:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5415:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5485:9:13",
														"nodeType": "YulTypedName",
														"src": "5485:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5496:6:13",
														"nodeType": "YulTypedName",
														"src": "5496:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5507:4:13",
														"nodeType": "YulTypedName",
														"src": "5507:4:13",
														"type": ""
													}
												],
												"src": "5415:203:13"
											},
											{
												"body": {
													"nativeSrc": "5693:177:13",
													"nodeType": "YulBlock",
													"src": "5693:177:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5739:16:13",
																"nodeType": "YulBlock",
																"src": "5739:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5748:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5748:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5751:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5751:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5741:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5741:6:13"
																			},
																			"nativeSrc": "5741:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5741:12:13"
																		},
																		"nativeSrc": "5741:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5741:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5714:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5714:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5723:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5723:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5710:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5710:3:13"
																		},
																		"nativeSrc": "5710:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5710:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5735:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5735:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5706:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5706:3:13"
																},
																"nativeSrc": "5706:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5706:32:13"
															},
															"nativeSrc": "5703:52:13",
															"nodeType": "YulIf",
															"src": "5703:52:13"
														},
														{
															"nativeSrc": "5764:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5764:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5790:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5790:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5777:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5777:12:13"
																},
																"nativeSrc": "5777:23:13",
																"nodeType": "YulFunctionCall",
																"src": "5777:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5768:5:13",
																	"nodeType": "YulTypedName",
																	"src": "5768:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5834:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5834:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5809:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "5809:24:13"
																},
																"nativeSrc": "5809:31:13",
																"nodeType": "YulFunctionCall",
																"src": "5809:31:13"
															},
															"nativeSrc": "5809:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "5809:31:13"
														},
														{
															"nativeSrc": "5849:15:13",
															"nodeType": "YulAssignment",
															"src": "5849:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "5859:5:13",
																"nodeType": "YulIdentifier",
																"src": "5859:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5849:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5849:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5623:247:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5659:9:13",
														"nodeType": "YulTypedName",
														"src": "5659:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5670:7:13",
														"nodeType": "YulTypedName",
														"src": "5670:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5682:6:13",
														"nodeType": "YulTypedName",
														"src": "5682:6:13",
														"type": ""
													}
												],
												"src": "5623:247:13"
											},
											{
												"body": {
													"nativeSrc": "5970:92:13",
													"nodeType": "YulBlock",
													"src": "5970:92:13",
													"statements": [
														{
															"nativeSrc": "5980:26:13",
															"nodeType": "YulAssignment",
															"src": "5980:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5992:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5992:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6003:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6003:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5988:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:13"
																},
																"nativeSrc": "5988:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5988:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5980:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5980:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6022:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6022:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "6047:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6047:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6040:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "6040:6:13"
																				},
																				"nativeSrc": "6040:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6040:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6033:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6033:6:13"
																		},
																		"nativeSrc": "6033:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6033:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6015:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6015:6:13"
																},
																"nativeSrc": "6015:41:13",
																"nodeType": "YulFunctionCall",
																"src": "6015:41:13"
															},
															"nativeSrc": "6015:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "6015:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5875:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5939:9:13",
														"nodeType": "YulTypedName",
														"src": "5939:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5950:6:13",
														"nodeType": "YulTypedName",
														"src": "5950:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5961:4:13",
														"nodeType": "YulTypedName",
														"src": "5961:4:13",
														"type": ""
													}
												],
												"src": "5875:187:13"
											},
											{
												"body": {
													"nativeSrc": "6168:76:13",
													"nodeType": "YulBlock",
													"src": "6168:76:13",
													"statements": [
														{
															"nativeSrc": "6178:26:13",
															"nodeType": "YulAssignment",
															"src": "6178:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6190:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6190:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6201:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6201:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6186:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6186:3:13"
																},
																"nativeSrc": "6186:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6186:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6178:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6178:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6220:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6220:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6231:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6231:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6213:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6213:6:13"
																},
																"nativeSrc": "6213:25:13",
																"nodeType": "YulFunctionCall",
																"src": "6213:25:13"
															},
															"nativeSrc": "6213:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "6213:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6067:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6137:9:13",
														"nodeType": "YulTypedName",
														"src": "6137:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6148:6:13",
														"nodeType": "YulTypedName",
														"src": "6148:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6159:4:13",
														"nodeType": "YulTypedName",
														"src": "6159:4:13",
														"type": ""
													}
												],
												"src": "6067:177:13"
											},
											{
												"body": {
													"nativeSrc": "6395:1211:13",
													"nodeType": "YulBlock",
													"src": "6395:1211:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6441:16:13",
																"nodeType": "YulBlock",
																"src": "6441:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6450:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6450:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6453:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6453:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6443:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6443:6:13"
																			},
																			"nativeSrc": "6443:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6443:12:13"
																		},
																		"nativeSrc": "6443:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6443:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6416:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6416:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6425:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6425:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6412:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6412:3:13"
																		},
																		"nativeSrc": "6412:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6412:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6437:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6437:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6408:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6408:3:13"
																},
																"nativeSrc": "6408:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6408:32:13"
															},
															"nativeSrc": "6405:52:13",
															"nodeType": "YulIf",
															"src": "6405:52:13"
														},
														{
															"nativeSrc": "6466:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6466:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6493:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6493:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6480:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6480:12:13"
																},
																"nativeSrc": "6480:23:13",
																"nodeType": "YulFunctionCall",
																"src": "6480:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6470:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6470:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6512:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6512:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6522:18:13",
																"nodeType": "YulLiteral",
																"src": "6522:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6516:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6516:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6567:16:13",
																"nodeType": "YulBlock",
																"src": "6567:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6576:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6576:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6579:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6579:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6569:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6569:6:13"
																			},
																			"nativeSrc": "6569:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6569:12:13"
																		},
																		"nativeSrc": "6569:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6569:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6555:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6555:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6563:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6563:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6552:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6552:2:13"
																},
																"nativeSrc": "6552:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6552:14:13"
															},
															"nativeSrc": "6549:34:13",
															"nodeType": "YulIf",
															"src": "6549:34:13"
														},
														{
															"nativeSrc": "6592:71:13",
															"nodeType": "YulAssignment",
															"src": "6592:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6635:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6635:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6646:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6646:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6631:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6631:3:13"
																		},
																		"nativeSrc": "6631:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6631:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6655:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "6655:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "6602:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "6602:28:13"
																},
																"nativeSrc": "6602:61:13",
																"nodeType": "YulFunctionCall",
																"src": "6602:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6592:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6592:6:13"
																}
															]
														},
														{
															"nativeSrc": "6672:12:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6672:12:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6682:2:13",
																"nodeType": "YulLiteral",
																"src": "6682:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "6676:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6676:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6693:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6693:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6726:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6726:9:13"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "6737:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6737:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6722:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6722:3:13"
																		},
																		"nativeSrc": "6722:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6722:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6709:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6709:12:13"
																},
																"nativeSrc": "6709:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6709:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6697:8:13",
																	"nodeType": "YulTypedName",
																	"src": "6697:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6770:16:13",
																"nodeType": "YulBlock",
																"src": "6770:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6779:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6779:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6782:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6782:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6772:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6772:6:13"
																			},
																			"nativeSrc": "6772:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6772:12:13"
																		},
																		"nativeSrc": "6772:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6772:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "6756:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "6756:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6766:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6766:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6753:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6753:2:13"
																},
																"nativeSrc": "6753:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6753:16:13"
															},
															"nativeSrc": "6750:36:13",
															"nodeType": "YulIf",
															"src": "6750:36:13"
														},
														{
															"nativeSrc": "6795:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6795:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6809:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6809:9:13"
																	},
																	{
																		"name": "offset_1",
																		"nativeSrc": "6820:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "6820:8:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6805:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6805:3:13"
																},
																"nativeSrc": "6805:24:13",
																"nodeType": "YulFunctionCall",
																"src": "6805:24:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "6799:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6799:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6877:16:13",
																"nodeType": "YulBlock",
																"src": "6877:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6886:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6886:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6889:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6889:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6879:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6879:6:13"
																			},
																			"nativeSrc": "6879:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6879:12:13"
																		},
																		"nativeSrc": "6879:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6879:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "6856:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6856:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6860:4:13",
																						"nodeType": "YulLiteral",
																						"src": "6860:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6852:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6852:3:13"
																				},
																				"nativeSrc": "6852:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6852:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6867:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6867:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6848:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6848:3:13"
																		},
																		"nativeSrc": "6848:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6848:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6841:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6841:6:13"
																},
																"nativeSrc": "6841:35:13",
																"nodeType": "YulFunctionCall",
																"src": "6841:35:13"
															},
															"nativeSrc": "6838:55:13",
															"nodeType": "YulIf",
															"src": "6838:55:13"
														},
														{
															"nativeSrc": "6902:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6902:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "6925:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6925:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6912:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6912:12:13"
																},
																"nativeSrc": "6912:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6912:16:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "6906:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6906:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6937:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6937:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "7004:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7004:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "6964:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "6964:39:13"
																		},
																		"nativeSrc": "6964:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6964:43:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6948:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "6948:15:13"
																},
																"nativeSrc": "6948:60:13",
																"nodeType": "YulFunctionCall",
																"src": "6948:60:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6941:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6941:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7017:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7017:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "7030:3:13",
																"nodeType": "YulIdentifier",
																"src": "7030:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "7021:5:13",
																	"nodeType": "YulTypedName",
																	"src": "7021:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7049:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7049:3:13"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "7054:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7054:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7042:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7042:6:13"
																},
																"nativeSrc": "7042:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7042:15:13"
															},
															"nativeSrc": "7042:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7042:15:13"
														},
														{
															"nativeSrc": "7066:19:13",
															"nodeType": "YulAssignment",
															"src": "7066:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7077:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7077:3:13"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "7082:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7082:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7073:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7073:3:13"
																},
																"nativeSrc": "7073:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7073:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7066:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7066:3:13"
																}
															]
														},
														{
															"nativeSrc": "7094:42:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7094:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "7116:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7116:2:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7124:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7124:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "7127:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "7127:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7120:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7120:3:13"
																				},
																				"nativeSrc": "7120:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7120:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7112:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7112:3:13"
																		},
																		"nativeSrc": "7112:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7112:19:13"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "7133:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7133:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7108:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7108:3:13"
																},
																"nativeSrc": "7108:28:13",
																"nodeType": "YulFunctionCall",
																"src": "7108:28:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7098:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7098:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7168:16:13",
																"nodeType": "YulBlock",
																"src": "7168:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7177:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7177:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7180:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7180:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7170:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7170:6:13"
																			},
																			"nativeSrc": "7170:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7170:12:13"
																		},
																		"nativeSrc": "7170:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7170:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7151:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7151:6:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7159:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "7159:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7148:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7148:2:13"
																},
																"nativeSrc": "7148:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7148:19:13"
															},
															"nativeSrc": "7145:39:13",
															"nodeType": "YulIf",
															"src": "7145:39:13"
														},
														{
															"nativeSrc": "7193:22:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7193:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "7208:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7208:2:13"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "7212:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7212:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7204:3:13"
																},
																"nativeSrc": "7204:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7204:11:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "7197:3:13",
																	"nodeType": "YulTypedName",
																	"src": "7197:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7280:296:13",
																"nodeType": "YulBlock",
																"src": "7280:296:13",
																"statements": [
																	{
																		"nativeSrc": "7294:36:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7294:36:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7326:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7326:3:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "7313:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "7313:12:13"
																			},
																			"nativeSrc": "7313:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7313:17:13"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "7298:11:13",
																				"nodeType": "YulTypedName",
																				"src": "7298:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7378:74:13",
																			"nodeType": "YulBlock",
																			"src": "7378:74:13",
																			"statements": [
																				{
																					"nativeSrc": "7396:11:13",
																					"nodeType": "YulVariableDeclaration",
																					"src": "7396:11:13",
																					"value": {
																						"kind": "number",
																						"nativeSrc": "7406:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7406:1:13",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nativeSrc": "7400:2:13",
																							"nodeType": "YulTypedName",
																							"src": "7400:2:13",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nativeSrc": "7431:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "7431:2:13"
																							},
																							{
																								"name": "_5",
																								"nativeSrc": "7435:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "7435:2:13"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "7424:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7424:6:13"
																						},
																						"nativeSrc": "7424:14:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7424:14:13"
																					},
																					"nativeSrc": "7424:14:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "7424:14:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "7349:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "7349:11:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "7362:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "7362:2:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7346:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7346:2:13"
																			},
																			"nativeSrc": "7346:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7346:19:13"
																		},
																		"nativeSrc": "7343:109:13",
																		"nodeType": "YulIf",
																		"src": "7343:109:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7472:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7472:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nativeSrc": "7502:2:13",
																											"nodeType": "YulIdentifier",
																											"src": "7502:2:13"
																										},
																										{
																											"name": "innerOffset",
																											"nativeSrc": "7506:11:13",
																											"nodeType": "YulIdentifier",
																											"src": "7506:11:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "7498:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "7498:3:13"
																									},
																									"nativeSrc": "7498:20:13",
																									"nodeType": "YulFunctionCall",
																									"src": "7498:20:13"
																								},
																								{
																									"name": "_2",
																									"nativeSrc": "7520:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "7520:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7494:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "7494:3:13"
																							},
																							"nativeSrc": "7494:29:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7494:29:13"
																						},
																						{
																							"name": "dataEnd",
																							"nativeSrc": "7525:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "7525:7:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_bytes",
																						"nativeSrc": "7477:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "7477:16:13"
																					},
																					"nativeSrc": "7477:56:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7477:56:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7465:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7465:6:13"
																			},
																			"nativeSrc": "7465:69:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7465:69:13"
																		},
																		"nativeSrc": "7465:69:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7465:69:13"
																	},
																	{
																		"nativeSrc": "7547:19:13",
																		"nodeType": "YulAssignment",
																		"src": "7547:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7558:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7558:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "7563:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "7563:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7554:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7554:3:13"
																			},
																			"nativeSrc": "7554:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7554:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7547:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7547:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7235:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7235:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7240:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7240:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7232:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7232:2:13"
																},
																"nativeSrc": "7232:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7232:15:13"
															},
															"nativeSrc": "7224:352:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7248:23:13",
																"nodeType": "YulBlock",
																"src": "7248:23:13",
																"statements": [
																	{
																		"nativeSrc": "7250:19:13",
																		"nodeType": "YulAssignment",
																		"src": "7250:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7261:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7261:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "7266:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "7266:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7257:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7257:3:13"
																			},
																			"nativeSrc": "7257:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7257:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7250:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7250:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7228:3:13",
																"nodeType": "YulBlock",
																"src": "7228:3:13",
																"statements": []
															},
															"src": "7224:352:13"
														},
														{
															"nativeSrc": "7585:15:13",
															"nodeType": "YulAssignment",
															"src": "7585:15:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "7595:5:13",
																"nodeType": "YulIdentifier",
																"src": "7595:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7585:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7585:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6249:1357:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6353:9:13",
														"nodeType": "YulTypedName",
														"src": "6353:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6364:7:13",
														"nodeType": "YulTypedName",
														"src": "6364:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6376:6:13",
														"nodeType": "YulTypedName",
														"src": "6376:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6384:6:13",
														"nodeType": "YulTypedName",
														"src": "6384:6:13",
														"type": ""
													}
												],
												"src": "6249:1357:13"
											},
											{
												"body": {
													"nativeSrc": "7824:613:13",
													"nodeType": "YulBlock",
													"src": "7824:613:13",
													"statements": [
														{
															"nativeSrc": "7834:12:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7834:12:13",
															"value": {
																"kind": "number",
																"nativeSrc": "7844:2:13",
																"nodeType": "YulLiteral",
																"src": "7844:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7838:2:13",
																	"nodeType": "YulTypedName",
																	"src": "7838:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7855:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7855:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7873:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7873:9:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7884:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7884:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7869:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7869:3:13"
																},
																"nativeSrc": "7869:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7869:18:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "7859:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7859:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7903:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7903:9:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7914:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7914:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7896:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:13"
																},
																"nativeSrc": "7896:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7896:21:13"
															},
															"nativeSrc": "7896:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "7896:21:13"
														},
														{
															"nativeSrc": "7926:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7926:17:13",
															"value": {
																"name": "tail_1",
																"nativeSrc": "7937:6:13",
																"nodeType": "YulIdentifier",
																"src": "7937:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "7930:3:13",
																	"nodeType": "YulTypedName",
																	"src": "7930:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7952:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7952:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7972:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7972:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7966:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7966:5:13"
																},
																"nativeSrc": "7966:13:13",
																"nodeType": "YulFunctionCall",
																"src": "7966:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7956:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7956:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "7995:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7995:6:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8003:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8003:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7988:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7988:6:13"
																},
																"nativeSrc": "7988:22:13",
																"nodeType": "YulFunctionCall",
																"src": "7988:22:13"
															},
															"nativeSrc": "7988:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "7988:22:13"
														},
														{
															"nativeSrc": "8019:12:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8019:12:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8029:2:13",
																"nodeType": "YulLiteral",
																"src": "8029:2:13",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "8023:2:13",
																	"nodeType": "YulTypedName",
																	"src": "8023:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8040:25:13",
															"nodeType": "YulAssignment",
															"src": "8040:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8051:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8062:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8062:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8047:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:13"
																},
																"nativeSrc": "8047:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8047:18:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8040:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8040:3:13"
																}
															]
														},
														{
															"nativeSrc": "8074:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8074:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8092:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8092:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "8100:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "8100:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8088:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8088:3:13"
																},
																"nativeSrc": "8088:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8088:15:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8078:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8078:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8112:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8112:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8121:1:13",
																"nodeType": "YulLiteral",
																"src": "8121:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8116:1:13",
																	"nodeType": "YulTypedName",
																	"src": "8116:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8180:231:13",
																"nodeType": "YulBlock",
																"src": "8180:231:13",
																"statements": [
																	{
																		"nativeSrc": "8194:23:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8194:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8210:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8210:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8204:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8204:5:13"
																			},
																			"nativeSrc": "8204:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8204:13:13"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nativeSrc": "8198:2:13",
																				"nodeType": "YulTypedName",
																				"src": "8198:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8237:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8237:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nativeSrc": "8252:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "8252:2:13"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "8246:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "8246:5:13"
																							},
																							"nativeSrc": "8246:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8246:9:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8265:3:13",
																											"nodeType": "YulLiteral",
																											"src": "8265:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8270:1:13",
																											"nodeType": "YulLiteral",
																											"src": "8270:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "8261:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "8261:3:13"
																									},
																									"nativeSrc": "8261:11:13",
																									"nodeType": "YulFunctionCall",
																									"src": "8261:11:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8274:1:13",
																									"nodeType": "YulLiteral",
																									"src": "8274:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "8257:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8257:3:13"
																							},
																							"nativeSrc": "8257:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8257:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8242:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8242:3:13"
																					},
																					"nativeSrc": "8242:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8242:35:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8230:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8230:6:13"
																			},
																			"nativeSrc": "8230:48:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8230:48:13"
																		},
																		"nativeSrc": "8230:48:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8230:48:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "8302:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8302:3:13"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "8307:2:13",
																							"nodeType": "YulIdentifier",
																							"src": "8307:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "8298:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8298:3:13"
																					},
																					"nativeSrc": "8298:12:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8298:12:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nativeSrc": "8322:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "8322:2:13"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "8326:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "8326:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8318:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8318:3:13"
																							},
																							"nativeSrc": "8318:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8318:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "8312:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8312:5:13"
																					},
																					"nativeSrc": "8312:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8312:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8291:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8291:6:13"
																			},
																			"nativeSrc": "8291:40:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8291:40:13"
																		},
																		"nativeSrc": "8291:40:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8291:40:13"
																	},
																	{
																		"nativeSrc": "8344:19:13",
																		"nodeType": "YulAssignment",
																		"src": "8344:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8355:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8355:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "8360:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8360:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8351:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8351:3:13"
																			},
																			"nativeSrc": "8351:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8351:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8344:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8344:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8376:25:13",
																		"nodeType": "YulAssignment",
																		"src": "8376:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8390:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8390:6:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "8398:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8398:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8386:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8386:3:13"
																			},
																			"nativeSrc": "8386:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8386:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8376:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8376:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8142:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8142:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8145:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8145:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8139:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8139:2:13"
																},
																"nativeSrc": "8139:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8139:13:13"
															},
															"nativeSrc": "8131:280:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8153:18:13",
																"nodeType": "YulBlock",
																"src": "8153:18:13",
																"statements": [
																	{
																		"nativeSrc": "8155:14:13",
																		"nodeType": "YulAssignment",
																		"src": "8155:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8164:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "8164:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8167:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8167:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8160:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8160:3:13"
																			},
																			"nativeSrc": "8160:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8160:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8155:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8155:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8135:3:13",
																"nodeType": "YulBlock",
																"src": "8135:3:13",
																"statements": []
															},
															"src": "8131:280:13"
														},
														{
															"nativeSrc": "8420:11:13",
															"nodeType": "YulAssignment",
															"src": "8420:11:13",
															"value": {
																"name": "pos",
																"nativeSrc": "8428:3:13",
																"nodeType": "YulIdentifier",
																"src": "8428:3:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8420:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8420:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7611:826:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7793:9:13",
														"nodeType": "YulTypedName",
														"src": "7793:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7804:6:13",
														"nodeType": "YulTypedName",
														"src": "7804:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7815:4:13",
														"nodeType": "YulTypedName",
														"src": "7815:4:13",
														"type": ""
													}
												],
												"src": "7611:826:13"
											},
											{
												"body": {
													"nativeSrc": "8593:507:13",
													"nodeType": "YulBlock",
													"src": "8593:507:13",
													"statements": [
														{
															"nativeSrc": "8603:12:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8603:12:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8613:2:13",
																"nodeType": "YulLiteral",
																"src": "8613:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8607:2:13",
																	"nodeType": "YulTypedName",
																	"src": "8607:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8624:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8624:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8642:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8642:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8653:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8653:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8638:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8638:3:13"
																},
																"nativeSrc": "8638:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8638:18:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "8628:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8628:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8672:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8672:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8683:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8683:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8665:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:13"
																},
																"nativeSrc": "8665:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8665:21:13"
															},
															"nativeSrc": "8665:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8665:21:13"
														},
														{
															"nativeSrc": "8695:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8695:17:13",
															"value": {
																"name": "tail_1",
																"nativeSrc": "8706:6:13",
																"nodeType": "YulIdentifier",
																"src": "8706:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "8699:3:13",
																	"nodeType": "YulTypedName",
																	"src": "8699:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8721:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8721:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8741:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8735:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8735:5:13"
																},
																"nativeSrc": "8735:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8735:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8725:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8725:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "8764:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8764:6:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8772:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8772:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8757:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8757:6:13"
																},
																"nativeSrc": "8757:22:13",
																"nodeType": "YulFunctionCall",
																"src": "8757:22:13"
															},
															"nativeSrc": "8757:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "8757:22:13"
														},
														{
															"nativeSrc": "8788:25:13",
															"nodeType": "YulAssignment",
															"src": "8788:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8799:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8799:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8810:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8810:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8795:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8795:3:13"
																},
																"nativeSrc": "8795:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8795:18:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8788:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8788:3:13"
																}
															]
														},
														{
															"nativeSrc": "8822:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8822:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8840:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8840:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8848:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8848:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8836:3:13"
																},
																"nativeSrc": "8836:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8836:15:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "8826:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8826:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8860:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8860:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8869:1:13",
																"nodeType": "YulLiteral",
																"src": "8869:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8864:1:13",
																	"nodeType": "YulTypedName",
																	"src": "8864:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8928:146:13",
																"nodeType": "YulBlock",
																"src": "8928:146:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8949:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8949:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "8964:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8964:6:13"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "8958:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "8958:5:13"
																							},
																							"nativeSrc": "8958:13:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8958:13:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8981:3:13",
																											"nodeType": "YulLiteral",
																											"src": "8981:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8986:1:13",
																											"nodeType": "YulLiteral",
																											"src": "8986:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "8977:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "8977:3:13"
																									},
																									"nativeSrc": "8977:11:13",
																									"nodeType": "YulFunctionCall",
																									"src": "8977:11:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8990:1:13",
																									"nodeType": "YulLiteral",
																									"src": "8990:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "8973:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8973:3:13"
																							},
																							"nativeSrc": "8973:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8973:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8954:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8954:3:13"
																					},
																					"nativeSrc": "8954:39:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8954:39:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8942:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8942:6:13"
																			},
																			"nativeSrc": "8942:52:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8942:52:13"
																		},
																		"nativeSrc": "8942:52:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:52:13"
																	},
																	{
																		"nativeSrc": "9007:19:13",
																		"nodeType": "YulAssignment",
																		"src": "9007:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "9018:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9018:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9023:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9023:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9014:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9014:3:13"
																			},
																			"nativeSrc": "9014:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9014:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9007:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9007:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9039:25:13",
																		"nodeType": "YulAssignment",
																		"src": "9039:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9053:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "9053:6:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9061:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "9061:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9049:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9049:3:13"
																			},
																			"nativeSrc": "9049:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9049:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9039:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9039:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8890:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8890:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8893:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8893:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8887:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8887:2:13"
																},
																"nativeSrc": "8887:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8887:13:13"
															},
															"nativeSrc": "8879:195:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8901:18:13",
																"nodeType": "YulBlock",
																"src": "8901:18:13",
																"statements": [
																	{
																		"nativeSrc": "8903:14:13",
																		"nodeType": "YulAssignment",
																		"src": "8903:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8912:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "8912:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8915:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8915:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8908:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8908:3:13"
																			},
																			"nativeSrc": "8908:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8908:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8903:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8903:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8883:3:13",
																"nodeType": "YulBlock",
																"src": "8883:3:13",
																"statements": []
															},
															"src": "8879:195:13"
														},
														{
															"nativeSrc": "9083:11:13",
															"nodeType": "YulAssignment",
															"src": "9083:11:13",
															"value": {
																"name": "pos",
																"nativeSrc": "9091:3:13",
																"nodeType": "YulIdentifier",
																"src": "9091:3:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9083:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9083:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8442:658:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8562:9:13",
														"nodeType": "YulTypedName",
														"src": "8562:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8573:6:13",
														"nodeType": "YulTypedName",
														"src": "8573:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8584:4:13",
														"nodeType": "YulTypedName",
														"src": "8584:4:13",
														"type": ""
													}
												],
												"src": "8442:658:13"
											},
											{
												"body": {
													"nativeSrc": "9137:95:13",
													"nodeType": "YulBlock",
													"src": "9137:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9154:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9154:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9161:3:13",
																				"nodeType": "YulLiteral",
																				"src": "9161:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9166:10:13",
																				"nodeType": "YulLiteral",
																				"src": "9166:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9157:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9157:3:13"
																		},
																		"nativeSrc": "9157:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9157:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9147:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9147:6:13"
																},
																"nativeSrc": "9147:31:13",
																"nodeType": "YulFunctionCall",
																"src": "9147:31:13"
															},
															"nativeSrc": "9147:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "9147:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9194:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9197:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9197:4:13",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9187:6:13"
																},
																"nativeSrc": "9187:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9187:15:13"
															},
															"nativeSrc": "9187:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9187:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9218:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9218:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9221:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9221:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9211:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:13"
																},
																"nativeSrc": "9211:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9211:15:13"
															},
															"nativeSrc": "9211:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9211:15:13"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "9105:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9105:127:13"
											},
											{
												"body": {
													"nativeSrc": "9347:132:13",
													"nodeType": "YulBlock",
													"src": "9347:132:13",
													"statements": [
														{
															"nativeSrc": "9357:26:13",
															"nodeType": "YulAssignment",
															"src": "9357:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9369:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9369:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9380:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9380:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9365:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9365:3:13"
																},
																"nativeSrc": "9365:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9365:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9357:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9357:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9417:22:13",
																"nodeType": "YulBlock",
																"src": "9417:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "9419:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9419:16:13"
																			},
																			"nativeSrc": "9419:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9419:18:13"
																		},
																		"nativeSrc": "9419:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9419:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9405:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9405:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9413:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9413:1:13",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9402:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9402:2:13"
																		},
																		"nativeSrc": "9402:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9402:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9395:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9395:6:13"
																},
																"nativeSrc": "9395:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9395:21:13"
															},
															"nativeSrc": "9392:47:13",
															"nodeType": "YulIf",
															"src": "9392:47:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9455:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9455:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9466:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9466:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9448:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9448:6:13"
																},
																"nativeSrc": "9448:25:13",
																"nodeType": "YulFunctionCall",
																"src": "9448:25:13"
															},
															"nativeSrc": "9448:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "9448:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$2296__to_t_uint8__fromStack_reversed",
												"nativeSrc": "9237:242:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9316:9:13",
														"nodeType": "YulTypedName",
														"src": "9316:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9327:6:13",
														"nodeType": "YulTypedName",
														"src": "9327:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9338:4:13",
														"nodeType": "YulTypedName",
														"src": "9338:4:13",
														"type": ""
													}
												],
												"src": "9237:242:13"
											},
											{
												"body": {
													"nativeSrc": "9580:292:13",
													"nodeType": "YulBlock",
													"src": "9580:292:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9626:16:13",
																"nodeType": "YulBlock",
																"src": "9626:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9635:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9635:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9638:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9638:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9628:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9628:6:13"
																			},
																			"nativeSrc": "9628:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9628:12:13"
																		},
																		"nativeSrc": "9628:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9628:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9601:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9601:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9610:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9610:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9597:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9597:3:13"
																		},
																		"nativeSrc": "9597:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9597:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9622:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9622:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9593:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9593:3:13"
																},
																"nativeSrc": "9593:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9593:32:13"
															},
															"nativeSrc": "9590:52:13",
															"nodeType": "YulIf",
															"src": "9590:52:13"
														},
														{
															"nativeSrc": "9651:33:13",
															"nodeType": "YulAssignment",
															"src": "9651:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9674:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9674:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9661:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9661:12:13"
																},
																"nativeSrc": "9661:23:13",
																"nodeType": "YulFunctionCall",
																"src": "9661:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9651:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9651:6:13"
																}
															]
														},
														{
															"nativeSrc": "9693:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9693:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9724:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9724:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9735:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9735:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9720:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9720:3:13"
																		},
																		"nativeSrc": "9720:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9707:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9707:12:13"
																},
																"nativeSrc": "9707:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9707:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "9697:6:13",
																	"nodeType": "YulTypedName",
																	"src": "9697:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9782:16:13",
																"nodeType": "YulBlock",
																"src": "9782:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9791:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9791:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9794:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9794:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9784:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9784:6:13"
																			},
																			"nativeSrc": "9784:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9784:12:13"
																		},
																		"nativeSrc": "9784:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9784:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9754:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9754:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9762:18:13",
																		"nodeType": "YulLiteral",
																		"src": "9762:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9751:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9751:2:13"
																},
																"nativeSrc": "9751:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9751:30:13"
															},
															"nativeSrc": "9748:50:13",
															"nodeType": "YulIf",
															"src": "9748:50:13"
														},
														{
															"nativeSrc": "9807:59:13",
															"nodeType": "YulAssignment",
															"src": "9807:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9838:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9838:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "9849:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9849:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9834:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9834:3:13"
																		},
																		"nativeSrc": "9834:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9834:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "9858:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "9858:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "9817:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "9817:16:13"
																},
																"nativeSrc": "9817:49:13",
																"nodeType": "YulFunctionCall",
																"src": "9817:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9807:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9807:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nativeSrc": "9484:388:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9538:9:13",
														"nodeType": "YulTypedName",
														"src": "9538:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9549:7:13",
														"nodeType": "YulTypedName",
														"src": "9549:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9561:6:13",
														"nodeType": "YulTypedName",
														"src": "9561:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9569:6:13",
														"nodeType": "YulTypedName",
														"src": "9569:6:13",
														"type": ""
													}
												],
												"src": "9484:388:13"
											},
											{
												"body": {
													"nativeSrc": "9947:110:13",
													"nodeType": "YulBlock",
													"src": "9947:110:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9993:16:13",
																"nodeType": "YulBlock",
																"src": "9993:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10002:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10002:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10005:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10005:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9995:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9995:6:13"
																			},
																			"nativeSrc": "9995:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9995:12:13"
																		},
																		"nativeSrc": "9995:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9995:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9968:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9968:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9977:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9977:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9964:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9964:3:13"
																		},
																		"nativeSrc": "9964:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9964:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9989:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9989:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9960:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9960:3:13"
																},
																"nativeSrc": "9960:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9960:32:13"
															},
															"nativeSrc": "9957:52:13",
															"nodeType": "YulIf",
															"src": "9957:52:13"
														},
														{
															"nativeSrc": "10018:33:13",
															"nodeType": "YulAssignment",
															"src": "10018:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10041:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10041:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10028:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10028:12:13"
																},
																"nativeSrc": "10028:23:13",
																"nodeType": "YulFunctionCall",
																"src": "10028:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10018:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10018:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "9877:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9913:9:13",
														"nodeType": "YulTypedName",
														"src": "9913:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9924:7:13",
														"nodeType": "YulTypedName",
														"src": "9924:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9936:6:13",
														"nodeType": "YulTypedName",
														"src": "9936:6:13",
														"type": ""
													}
												],
												"src": "9877:180:13"
											},
											{
												"body": {
													"nativeSrc": "10236:164:13",
													"nodeType": "YulBlock",
													"src": "10236:164:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10253:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10253:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10264:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10246:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10246:6:13"
																},
																"nativeSrc": "10246:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10246:21:13"
															},
															"nativeSrc": "10246:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10246:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10287:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10287:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10298:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10298:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10283:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10283:3:13"
																		},
																		"nativeSrc": "10283:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10283:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10303:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10303:2:13",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10276:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10276:6:13"
																},
																"nativeSrc": "10276:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10276:30:13"
															},
															"nativeSrc": "10276:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "10276:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10326:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10326:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10337:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10337:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10322:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10322:3:13"
																		},
																		"nativeSrc": "10322:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10322:18:13"
																	},
																	{
																		"hexValue": "4152524159204d49534d41544348",
																		"kind": "string",
																		"nativeSrc": "10342:16:13",
																		"nodeType": "YulLiteral",
																		"src": "10342:16:13",
																		"type": "",
																		"value": "ARRAY MISMATCH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10315:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10315:6:13"
																},
																"nativeSrc": "10315:44:13",
																"nodeType": "YulFunctionCall",
																"src": "10315:44:13"
															},
															"nativeSrc": "10315:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "10315:44:13"
														},
														{
															"nativeSrc": "10368:26:13",
															"nodeType": "YulAssignment",
															"src": "10368:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10380:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10380:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10391:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10391:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10376:3:13"
																},
																"nativeSrc": "10376:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10376:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10368:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10368:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_061c27735e8d4de427c1d79927697f5893e7c1ed55f494a77889279330b06ae6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10062:338:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10213:9:13",
														"nodeType": "YulTypedName",
														"src": "10213:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10227:4:13",
														"nodeType": "YulTypedName",
														"src": "10227:4:13",
														"type": ""
													}
												],
												"src": "10062:338:13"
											},
											{
												"body": {
													"nativeSrc": "10437:95:13",
													"nodeType": "YulBlock",
													"src": "10437:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10454:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10454:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10461:3:13",
																				"nodeType": "YulLiteral",
																				"src": "10461:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10466:10:13",
																				"nodeType": "YulLiteral",
																				"src": "10466:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10457:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10457:3:13"
																		},
																		"nativeSrc": "10457:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10457:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10447:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10447:6:13"
																},
																"nativeSrc": "10447:31:13",
																"nodeType": "YulFunctionCall",
																"src": "10447:31:13"
															},
															"nativeSrc": "10447:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "10447:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10494:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10494:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10497:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10497:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10487:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10487:6:13"
																},
																"nativeSrc": "10487:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10487:15:13"
															},
															"nativeSrc": "10487:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10487:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10518:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10518:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10521:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10521:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10511:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10511:6:13"
																},
																"nativeSrc": "10511:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10511:15:13"
															},
															"nativeSrc": "10511:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10511:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10405:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10405:127:13"
											},
											{
												"body": {
													"nativeSrc": "10569:95:13",
													"nodeType": "YulBlock",
													"src": "10569:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10586:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10586:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10593:3:13",
																				"nodeType": "YulLiteral",
																				"src": "10593:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10598:10:13",
																				"nodeType": "YulLiteral",
																				"src": "10598:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10589:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10589:3:13"
																		},
																		"nativeSrc": "10589:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10589:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10579:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10579:6:13"
																},
																"nativeSrc": "10579:31:13",
																"nodeType": "YulFunctionCall",
																"src": "10579:31:13"
															},
															"nativeSrc": "10579:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "10579:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10626:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10626:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10629:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10629:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10619:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10619:6:13"
																},
																"nativeSrc": "10619:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10619:15:13"
															},
															"nativeSrc": "10619:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10619:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10650:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10650:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10653:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10653:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10643:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10643:6:13"
																},
																"nativeSrc": "10643:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10643:15:13"
															},
															"nativeSrc": "10643:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10643:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10537:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10537:127:13"
											},
											{
												"body": {
													"nativeSrc": "10717:77:13",
													"nodeType": "YulBlock",
													"src": "10717:77:13",
													"statements": [
														{
															"nativeSrc": "10727:16:13",
															"nodeType": "YulAssignment",
															"src": "10727:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10738:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10738:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10741:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10741:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10734:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10734:3:13"
																},
																"nativeSrc": "10734:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10734:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10727:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10727:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10766:22:13",
																"nodeType": "YulBlock",
																"src": "10766:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10768:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10768:16:13"
																			},
																			"nativeSrc": "10768:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10768:18:13"
																		},
																		"nativeSrc": "10768:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10768:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10758:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10758:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10761:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10761:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10755:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10755:2:13"
																},
																"nativeSrc": "10755:10:13",
																"nodeType": "YulFunctionCall",
																"src": "10755:10:13"
															},
															"nativeSrc": "10752:36:13",
															"nodeType": "YulIf",
															"src": "10752:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10669:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10700:1:13",
														"nodeType": "YulTypedName",
														"src": "10700:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10703:1:13",
														"nodeType": "YulTypedName",
														"src": "10703:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10709:3:13",
														"nodeType": "YulTypedName",
														"src": "10709:3:13",
														"type": ""
													}
												],
												"src": "10669:125:13"
											},
											{
												"body": {
													"nativeSrc": "10973:162:13",
													"nodeType": "YulBlock",
													"src": "10973:162:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10990:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10990:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11001:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11001:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10983:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10983:6:13"
																},
																"nativeSrc": "10983:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10983:21:13"
															},
															"nativeSrc": "10983:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10983:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11024:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11024:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11035:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11020:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11020:3:13"
																		},
																		"nativeSrc": "11020:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11020:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11040:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11040:2:13",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11013:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11013:6:13"
																},
																"nativeSrc": "11013:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11013:30:13"
															},
															"nativeSrc": "11013:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "11013:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11063:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11063:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11074:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11074:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11059:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11059:3:13"
																		},
																		"nativeSrc": "11059:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11059:18:13"
																	},
																	{
																		"hexValue": "554e415554484f52495a4544",
																		"kind": "string",
																		"nativeSrc": "11079:14:13",
																		"nodeType": "YulLiteral",
																		"src": "11079:14:13",
																		"type": "",
																		"value": "UNAUTHORIZED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11052:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11052:6:13"
																},
																"nativeSrc": "11052:42:13",
																"nodeType": "YulFunctionCall",
																"src": "11052:42:13"
															},
															"nativeSrc": "11052:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "11052:42:13"
														},
														{
															"nativeSrc": "11103:26:13",
															"nodeType": "YulAssignment",
															"src": "11103:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11115:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11115:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11126:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11126:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11111:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11111:3:13"
																},
																"nativeSrc": "11111:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11111:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11103:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11103:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10799:336:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10950:9:13",
														"nodeType": "YulTypedName",
														"src": "10950:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10964:4:13",
														"nodeType": "YulTypedName",
														"src": "10964:4:13",
														"type": ""
													}
												],
												"src": "10799:336:13"
											},
											{
												"body": {
													"nativeSrc": "11314:165:13",
													"nodeType": "YulBlock",
													"src": "11314:165:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11331:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11331:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11342:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11342:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11324:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11324:6:13"
																},
																"nativeSrc": "11324:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11324:21:13"
															},
															"nativeSrc": "11324:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11324:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11365:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11365:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11376:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11376:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11361:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11361:3:13"
																		},
																		"nativeSrc": "11361:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11361:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11381:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11381:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11354:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11354:6:13"
																},
																"nativeSrc": "11354:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11354:30:13"
															},
															"nativeSrc": "11354:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "11354:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11404:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11404:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11415:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11415:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11400:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11400:3:13"
																		},
																		"nativeSrc": "11400:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11400:18:13"
																	},
																	{
																		"hexValue": "4e4f545f494e495449414c495a4544",
																		"kind": "string",
																		"nativeSrc": "11420:17:13",
																		"nodeType": "YulLiteral",
																		"src": "11420:17:13",
																		"type": "",
																		"value": "NOT_INITIALIZED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11393:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11393:6:13"
																},
																"nativeSrc": "11393:45:13",
																"nodeType": "YulFunctionCall",
																"src": "11393:45:13"
															},
															"nativeSrc": "11393:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "11393:45:13"
														},
														{
															"nativeSrc": "11447:26:13",
															"nodeType": "YulAssignment",
															"src": "11447:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11459:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11459:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11470:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11470:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11455:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11455:3:13"
																},
																"nativeSrc": "11455:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11455:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11447:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11447:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96a721d265006ec8b79a4f231d5b616559a7b3d181d752324c3a3c78630a14a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11140:339:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11291:9:13",
														"nodeType": "YulTypedName",
														"src": "11291:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11305:4:13",
														"nodeType": "YulTypedName",
														"src": "11305:4:13",
														"type": ""
													}
												],
												"src": "11140:339:13"
											},
											{
												"body": {
													"nativeSrc": "11548:378:13",
													"nodeType": "YulBlock",
													"src": "11548:378:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11597:16:13",
																"nodeType": "YulBlock",
																"src": "11597:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11606:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11606:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11609:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11609:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11599:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11599:6:13"
																			},
																			"nativeSrc": "11599:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11599:12:13"
																		},
																		"nativeSrc": "11599:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11599:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11576:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11576:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11584:4:13",
																						"nodeType": "YulLiteral",
																						"src": "11584:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11572:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11572:3:13"
																				},
																				"nativeSrc": "11572:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11572:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11591:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11591:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11568:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11568:3:13"
																		},
																		"nativeSrc": "11568:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11568:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11561:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11561:6:13"
																},
																"nativeSrc": "11561:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11561:35:13"
															},
															"nativeSrc": "11558:55:13",
															"nodeType": "YulIf",
															"src": "11558:55:13"
														},
														{
															"nativeSrc": "11622:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11622:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11638:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11638:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11632:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11632:5:13"
																},
																"nativeSrc": "11632:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11632:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11626:2:13",
																	"nodeType": "YulTypedName",
																	"src": "11626:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11654:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11654:63:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "11713:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "11713:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_bytes",
																			"nativeSrc": "11685:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "11685:27:13"
																		},
																		"nativeSrc": "11685:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11685:31:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11669:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "11669:15:13"
																},
																"nativeSrc": "11669:48:13",
																"nodeType": "YulFunctionCall",
																"src": "11669:48:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "11658:7:13",
																	"nodeType": "YulTypedName",
																	"src": "11658:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nativeSrc": "11733:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "11733:7:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "11742:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "11742:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11726:6:13"
																},
																"nativeSrc": "11726:19:13",
																"nodeType": "YulFunctionCall",
																"src": "11726:19:13"
															},
															"nativeSrc": "11726:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "11726:19:13"
														},
														{
															"body": {
																"nativeSrc": "11793:16:13",
																"nodeType": "YulBlock",
																"src": "11793:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11802:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11802:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11805:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11805:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11795:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11795:6:13"
																			},
																			"nativeSrc": "11795:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11795:12:13"
																		},
																		"nativeSrc": "11795:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11795:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11768:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11768:6:13"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "11776:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "11776:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11764:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11764:3:13"
																				},
																				"nativeSrc": "11764:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11764:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11781:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11781:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11760:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11760:3:13"
																		},
																		"nativeSrc": "11760:26:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11760:26:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11788:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11788:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11757:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11757:2:13"
																},
																"nativeSrc": "11757:35:13",
																"nodeType": "YulFunctionCall",
																"src": "11757:35:13"
															},
															"nativeSrc": "11754:55:13",
															"nodeType": "YulIf",
															"src": "11754:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11857:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11857:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11865:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11865:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11853:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11853:3:13"
																		},
																		"nativeSrc": "11853:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11853:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nativeSrc": "11876:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11876:7:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11885:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11885:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11872:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11872:3:13"
																		},
																		"nativeSrc": "11872:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11872:18:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "11892:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "11892:2:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11818:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "11818:34:13"
																},
																"nativeSrc": "11818:77:13",
																"nodeType": "YulFunctionCall",
																"src": "11818:77:13"
															},
															"nativeSrc": "11818:77:13",
															"nodeType": "YulExpressionStatement",
															"src": "11818:77:13"
														},
														{
															"nativeSrc": "11904:16:13",
															"nodeType": "YulAssignment",
															"src": "11904:16:13",
															"value": {
																"name": "array_1",
																"nativeSrc": "11913:7:13",
																"nodeType": "YulIdentifier",
																"src": "11913:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11904:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11904:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "11484:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11522:6:13",
														"nodeType": "YulTypedName",
														"src": "11522:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11530:3:13",
														"nodeType": "YulTypedName",
														"src": "11530:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11538:5:13",
														"nodeType": "YulTypedName",
														"src": "11538:5:13",
														"type": ""
													}
												],
												"src": "11484:442:13"
											},
											{
												"body": {
													"nativeSrc": "11991:78:13",
													"nodeType": "YulBlock",
													"src": "11991:78:13",
													"statements": [
														{
															"nativeSrc": "12001:22:13",
															"nodeType": "YulAssignment",
															"src": "12001:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12016:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12016:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12010:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12010:5:13"
																},
																"nativeSrc": "12010:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12010:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12001:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12001:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12057:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12057:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "12032:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "12032:24:13"
																},
																"nativeSrc": "12032:31:13",
																"nodeType": "YulFunctionCall",
																"src": "12032:31:13"
															},
															"nativeSrc": "12032:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "12032:31:13"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "11931:138:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11970:6:13",
														"nodeType": "YulTypedName",
														"src": "11970:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11981:5:13",
														"nodeType": "YulTypedName",
														"src": "11981:5:13",
														"type": ""
													}
												],
												"src": "11931:138:13"
											},
											{
												"body": {
													"nativeSrc": "12149:590:13",
													"nodeType": "YulBlock",
													"src": "12149:590:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12198:16:13",
																"nodeType": "YulBlock",
																"src": "12198:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12207:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12207:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12210:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12210:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12200:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12200:6:13"
																			},
																			"nativeSrc": "12200:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12200:12:13"
																		},
																		"nativeSrc": "12200:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12200:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12177:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12177:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12185:4:13",
																						"nodeType": "YulLiteral",
																						"src": "12185:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12173:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12173:3:13"
																				},
																				"nativeSrc": "12173:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12173:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12192:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12192:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12169:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12169:3:13"
																		},
																		"nativeSrc": "12169:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12169:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12162:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12162:6:13"
																},
																"nativeSrc": "12162:35:13",
																"nodeType": "YulFunctionCall",
																"src": "12162:35:13"
															},
															"nativeSrc": "12159:55:13",
															"nodeType": "YulIf",
															"src": "12159:55:13"
														},
														{
															"nativeSrc": "12223:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12223:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12239:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12239:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12233:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12233:5:13"
																},
																"nativeSrc": "12233:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12233:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12227:2:13",
																	"nodeType": "YulTypedName",
																	"src": "12227:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12255:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12255:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "12265:4:13",
																"nodeType": "YulLiteral",
																"src": "12265:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "12259:2:13",
																	"nodeType": "YulTypedName",
																	"src": "12259:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12278:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12278:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "12345:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "12345:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "12305:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "12305:39:13"
																		},
																		"nativeSrc": "12305:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12305:43:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12289:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "12289:15:13"
																},
																"nativeSrc": "12289:60:13",
																"nodeType": "YulFunctionCall",
																"src": "12289:60:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12282:3:13",
																	"nodeType": "YulTypedName",
																	"src": "12282:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12358:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12358:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "12371:3:13",
																"nodeType": "YulIdentifier",
																"src": "12371:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "12362:5:13",
																	"nodeType": "YulTypedName",
																	"src": "12362:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12390:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12390:3:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "12395:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "12395:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12383:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12383:6:13"
																},
																"nativeSrc": "12383:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12383:15:13"
															},
															"nativeSrc": "12383:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "12383:15:13"
														},
														{
															"nativeSrc": "12407:21:13",
															"nodeType": "YulAssignment",
															"src": "12407:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "12418:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12418:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12423:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12423:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12414:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12414:3:13"
																},
																"nativeSrc": "12414:14:13",
																"nodeType": "YulFunctionCall",
																"src": "12414:14:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "12407:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12407:3:13"
																}
															]
														},
														{
															"nativeSrc": "12437:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12437:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12459:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12459:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12471:1:13",
																						"nodeType": "YulLiteral",
																						"src": "12471:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "12474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "12474:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "12467:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12467:3:13"
																				},
																				"nativeSrc": "12467:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12467:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12455:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12455:3:13"
																		},
																		"nativeSrc": "12455:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12455:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12480:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12480:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12451:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12451:3:13"
																},
																"nativeSrc": "12451:34:13",
																"nodeType": "YulFunctionCall",
																"src": "12451:34:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "12441:6:13",
																	"nodeType": "YulTypedName",
																	"src": "12441:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12513:16:13",
																"nodeType": "YulBlock",
																"src": "12513:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12522:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12522:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12525:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12525:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12515:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12515:6:13"
																			},
																			"nativeSrc": "12515:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12515:12:13"
																		},
																		"nativeSrc": "12515:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12515:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12500:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12500:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12508:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12508:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12497:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12497:2:13"
																},
																"nativeSrc": "12497:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12497:15:13"
															},
															"nativeSrc": "12494:35:13",
															"nodeType": "YulIf",
															"src": "12494:35:13"
														},
														{
															"nativeSrc": "12538:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12538:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12553:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12561:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12561:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12549:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12549:3:13"
																},
																"nativeSrc": "12549:17:13",
																"nodeType": "YulFunctionCall",
																"src": "12549:17:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "12542:3:13",
																	"nodeType": "YulTypedName",
																	"src": "12542:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12631:79:13",
																"nodeType": "YulBlock",
																"src": "12631:79:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12652:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12652:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "12663:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "12663:3:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "12657:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "12657:5:13"
																					},
																					"nativeSrc": "12657:10:13",
																					"nodeType": "YulFunctionCall",
																					"src": "12657:10:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12645:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12645:6:13"
																			},
																			"nativeSrc": "12645:23:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12645:23:13"
																		},
																		"nativeSrc": "12645:23:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12645:23:13"
																	},
																	{
																		"nativeSrc": "12681:19:13",
																		"nodeType": "YulAssignment",
																		"src": "12681:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12692:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12692:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "12697:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "12697:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12688:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12688:3:13"
																			},
																			"nativeSrc": "12688:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12688:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "12681:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12681:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12586:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12586:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12591:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12591:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12583:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12583:2:13"
																},
																"nativeSrc": "12583:15:13",
																"nodeType": "YulFunctionCall",
																"src": "12583:15:13"
															},
															"nativeSrc": "12575:135:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12599:23:13",
																"nodeType": "YulBlock",
																"src": "12599:23:13",
																"statements": [
																	{
																		"nativeSrc": "12601:19:13",
																		"nodeType": "YulAssignment",
																		"src": "12601:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12612:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12612:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "12617:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "12617:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12608:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12608:3:13"
																			},
																			"nativeSrc": "12608:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12608:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "12601:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12601:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12579:3:13",
																"nodeType": "YulBlock",
																"src": "12579:3:13",
																"statements": []
															},
															"src": "12575:135:13"
														},
														{
															"nativeSrc": "12719:14:13",
															"nodeType": "YulAssignment",
															"src": "12719:14:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "12728:5:13",
																"nodeType": "YulIdentifier",
																"src": "12728:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12719:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12719:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_fromMemory",
												"nativeSrc": "12074:665:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12123:6:13",
														"nodeType": "YulTypedName",
														"src": "12123:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12131:3:13",
														"nodeType": "YulTypedName",
														"src": "12131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12139:5:13",
														"nodeType": "YulTypedName",
														"src": "12139:5:13",
														"type": ""
													}
												],
												"src": "12074:665:13"
											},
											{
												"body": {
													"nativeSrc": "12819:665:13",
													"nodeType": "YulBlock",
													"src": "12819:665:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12868:16:13",
																"nodeType": "YulBlock",
																"src": "12868:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12877:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12877:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12880:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12880:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12870:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12870:6:13"
																			},
																			"nativeSrc": "12870:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12870:12:13"
																		},
																		"nativeSrc": "12870:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12870:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12847:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12847:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12855:4:13",
																						"nodeType": "YulLiteral",
																						"src": "12855:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12843:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12843:3:13"
																				},
																				"nativeSrc": "12843:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12843:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12862:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12862:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12839:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12839:3:13"
																		},
																		"nativeSrc": "12839:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12839:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12832:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12832:6:13"
																},
																"nativeSrc": "12832:35:13",
																"nodeType": "YulFunctionCall",
																"src": "12832:35:13"
															},
															"nativeSrc": "12829:55:13",
															"nodeType": "YulIf",
															"src": "12829:55:13"
														},
														{
															"nativeSrc": "12893:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12893:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12909:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12909:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12903:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12903:5:13"
																},
																"nativeSrc": "12903:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12903:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12897:2:13",
																	"nodeType": "YulTypedName",
																	"src": "12897:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12925:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12925:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "12935:4:13",
																"nodeType": "YulLiteral",
																"src": "12935:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "12929:2:13",
																	"nodeType": "YulTypedName",
																	"src": "12929:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12948:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12948:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "13015:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "13015:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "12975:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "12975:39:13"
																		},
																		"nativeSrc": "12975:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12975:43:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12959:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "12959:15:13"
																},
																"nativeSrc": "12959:60:13",
																"nodeType": "YulFunctionCall",
																"src": "12959:60:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12952:3:13",
																	"nodeType": "YulTypedName",
																	"src": "12952:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13028:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13028:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "13041:3:13",
																"nodeType": "YulIdentifier",
																"src": "13041:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "13032:5:13",
																	"nodeType": "YulTypedName",
																	"src": "13032:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "13060:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13060:3:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "13065:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "13065:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13053:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13053:6:13"
																},
																"nativeSrc": "13053:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13053:15:13"
															},
															"nativeSrc": "13053:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13053:15:13"
														},
														{
															"nativeSrc": "13077:21:13",
															"nodeType": "YulAssignment",
															"src": "13077:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "13088:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13088:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13093:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13093:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13084:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13084:3:13"
																},
																"nativeSrc": "13084:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13084:14:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "13077:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13077:3:13"
																}
															]
														},
														{
															"nativeSrc": "13107:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13107:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13129:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13129:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13141:1:13",
																						"nodeType": "YulLiteral",
																						"src": "13141:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "13144:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "13144:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "13137:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13137:3:13"
																				},
																				"nativeSrc": "13137:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13137:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13125:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13125:3:13"
																		},
																		"nativeSrc": "13125:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13125:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13150:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13150:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13121:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13121:3:13"
																},
																"nativeSrc": "13121:34:13",
																"nodeType": "YulFunctionCall",
																"src": "13121:34:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "13111:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13111:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13183:16:13",
																"nodeType": "YulBlock",
																"src": "13183:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13192:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13192:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13195:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13195:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13185:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13185:6:13"
																			},
																			"nativeSrc": "13185:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13185:12:13"
																		},
																		"nativeSrc": "13185:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13185:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "13170:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13170:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13178:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13178:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13167:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13167:2:13"
																},
																"nativeSrc": "13167:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13167:15:13"
															},
															"nativeSrc": "13164:35:13",
															"nodeType": "YulIf",
															"src": "13164:35:13"
														},
														{
															"nativeSrc": "13208:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13208:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13223:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13223:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13231:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13231:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13219:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13219:3:13"
																},
																"nativeSrc": "13219:17:13",
																"nodeType": "YulFunctionCall",
																"src": "13219:17:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "13212:3:13",
																	"nodeType": "YulTypedName",
																	"src": "13212:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13301:154:13",
																"nodeType": "YulBlock",
																"src": "13301:154:13",
																"statements": [
																	{
																		"nativeSrc": "13315:23:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13315:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "13334:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13334:3:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "13328:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13328:5:13"
																			},
																			"nativeSrc": "13328:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13328:10:13"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "13319:5:13",
																				"nodeType": "YulTypedName",
																				"src": "13319:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "13376:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "13376:5:13"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nativeSrc": "13351:24:13",
																				"nodeType": "YulIdentifier",
																				"src": "13351:24:13"
																			},
																			"nativeSrc": "13351:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13351:31:13"
																		},
																		"nativeSrc": "13351:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13351:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "13402:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13402:3:13"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "13407:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "13407:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13395:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13395:6:13"
																			},
																			"nativeSrc": "13395:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13395:18:13"
																		},
																		"nativeSrc": "13395:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13395:18:13"
																	},
																	{
																		"nativeSrc": "13426:19:13",
																		"nodeType": "YulAssignment",
																		"src": "13426:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "13437:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13437:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "13442:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "13442:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13433:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13433:3:13"
																			},
																			"nativeSrc": "13433:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13433:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "13426:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13426:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13256:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13256:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "13261:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13261:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13253:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13253:2:13"
																},
																"nativeSrc": "13253:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13253:15:13"
															},
															"nativeSrc": "13245:210:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13269:23:13",
																"nodeType": "YulBlock",
																"src": "13269:23:13",
																"statements": [
																	{
																		"nativeSrc": "13271:19:13",
																		"nodeType": "YulAssignment",
																		"src": "13271:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "13282:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13282:3:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "13287:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "13287:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13278:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13278:3:13"
																			},
																			"nativeSrc": "13278:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13278:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "13271:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13271:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13249:3:13",
																"nodeType": "YulBlock",
																"src": "13249:3:13",
																"statements": []
															},
															"src": "13245:210:13"
														},
														{
															"nativeSrc": "13464:14:13",
															"nodeType": "YulAssignment",
															"src": "13464:14:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "13473:5:13",
																"nodeType": "YulIdentifier",
																"src": "13473:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13464:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13464:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn_fromMemory",
												"nativeSrc": "12744:740:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12793:6:13",
														"nodeType": "YulTypedName",
														"src": "12793:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12801:3:13",
														"nodeType": "YulTypedName",
														"src": "12801:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12809:5:13",
														"nodeType": "YulTypedName",
														"src": "12809:5:13",
														"type": ""
													}
												],
												"src": "12744:740:13"
											},
											{
												"body": {
													"nativeSrc": "13595:1176:13",
													"nodeType": "YulBlock",
													"src": "13595:1176:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "13641:16:13",
																"nodeType": "YulBlock",
																"src": "13641:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13650:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13650:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13653:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13653:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13643:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13643:6:13"
																			},
																			"nativeSrc": "13643:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13643:12:13"
																		},
																		"nativeSrc": "13643:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13643:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13616:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13616:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13625:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13625:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13612:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13612:3:13"
																		},
																		"nativeSrc": "13612:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13612:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13637:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13637:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13608:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13608:3:13"
																},
																"nativeSrc": "13608:32:13",
																"nodeType": "YulFunctionCall",
																"src": "13608:32:13"
															},
															"nativeSrc": "13605:52:13",
															"nodeType": "YulIf",
															"src": "13605:52:13"
														},
														{
															"nativeSrc": "13666:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13666:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13686:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13686:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13680:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13680:5:13"
																},
																"nativeSrc": "13680:16:13",
																"nodeType": "YulFunctionCall",
																"src": "13680:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "13670:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13670:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13705:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13705:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "13715:18:13",
																"nodeType": "YulLiteral",
																"src": "13715:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13709:2:13",
																	"nodeType": "YulTypedName",
																	"src": "13709:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13760:16:13",
																"nodeType": "YulBlock",
																"src": "13760:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13769:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13769:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13772:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13772:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13762:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13762:6:13"
																			},
																			"nativeSrc": "13762:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13762:12:13"
																		},
																		"nativeSrc": "13762:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13762:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13748:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13748:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "13756:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "13756:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13745:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13745:2:13"
																},
																"nativeSrc": "13745:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13745:14:13"
															},
															"nativeSrc": "13742:34:13",
															"nodeType": "YulIf",
															"src": "13742:34:13"
														},
														{
															"nativeSrc": "13785:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13785:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13799:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13799:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "13810:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13810:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13795:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13795:3:13"
																},
																"nativeSrc": "13795:22:13",
																"nodeType": "YulFunctionCall",
																"src": "13795:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "13789:2:13",
																	"nodeType": "YulTypedName",
																	"src": "13789:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13859:16:13",
																"nodeType": "YulBlock",
																"src": "13859:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13868:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13868:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13871:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13871:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13861:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13861:6:13"
																			},
																			"nativeSrc": "13861:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13861:12:13"
																		},
																		"nativeSrc": "13861:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13861:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13837:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13837:7:13"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "13846:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "13846:2:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13833:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13833:3:13"
																		},
																		"nativeSrc": "13833:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13833:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13851:6:13",
																		"nodeType": "YulLiteral",
																		"src": "13851:6:13",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13829:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13829:3:13"
																},
																"nativeSrc": "13829:29:13",
																"nodeType": "YulFunctionCall",
																"src": "13829:29:13"
															},
															"nativeSrc": "13826:49:13",
															"nodeType": "YulIf",
															"src": "13826:49:13"
														},
														{
															"nativeSrc": "13884:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13884:35:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory_3945",
																	"nativeSrc": "13897:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "13897:20:13"
																},
																"nativeSrc": "13897:22:13",
																"nodeType": "YulFunctionCall",
																"src": "13897:22:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "13888:5:13",
																	"nodeType": "YulTypedName",
																	"src": "13888:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13935:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13935:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "13948:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "13948:2:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13942:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "13942:5:13"
																		},
																		"nativeSrc": "13942:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13942:9:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13928:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13928:6:13"
																},
																"nativeSrc": "13928:24:13",
																"nodeType": "YulFunctionCall",
																"src": "13928:24:13"
															},
															"nativeSrc": "13928:24:13",
															"nodeType": "YulExpressionStatement",
															"src": "13928:24:13"
														},
														{
															"nativeSrc": "13961:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13961:34:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "13987:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "13987:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13991:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13991:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13983:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13983:3:13"
																		},
																		"nativeSrc": "13983:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13983:11:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13977:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13977:5:13"
																},
																"nativeSrc": "13977:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13977:18:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "13965:8:13",
																	"nodeType": "YulTypedName",
																	"src": "13965:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14024:16:13",
																"nodeType": "YulBlock",
																"src": "14024:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14033:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14033:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14036:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14036:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14026:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14026:6:13"
																			},
																			"nativeSrc": "14026:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14026:12:13"
																		},
																		"nativeSrc": "14026:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14026:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "14010:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "14010:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "14020:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "14020:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14007:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14007:2:13"
																},
																"nativeSrc": "14007:16:13",
																"nodeType": "YulFunctionCall",
																"src": "14007:16:13"
															},
															"nativeSrc": "14004:36:13",
															"nodeType": "YulIf",
															"src": "14004:36:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14060:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14060:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14067:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14067:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14056:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14056:3:13"
																		},
																		"nativeSrc": "14056:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14056:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "14105:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14105:2:13"
																					},
																					{
																						"name": "offset_1",
																						"nativeSrc": "14109:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "14109:8:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14101:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14101:3:13"
																				},
																				"nativeSrc": "14101:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14101:17:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14120:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14120:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string_fromMemory",
																			"nativeSrc": "14072:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "14072:28:13"
																		},
																		"nativeSrc": "14072:56:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14072:56:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14049:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14049:6:13"
																},
																"nativeSrc": "14049:80:13",
																"nodeType": "YulFunctionCall",
																"src": "14049:80:13"
															},
															"nativeSrc": "14049:80:13",
															"nodeType": "YulExpressionStatement",
															"src": "14049:80:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14149:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14149:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14156:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14156:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14145:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14145:3:13"
																		},
																		"nativeSrc": "14145:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14145:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "14171:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14171:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14175:2:13",
																						"nodeType": "YulLiteral",
																						"src": "14175:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14167:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14167:3:13"
																				},
																				"nativeSrc": "14167:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14167:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14161:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "14161:5:13"
																		},
																		"nativeSrc": "14161:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14161:18:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14138:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14138:6:13"
																},
																"nativeSrc": "14138:42:13",
																"nodeType": "YulFunctionCall",
																"src": "14138:42:13"
															},
															"nativeSrc": "14138:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "14138:42:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14200:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14200:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14207:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14207:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14196:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14196:3:13"
																		},
																		"nativeSrc": "14196:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14196:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "14222:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14222:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14226:2:13",
																						"nodeType": "YulLiteral",
																						"src": "14226:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14218:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14218:3:13"
																				},
																				"nativeSrc": "14218:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14218:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14212:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "14212:5:13"
																		},
																		"nativeSrc": "14212:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14212:18:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14189:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14189:6:13"
																},
																"nativeSrc": "14189:42:13",
																"nodeType": "YulFunctionCall",
																"src": "14189:42:13"
															},
															"nativeSrc": "14189:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "14189:42:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14251:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14251:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14258:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14258:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14247:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14247:3:13"
																		},
																		"nativeSrc": "14247:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14247:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "14298:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14298:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14302:3:13",
																						"nodeType": "YulLiteral",
																						"src": "14302:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14294:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14294:3:13"
																				},
																				"nativeSrc": "14294:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14294:12:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_address_fromMemory",
																			"nativeSrc": "14264:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "14264:29:13"
																		},
																		"nativeSrc": "14264:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14264:43:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14240:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14240:6:13"
																},
																"nativeSrc": "14240:68:13",
																"nodeType": "YulFunctionCall",
																"src": "14240:68:13"
															},
															"nativeSrc": "14240:68:13",
															"nodeType": "YulExpressionStatement",
															"src": "14240:68:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14328:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14328:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14335:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14335:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14324:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14324:3:13"
																		},
																		"nativeSrc": "14324:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14324:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "14351:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14351:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14355:3:13",
																						"nodeType": "YulLiteral",
																						"src": "14355:3:13",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14347:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14347:3:13"
																				},
																				"nativeSrc": "14347:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14347:12:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14341:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "14341:5:13"
																		},
																		"nativeSrc": "14341:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14341:19:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14317:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14317:6:13"
																},
																"nativeSrc": "14317:44:13",
																"nodeType": "YulFunctionCall",
																"src": "14317:44:13"
															},
															"nativeSrc": "14317:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "14317:44:13"
														},
														{
															"nativeSrc": "14370:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14370:35:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "14396:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "14396:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14400:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14400:3:13",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14392:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14392:3:13"
																		},
																		"nativeSrc": "14392:12:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14392:12:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14386:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14386:5:13"
																},
																"nativeSrc": "14386:19:13",
																"nodeType": "YulFunctionCall",
																"src": "14386:19:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "14374:8:13",
																	"nodeType": "YulTypedName",
																	"src": "14374:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14434:16:13",
																"nodeType": "YulBlock",
																"src": "14434:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14443:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14443:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14446:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14446:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14436:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14436:6:13"
																			},
																			"nativeSrc": "14436:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14436:12:13"
																		},
																		"nativeSrc": "14436:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14436:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "14420:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "14420:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "14430:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "14430:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14417:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14417:2:13"
																},
																"nativeSrc": "14417:16:13",
																"nodeType": "YulFunctionCall",
																"src": "14417:16:13"
															},
															"nativeSrc": "14414:36:13",
															"nodeType": "YulIf",
															"src": "14414:36:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14470:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14470:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14477:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14477:3:13",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14466:3:13"
																		},
																		"nativeSrc": "14466:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14466:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "14527:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14527:2:13"
																					},
																					{
																						"name": "offset_2",
																						"nativeSrc": "14531:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "14531:8:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14523:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14523:3:13"
																				},
																				"nativeSrc": "14523:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14523:17:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14542:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14542:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_array_uint256_dyn_fromMemory",
																			"nativeSrc": "14483:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "14483:39:13"
																		},
																		"nativeSrc": "14483:67:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14483:67:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14459:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14459:6:13"
																},
																"nativeSrc": "14459:92:13",
																"nodeType": "YulFunctionCall",
																"src": "14459:92:13"
															},
															"nativeSrc": "14459:92:13",
															"nodeType": "YulExpressionStatement",
															"src": "14459:92:13"
														},
														{
															"nativeSrc": "14560:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14560:35:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "14586:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "14586:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14590:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14590:3:13",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14582:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14582:3:13"
																		},
																		"nativeSrc": "14582:12:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14582:12:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14576:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "14576:5:13"
																},
																"nativeSrc": "14576:19:13",
																"nodeType": "YulFunctionCall",
																"src": "14576:19:13"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nativeSrc": "14564:8:13",
																	"nodeType": "YulTypedName",
																	"src": "14564:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14624:16:13",
																"nodeType": "YulBlock",
																"src": "14624:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14633:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14633:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14636:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14636:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14626:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14626:6:13"
																			},
																			"nativeSrc": "14626:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14626:12:13"
																		},
																		"nativeSrc": "14626:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14626:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nativeSrc": "14610:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "14610:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "14620:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "14620:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14607:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14607:2:13"
																},
																"nativeSrc": "14607:16:13",
																"nodeType": "YulFunctionCall",
																"src": "14607:16:13"
															},
															"nativeSrc": "14604:36:13",
															"nodeType": "YulIf",
															"src": "14604:36:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14660:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14660:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14667:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14667:3:13",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14656:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14656:3:13"
																		},
																		"nativeSrc": "14656:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14656:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "14717:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "14717:2:13"
																					},
																					{
																						"name": "offset_3",
																						"nativeSrc": "14721:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "14721:8:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14713:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14713:3:13"
																				},
																				"nativeSrc": "14713:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14713:17:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14732:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "14732:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_array_address_dyn_fromMemory",
																			"nativeSrc": "14673:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "14673:39:13"
																		},
																		"nativeSrc": "14673:67:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14673:67:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14649:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14649:6:13"
																},
																"nativeSrc": "14649:92:13",
																"nodeType": "YulFunctionCall",
																"src": "14649:92:13"
															},
															"nativeSrc": "14649:92:13",
															"nodeType": "YulExpressionStatement",
															"src": "14649:92:13"
														},
														{
															"nativeSrc": "14750:15:13",
															"nodeType": "YulAssignment",
															"src": "14750:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "14760:5:13",
																"nodeType": "YulIdentifier",
																"src": "14760:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "14750:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14750:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Project_$1653_memory_ptr_fromMemory",
												"nativeSrc": "13489:1282:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13561:9:13",
														"nodeType": "YulTypedName",
														"src": "13561:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13572:7:13",
														"nodeType": "YulTypedName",
														"src": "13572:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13584:6:13",
														"nodeType": "YulTypedName",
														"src": "13584:6:13",
														"type": ""
													}
												],
												"src": "13489:1282:13"
											},
											{
												"body": {
													"nativeSrc": "14950:179:13",
													"nodeType": "YulBlock",
													"src": "14950:179:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14967:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14967:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14978:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14978:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14960:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14960:6:13"
																},
																"nativeSrc": "14960:21:13",
																"nodeType": "YulFunctionCall",
																"src": "14960:21:13"
															},
															"nativeSrc": "14960:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "14960:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15001:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15001:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15012:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15012:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14997:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14997:3:13"
																		},
																		"nativeSrc": "14997:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14997:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15017:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15017:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14990:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14990:6:13"
																},
																"nativeSrc": "14990:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14990:30:13"
															},
															"nativeSrc": "14990:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14990:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15040:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15040:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15051:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15051:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15036:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15036:3:13"
																		},
																		"nativeSrc": "15036:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15036:18:13"
																	},
																	{
																		"hexValue": "726563697069656e74203c3e2073656e646572206d69732d6d61746368",
																		"kind": "string",
																		"nativeSrc": "15056:31:13",
																		"nodeType": "YulLiteral",
																		"src": "15056:31:13",
																		"type": "",
																		"value": "recipient <> sender mis-match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15029:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15029:6:13"
																},
																"nativeSrc": "15029:59:13",
																"nodeType": "YulFunctionCall",
																"src": "15029:59:13"
															},
															"nativeSrc": "15029:59:13",
															"nodeType": "YulExpressionStatement",
															"src": "15029:59:13"
														},
														{
															"nativeSrc": "15097:26:13",
															"nodeType": "YulAssignment",
															"src": "15097:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15109:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15109:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15120:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15120:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15105:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15105:3:13"
																},
																"nativeSrc": "15105:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15105:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15097:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15097:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e09022697c85a7a7440752a329f6477a74e3db5b046ff4459bbe8c9847e2790b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14776:353:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14927:9:13",
														"nodeType": "YulTypedName",
														"src": "14927:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14941:4:13",
														"nodeType": "YulTypedName",
														"src": "14941:4:13",
														"type": ""
													}
												],
												"src": "14776:353:13"
											},
											{
												"body": {
													"nativeSrc": "15308:230:13",
													"nodeType": "YulBlock",
													"src": "15308:230:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15325:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15325:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15336:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15336:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15318:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15318:6:13"
																},
																"nativeSrc": "15318:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15318:21:13"
															},
															"nativeSrc": "15318:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "15318:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15359:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15359:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15370:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15370:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15355:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15355:3:13"
																		},
																		"nativeSrc": "15355:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15355:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15375:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15375:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15348:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15348:6:13"
																},
																"nativeSrc": "15348:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15348:30:13"
															},
															"nativeSrc": "15348:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15348:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15398:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15398:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15409:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15409:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15394:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15394:3:13"
																		},
																		"nativeSrc": "15394:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15394:18:13"
																	},
																	{
																		"hexValue": "627564676574203c3e2072656d61696e696e6720616c6c6f636174696f6e206d",
																		"kind": "string",
																		"nativeSrc": "15414:34:13",
																		"nodeType": "YulLiteral",
																		"src": "15414:34:13",
																		"type": "",
																		"value": "budget <> remaining allocation m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15387:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15387:6:13"
																},
																"nativeSrc": "15387:62:13",
																"nodeType": "YulFunctionCall",
																"src": "15387:62:13"
															},
															"nativeSrc": "15387:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "15387:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15469:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15469:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15480:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15480:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15465:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15465:3:13"
																		},
																		"nativeSrc": "15465:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15465:18:13"
																	},
																	{
																		"hexValue": "69732d6d61746368",
																		"kind": "string",
																		"nativeSrc": "15485:10:13",
																		"nodeType": "YulLiteral",
																		"src": "15485:10:13",
																		"type": "",
																		"value": "is-match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15458:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15458:6:13"
																},
																"nativeSrc": "15458:38:13",
																"nodeType": "YulFunctionCall",
																"src": "15458:38:13"
															},
															"nativeSrc": "15458:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "15458:38:13"
														},
														{
															"nativeSrc": "15505:27:13",
															"nodeType": "YulAssignment",
															"src": "15505:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15517:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15517:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15528:3:13",
																		"nodeType": "YulLiteral",
																		"src": "15528:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15513:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15513:3:13"
																},
																"nativeSrc": "15513:19:13",
																"nodeType": "YulFunctionCall",
																"src": "15513:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15505:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15505:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d30e69c99980e9196594fc9e631f2a27d78e3e2bdb28ce5149b307d64a620f1b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15134:404:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15285:9:13",
														"nodeType": "YulTypedName",
														"src": "15285:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15299:4:13",
														"nodeType": "YulTypedName",
														"src": "15299:4:13",
														"type": ""
													}
												],
												"src": "15134:404:13"
											},
											{
												"body": {
													"nativeSrc": "15592:79:13",
													"nodeType": "YulBlock",
													"src": "15592:79:13",
													"statements": [
														{
															"nativeSrc": "15602:17:13",
															"nodeType": "YulAssignment",
															"src": "15602:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15614:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15614:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15617:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15617:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15610:3:13"
																},
																"nativeSrc": "15610:9:13",
																"nodeType": "YulFunctionCall",
																"src": "15610:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15602:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15602:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15643:22:13",
																"nodeType": "YulBlock",
																"src": "15643:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15645:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "15645:16:13"
																			},
																			"nativeSrc": "15645:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15645:18:13"
																		},
																		"nativeSrc": "15645:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15645:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15634:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15634:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15640:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15640:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15631:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15631:2:13"
																},
																"nativeSrc": "15631:11:13",
																"nodeType": "YulFunctionCall",
																"src": "15631:11:13"
															},
															"nativeSrc": "15628:37:13",
															"nodeType": "YulIf",
															"src": "15628:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15543:128:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15574:1:13",
														"nodeType": "YulTypedName",
														"src": "15574:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15577:1:13",
														"nodeType": "YulTypedName",
														"src": "15577:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15583:4:13",
														"nodeType": "YulTypedName",
														"src": "15583:4:13",
														"type": ""
													}
												],
												"src": "15543:128:13"
											},
											{
												"body": {
													"nativeSrc": "15850:230:13",
													"nodeType": "YulBlock",
													"src": "15850:230:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15867:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15867:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15878:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15878:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15860:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15860:6:13"
																},
																"nativeSrc": "15860:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15860:21:13"
															},
															"nativeSrc": "15860:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "15860:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15901:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15901:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15912:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15912:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15897:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15897:3:13"
																		},
																		"nativeSrc": "15897:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15897:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15917:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15917:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15890:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15890:6:13"
																},
																"nativeSrc": "15890:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15890:30:13"
															},
															"nativeSrc": "15890:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15890:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15940:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15940:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15951:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15951:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15936:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15936:3:13"
																		},
																		"nativeSrc": "15936:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15936:18:13"
																	},
																	{
																		"hexValue": "696e73756666696369656e74206e617469766520746f6b656e2066756e647320",
																		"kind": "string",
																		"nativeSrc": "15956:34:13",
																		"nodeType": "YulLiteral",
																		"src": "15956:34:13",
																		"type": "",
																		"value": "insufficient native token funds "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15929:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15929:6:13"
																},
																"nativeSrc": "15929:62:13",
																"nodeType": "YulFunctionCall",
																"src": "15929:62:13"
															},
															"nativeSrc": "15929:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "15929:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16011:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16011:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16022:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16022:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16007:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16007:3:13"
																		},
																		"nativeSrc": "16007:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16007:18:13"
																	},
																	{
																		"hexValue": "696e20706f6f6c20",
																		"kind": "string",
																		"nativeSrc": "16027:10:13",
																		"nodeType": "YulLiteral",
																		"src": "16027:10:13",
																		"type": "",
																		"value": "in pool "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16000:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16000:6:13"
																},
																"nativeSrc": "16000:38:13",
																"nodeType": "YulFunctionCall",
																"src": "16000:38:13"
															},
															"nativeSrc": "16000:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "16000:38:13"
														},
														{
															"nativeSrc": "16047:27:13",
															"nodeType": "YulAssignment",
															"src": "16047:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16059:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16059:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16070:3:13",
																		"nodeType": "YulLiteral",
																		"src": "16070:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16055:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16055:3:13"
																},
																"nativeSrc": "16055:19:13",
																"nodeType": "YulFunctionCall",
																"src": "16055:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16047:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16047:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f639a352b68e6033960894fd239064f91f6227e67b30f35f71f3ed80642ad02__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15676:404:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15827:9:13",
														"nodeType": "YulTypedName",
														"src": "15827:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15841:4:13",
														"nodeType": "YulTypedName",
														"src": "15841:4:13",
														"type": ""
													}
												],
												"src": "15676:404:13"
											},
											{
												"body": {
													"nativeSrc": "16166:103:13",
													"nodeType": "YulBlock",
													"src": "16166:103:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16212:16:13",
																"nodeType": "YulBlock",
																"src": "16212:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16221:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16221:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16224:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16224:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16214:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16214:6:13"
																			},
																			"nativeSrc": "16214:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16214:12:13"
																		},
																		"nativeSrc": "16214:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16214:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16187:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16187:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16196:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16196:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16183:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16183:3:13"
																		},
																		"nativeSrc": "16183:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16183:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16208:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16208:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16179:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16179:3:13"
																},
																"nativeSrc": "16179:32:13",
																"nodeType": "YulFunctionCall",
																"src": "16179:32:13"
															},
															"nativeSrc": "16176:52:13",
															"nodeType": "YulIf",
															"src": "16176:52:13"
														},
														{
															"nativeSrc": "16237:26:13",
															"nodeType": "YulAssignment",
															"src": "16237:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16253:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16253:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16247:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16247:5:13"
																},
																"nativeSrc": "16247:16:13",
																"nodeType": "YulFunctionCall",
																"src": "16247:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "16237:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16237:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "16085:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16132:9:13",
														"nodeType": "YulTypedName",
														"src": "16132:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16143:7:13",
														"nodeType": "YulTypedName",
														"src": "16143:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16155:6:13",
														"nodeType": "YulTypedName",
														"src": "16155:6:13",
														"type": ""
													}
												],
												"src": "16085:184:13"
											},
											{
												"body": {
													"nativeSrc": "16448:176:13",
													"nodeType": "YulBlock",
													"src": "16448:176:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16465:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16465:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16476:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16476:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16458:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16458:6:13"
																},
																"nativeSrc": "16458:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16458:21:13"
															},
															"nativeSrc": "16458:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "16458:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16499:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16499:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16510:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16510:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16495:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16495:3:13"
																		},
																		"nativeSrc": "16495:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16495:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16515:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16515:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16488:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16488:6:13"
																},
																"nativeSrc": "16488:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16488:30:13"
															},
															"nativeSrc": "16488:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "16488:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16538:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16538:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16549:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16549:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16534:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16534:3:13"
																		},
																		"nativeSrc": "16534:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16534:18:13"
																	},
																	{
																		"hexValue": "696e73756666696369656e742066756e647320696e20706f6f6c",
																		"kind": "string",
																		"nativeSrc": "16554:28:13",
																		"nodeType": "YulLiteral",
																		"src": "16554:28:13",
																		"type": "",
																		"value": "insufficient funds in pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16527:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16527:6:13"
																},
																"nativeSrc": "16527:56:13",
																"nodeType": "YulFunctionCall",
																"src": "16527:56:13"
															},
															"nativeSrc": "16527:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "16527:56:13"
														},
														{
															"nativeSrc": "16592:26:13",
															"nodeType": "YulAssignment",
															"src": "16592:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16604:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16604:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16615:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16615:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16600:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16600:3:13"
																},
																"nativeSrc": "16600:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16600:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16592:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16592:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a110f67727518ca7b3a14aca804c17f793c5bfe7f295e1afb41af41d4b4c568b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16274:350:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16425:9:13",
														"nodeType": "YulTypedName",
														"src": "16425:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16439:4:13",
														"nodeType": "YulTypedName",
														"src": "16439:4:13",
														"type": ""
													}
												],
												"src": "16274:350:13"
											},
											{
												"body": {
													"nativeSrc": "16710:170:13",
													"nodeType": "YulBlock",
													"src": "16710:170:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "16756:16:13",
																"nodeType": "YulBlock",
																"src": "16756:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16765:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16765:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16768:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16768:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16758:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16758:6:13"
																			},
																			"nativeSrc": "16758:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16758:12:13"
																		},
																		"nativeSrc": "16758:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16758:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16731:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "16731:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16740:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16740:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16727:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16727:3:13"
																		},
																		"nativeSrc": "16727:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16727:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16752:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16752:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16723:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16723:3:13"
																},
																"nativeSrc": "16723:32:13",
																"nodeType": "YulFunctionCall",
																"src": "16723:32:13"
															},
															"nativeSrc": "16720:52:13",
															"nodeType": "YulIf",
															"src": "16720:52:13"
														},
														{
															"nativeSrc": "16781:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16781:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16800:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16800:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16794:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16794:5:13"
																},
																"nativeSrc": "16794:16:13",
																"nodeType": "YulFunctionCall",
																"src": "16794:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "16785:5:13",
																	"nodeType": "YulTypedName",
																	"src": "16785:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16844:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16844:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "16819:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "16819:24:13"
																},
																"nativeSrc": "16819:31:13",
																"nodeType": "YulFunctionCall",
																"src": "16819:31:13"
															},
															"nativeSrc": "16819:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "16819:31:13"
														},
														{
															"nativeSrc": "16859:15:13",
															"nodeType": "YulAssignment",
															"src": "16859:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "16869:5:13",
																"nodeType": "YulIdentifier",
																"src": "16869:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "16859:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16859:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "16629:251:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16676:9:13",
														"nodeType": "YulTypedName",
														"src": "16676:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16687:7:13",
														"nodeType": "YulTypedName",
														"src": "16687:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16699:6:13",
														"nodeType": "YulTypedName",
														"src": "16699:6:13",
														"type": ""
													}
												],
												"src": "16629:251:13"
											},
											{
												"body": {
													"nativeSrc": "17014:145:13",
													"nodeType": "YulBlock",
													"src": "17014:145:13",
													"statements": [
														{
															"nativeSrc": "17024:26:13",
															"nodeType": "YulAssignment",
															"src": "17024:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17036:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17036:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17047:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17047:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17032:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17032:3:13"
																},
																"nativeSrc": "17032:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17032:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17024:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17024:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17066:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17066:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "17081:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17081:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17097:3:13",
																								"nodeType": "YulLiteral",
																								"src": "17097:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17102:1:13",
																								"nodeType": "YulLiteral",
																								"src": "17102:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "17093:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "17093:3:13"
																						},
																						"nativeSrc": "17093:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "17093:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17106:1:13",
																						"nodeType": "YulLiteral",
																						"src": "17106:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "17089:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17089:3:13"
																				},
																				"nativeSrc": "17089:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17089:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17077:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17077:3:13"
																		},
																		"nativeSrc": "17077:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17077:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17059:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17059:6:13"
																},
																"nativeSrc": "17059:51:13",
																"nodeType": "YulFunctionCall",
																"src": "17059:51:13"
															},
															"nativeSrc": "17059:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "17059:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17130:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17130:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17141:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17141:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17126:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17126:3:13"
																		},
																		"nativeSrc": "17126:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17126:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17146:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17146:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17119:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17119:6:13"
																},
																"nativeSrc": "17119:34:13",
																"nodeType": "YulFunctionCall",
																"src": "17119:34:13"
															},
															"nativeSrc": "17119:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "17119:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16885:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16975:9:13",
														"nodeType": "YulTypedName",
														"src": "16975:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16986:6:13",
														"nodeType": "YulTypedName",
														"src": "16986:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16994:6:13",
														"nodeType": "YulTypedName",
														"src": "16994:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17005:4:13",
														"nodeType": "YulTypedName",
														"src": "17005:4:13",
														"type": ""
													}
												],
												"src": "16885:274:13"
											},
											{
												"body": {
													"nativeSrc": "17242:199:13",
													"nodeType": "YulBlock",
													"src": "17242:199:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17288:16:13",
																"nodeType": "YulBlock",
																"src": "17288:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17297:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17297:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17300:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17300:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17290:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17290:6:13"
																			},
																			"nativeSrc": "17290:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17290:12:13"
																		},
																		"nativeSrc": "17290:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17290:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17263:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17263:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17272:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17272:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17259:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17259:3:13"
																		},
																		"nativeSrc": "17259:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17259:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17284:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17284:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17255:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17255:3:13"
																},
																"nativeSrc": "17255:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17255:32:13"
															},
															"nativeSrc": "17252:52:13",
															"nodeType": "YulIf",
															"src": "17252:52:13"
														},
														{
															"nativeSrc": "17313:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17313:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17332:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17332:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17326:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17326:5:13"
																},
																"nativeSrc": "17326:16:13",
																"nodeType": "YulFunctionCall",
																"src": "17326:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "17317:5:13",
																	"nodeType": "YulTypedName",
																	"src": "17317:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17395:16:13",
																"nodeType": "YulBlock",
																"src": "17395:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17404:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17404:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17407:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17407:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17397:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17397:6:13"
																			},
																			"nativeSrc": "17397:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17397:12:13"
																		},
																		"nativeSrc": "17397:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17397:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17364:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "17364:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "17385:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "17385:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "17378:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "17378:6:13"
																						},
																						"nativeSrc": "17378:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "17378:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17371:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17371:6:13"
																				},
																				"nativeSrc": "17371:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17371:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17361:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "17361:2:13"
																		},
																		"nativeSrc": "17361:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17361:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17354:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17354:6:13"
																},
																"nativeSrc": "17354:40:13",
																"nodeType": "YulFunctionCall",
																"src": "17354:40:13"
															},
															"nativeSrc": "17351:60:13",
															"nodeType": "YulIf",
															"src": "17351:60:13"
														},
														{
															"nativeSrc": "17420:15:13",
															"nodeType": "YulAssignment",
															"src": "17420:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "17430:5:13",
																"nodeType": "YulIdentifier",
																"src": "17430:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "17420:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17420:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "17164:277:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17208:9:13",
														"nodeType": "YulTypedName",
														"src": "17208:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17219:7:13",
														"nodeType": "YulTypedName",
														"src": "17219:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17231:6:13",
														"nodeType": "YulTypedName",
														"src": "17231:6:13",
														"type": ""
													}
												],
												"src": "17164:277:13"
											},
											{
												"body": {
													"nativeSrc": "17525:850:13",
													"nodeType": "YulBlock",
													"src": "17525:850:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17569:16:13",
																"nodeType": "YulBlock",
																"src": "17569:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17578:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17578:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17581:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17581:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17571:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17571:6:13"
																			},
																			"nativeSrc": "17571:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17571:12:13"
																		},
																		"nativeSrc": "17571:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17571:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "17546:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "17546:3:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17551:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17551:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17542:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17542:3:13"
																		},
																		"nativeSrc": "17542:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17542:19:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17563:4:13",
																		"nodeType": "YulLiteral",
																		"src": "17563:4:13",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17538:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17538:3:13"
																},
																"nativeSrc": "17538:30:13",
																"nodeType": "YulFunctionCall",
																"src": "17538:30:13"
															},
															"nativeSrc": "17535:50:13",
															"nodeType": "YulIf",
															"src": "17535:50:13"
														},
														{
															"nativeSrc": "17594:31:13",
															"nodeType": "YulAssignment",
															"src": "17594:31:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory_3947",
																	"nativeSrc": "17603:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "17603:20:13"
																},
																"nativeSrc": "17603:22:13",
																"nodeType": "YulFunctionCall",
																"src": "17603:22:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17594:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17594:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17641:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "17641:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17654:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17654:9:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17648:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "17648:5:13"
																		},
																		"nativeSrc": "17648:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17648:16:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17634:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17634:6:13"
																},
																"nativeSrc": "17634:31:13",
																"nodeType": "YulFunctionCall",
																"src": "17634:31:13"
															},
															"nativeSrc": "17634:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "17634:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17685:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "17685:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17692:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17692:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17681:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17681:3:13"
																		},
																		"nativeSrc": "17681:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17681:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17707:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "17707:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17718:2:13",
																						"nodeType": "YulLiteral",
																						"src": "17718:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17703:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "17703:3:13"
																				},
																				"nativeSrc": "17703:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17703:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "17697:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "17697:5:13"
																		},
																		"nativeSrc": "17697:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17697:25:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17674:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17674:6:13"
																},
																"nativeSrc": "17674:49:13",
																"nodeType": "YulFunctionCall",
																"src": "17674:49:13"
															},
															"nativeSrc": "17674:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "17674:49:13"
														},
														{
															"nativeSrc": "17732:40:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17732:40:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17757:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17757:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17768:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17768:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17753:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17753:3:13"
																		},
																		"nativeSrc": "17753:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17753:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17747:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17747:5:13"
																},
																"nativeSrc": "17747:25:13",
																"nodeType": "YulFunctionCall",
																"src": "17747:25:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "17736:7:13",
																	"nodeType": "YulTypedName",
																	"src": "17736:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "17806:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "17806:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "17781:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "17781:24:13"
																},
																"nativeSrc": "17781:33:13",
																"nodeType": "YulFunctionCall",
																"src": "17781:33:13"
															},
															"nativeSrc": "17781:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "17781:33:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17834:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "17834:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17841:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17841:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17830:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17830:3:13"
																		},
																		"nativeSrc": "17830:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17830:14:13"
																	},
																	{
																		"name": "value_1",
																		"nativeSrc": "17846:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "17846:7:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17823:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17823:6:13"
																},
																"nativeSrc": "17823:31:13",
																"nodeType": "YulFunctionCall",
																"src": "17823:31:13"
															},
															"nativeSrc": "17823:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "17823:31:13"
														},
														{
															"nativeSrc": "17863:39:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17863:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17887:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17887:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17898:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17898:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17883:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17883:3:13"
																		},
																		"nativeSrc": "17883:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17883:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17877:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17877:5:13"
																},
																"nativeSrc": "17877:25:13",
																"nodeType": "YulFunctionCall",
																"src": "17877:25:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "17867:6:13",
																	"nodeType": "YulTypedName",
																	"src": "17867:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17911:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17911:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "17921:18:13",
																"nodeType": "YulLiteral",
																"src": "17921:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "17915:2:13",
																	"nodeType": "YulTypedName",
																	"src": "17915:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17966:16:13",
																"nodeType": "YulBlock",
																"src": "17966:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17975:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17975:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17978:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17978:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17968:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17968:6:13"
																			},
																			"nativeSrc": "17968:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17968:12:13"
																		},
																		"nativeSrc": "17968:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17968:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17954:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17954:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "17962:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "17962:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17951:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "17951:2:13"
																},
																"nativeSrc": "17951:14:13",
																"nodeType": "YulFunctionCall",
																"src": "17951:14:13"
															},
															"nativeSrc": "17948:34:13",
															"nodeType": "YulIf",
															"src": "17948:34:13"
														},
														{
															"nativeSrc": "17991:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17991:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18005:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18005:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "18016:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18016:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18001:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18001:3:13"
																},
																"nativeSrc": "18001:22:13",
																"nodeType": "YulFunctionCall",
																"src": "18001:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "17995:2:13",
																	"nodeType": "YulTypedName",
																	"src": "17995:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18057:16:13",
																"nodeType": "YulBlock",
																"src": "18057:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18066:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18066:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18069:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18069:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18059:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18059:6:13"
																			},
																			"nativeSrc": "18059:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18059:12:13"
																		},
																		"nativeSrc": "18059:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18059:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "18043:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18043:3:13"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "18048:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "18048:2:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18039:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18039:3:13"
																		},
																		"nativeSrc": "18039:12:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18039:12:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18053:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18053:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18035:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18035:3:13"
																},
																"nativeSrc": "18035:21:13",
																"nodeType": "YulFunctionCall",
																"src": "18035:21:13"
															},
															"nativeSrc": "18032:41:13",
															"nodeType": "YulIf",
															"src": "18032:41:13"
														},
														{
															"nativeSrc": "18082:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18082:37:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory_3948",
																	"nativeSrc": "18097:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "18097:20:13"
																},
																"nativeSrc": "18097:22:13",
																"nodeType": "YulFunctionCall",
																"src": "18097:22:13"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "18086:7:13",
																	"nodeType": "YulTypedName",
																	"src": "18086:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "18135:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "18135:7:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "18150:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "18150:2:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "18144:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "18144:5:13"
																		},
																		"nativeSrc": "18144:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18144:9:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18128:6:13"
																},
																"nativeSrc": "18128:26:13",
																"nodeType": "YulFunctionCall",
																"src": "18128:26:13"
															},
															"nativeSrc": "18128:26:13",
															"nodeType": "YulExpressionStatement",
															"src": "18128:26:13"
														},
														{
															"nativeSrc": "18163:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18163:34:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "18189:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "18189:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18193:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18193:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18185:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18185:3:13"
																		},
																		"nativeSrc": "18185:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18185:11:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18179:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18179:5:13"
																},
																"nativeSrc": "18179:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18179:18:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "18167:8:13",
																	"nodeType": "YulTypedName",
																	"src": "18167:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18226:16:13",
																"nodeType": "YulBlock",
																"src": "18226:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18235:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18235:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18238:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18238:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18228:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18228:6:13"
																			},
																			"nativeSrc": "18228:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18228:12:13"
																		},
																		"nativeSrc": "18228:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18228:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "18212:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "18212:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "18222:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "18222:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18209:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18209:2:13"
																},
																"nativeSrc": "18209:16:13",
																"nodeType": "YulFunctionCall",
																"src": "18209:16:13"
															},
															"nativeSrc": "18206:36:13",
															"nodeType": "YulIf",
															"src": "18206:36:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nativeSrc": "18262:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18262:7:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18271:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18271:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18258:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18258:3:13"
																		},
																		"nativeSrc": "18258:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18258:16:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "18309:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "18309:2:13"
																					},
																					{
																						"name": "offset_1",
																						"nativeSrc": "18313:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "18313:8:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18305:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18305:3:13"
																				},
																				"nativeSrc": "18305:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18305:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "18324:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18324:3:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_string_fromMemory",
																			"nativeSrc": "18276:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "18276:28:13"
																		},
																		"nativeSrc": "18276:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18276:52:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18251:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18251:6:13"
																},
																"nativeSrc": "18251:78:13",
																"nodeType": "YulFunctionCall",
																"src": "18251:78:13"
															},
															"nativeSrc": "18251:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "18251:78:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18349:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "18349:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18356:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18356:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18345:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18345:3:13"
																		},
																		"nativeSrc": "18345:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18345:14:13"
																	},
																	{
																		"name": "value_2",
																		"nativeSrc": "18361:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "18361:7:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18338:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18338:6:13"
																},
																"nativeSrc": "18338:31:13",
																"nodeType": "YulFunctionCall",
																"src": "18338:31:13"
															},
															"nativeSrc": "18338:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "18338:31:13"
														}
													]
												},
												"name": "abi_decode_struct_Contributor_fromMemory",
												"nativeSrc": "17446:929:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17496:9:13",
														"nodeType": "YulTypedName",
														"src": "17496:9:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17507:3:13",
														"nodeType": "YulTypedName",
														"src": "17507:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17515:5:13",
														"nodeType": "YulTypedName",
														"src": "17515:5:13",
														"type": ""
													}
												],
												"src": "17446:929:13"
											},
											{
												"body": {
													"nativeSrc": "18520:1983:13",
													"nodeType": "YulBlock",
													"src": "18520:1983:13",
													"statements": [
														{
															"nativeSrc": "18530:12:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18530:12:13",
															"value": {
																"kind": "number",
																"nativeSrc": "18540:2:13",
																"nodeType": "YulLiteral",
																"src": "18540:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "18534:2:13",
																	"nodeType": "YulTypedName",
																	"src": "18534:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18587:16:13",
																"nodeType": "YulBlock",
																"src": "18587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18589:6:13"
																			},
																			"nativeSrc": "18589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18589:12:13"
																		},
																		"nativeSrc": "18589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18562:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18562:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18571:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18571:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18558:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18558:3:13"
																		},
																		"nativeSrc": "18558:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18558:23:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "18583:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "18583:2:13"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18554:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18554:3:13"
																},
																"nativeSrc": "18554:32:13",
																"nodeType": "YulFunctionCall",
																"src": "18554:32:13"
															},
															"nativeSrc": "18551:52:13",
															"nodeType": "YulIf",
															"src": "18551:52:13"
														},
														{
															"nativeSrc": "18612:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18612:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18632:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18632:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18626:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18626:5:13"
																},
																"nativeSrc": "18626:16:13",
																"nodeType": "YulFunctionCall",
																"src": "18626:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "18616:6:13",
																	"nodeType": "YulTypedName",
																	"src": "18616:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18651:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18651:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "18661:18:13",
																"nodeType": "YulLiteral",
																"src": "18661:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "18655:2:13",
																	"nodeType": "YulTypedName",
																	"src": "18655:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18706:16:13",
																"nodeType": "YulBlock",
																"src": "18706:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18715:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18715:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18718:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18718:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18708:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18708:6:13"
																			},
																			"nativeSrc": "18708:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18708:12:13"
																		},
																		"nativeSrc": "18708:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18708:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18694:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18694:6:13"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "18702:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "18702:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18691:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18691:2:13"
																},
																"nativeSrc": "18691:14:13",
																"nodeType": "YulFunctionCall",
																"src": "18691:14:13"
															},
															"nativeSrc": "18688:34:13",
															"nodeType": "YulIf",
															"src": "18688:34:13"
														},
														{
															"nativeSrc": "18731:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18731:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18745:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18745:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "18756:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18756:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18741:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18741:3:13"
																},
																"nativeSrc": "18741:22:13",
																"nodeType": "YulFunctionCall",
																"src": "18741:22:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "18735:2:13",
																	"nodeType": "YulTypedName",
																	"src": "18735:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18811:16:13",
																"nodeType": "YulBlock",
																"src": "18811:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18820:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18820:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18823:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18823:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18813:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18813:6:13"
																			},
																			"nativeSrc": "18813:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18813:12:13"
																		},
																		"nativeSrc": "18813:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18813:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "18790:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "18790:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "18794:4:13",
																						"nodeType": "YulLiteral",
																						"src": "18794:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18786:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18786:3:13"
																				},
																				"nativeSrc": "18786:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18786:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18801:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18801:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "18782:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18782:3:13"
																		},
																		"nativeSrc": "18782:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18782:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18775:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18775:6:13"
																},
																"nativeSrc": "18775:35:13",
																"nodeType": "YulFunctionCall",
																"src": "18775:35:13"
															},
															"nativeSrc": "18772:55:13",
															"nodeType": "YulIf",
															"src": "18772:55:13"
														},
														{
															"nativeSrc": "18836:19:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18836:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "18852:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "18852:2:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18846:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18846:5:13"
																},
																"nativeSrc": "18846:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18846:9:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "18840:2:13",
																	"nodeType": "YulTypedName",
																	"src": "18840:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18864:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18864:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nativeSrc": "18931:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "18931:2:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "18891:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "18891:39:13"
																		},
																		"nativeSrc": "18891:43:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18891:43:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "18875:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "18875:15:13"
																},
																"nativeSrc": "18875:60:13",
																"nodeType": "YulFunctionCall",
																"src": "18875:60:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "18868:3:13",
																	"nodeType": "YulTypedName",
																	"src": "18868:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18944:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18944:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "18957:3:13",
																"nodeType": "YulIdentifier",
																"src": "18957:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "18948:5:13",
																	"nodeType": "YulTypedName",
																	"src": "18948:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "18976:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18976:3:13"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "18981:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "18981:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18969:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18969:6:13"
																},
																"nativeSrc": "18969:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18969:15:13"
															},
															"nativeSrc": "18969:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18969:15:13"
														},
														{
															"nativeSrc": "18993:19:13",
															"nodeType": "YulAssignment",
															"src": "18993:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "19004:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19004:3:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "19009:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "19009:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19000:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19000:3:13"
																},
																"nativeSrc": "19000:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19000:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "18993:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18993:3:13"
																}
															]
														},
														{
															"nativeSrc": "19021:42:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19021:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nativeSrc": "19043:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "19043:2:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19051:1:13",
																						"nodeType": "YulLiteral",
																						"src": "19051:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "19054:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "19054:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "19047:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "19047:3:13"
																				},
																				"nativeSrc": "19047:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "19047:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19039:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19039:3:13"
																		},
																		"nativeSrc": "19039:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19039:19:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "19060:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "19060:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19035:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19035:3:13"
																},
																"nativeSrc": "19035:28:13",
																"nodeType": "YulFunctionCall",
																"src": "19035:28:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "19025:6:13",
																	"nodeType": "YulTypedName",
																	"src": "19025:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19095:16:13",
																"nodeType": "YulBlock",
																"src": "19095:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "19104:1:13",
																					"nodeType": "YulLiteral",
																					"src": "19104:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19107:1:13",
																					"nodeType": "YulLiteral",
																					"src": "19107:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "19097:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19097:6:13"
																			},
																			"nativeSrc": "19097:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19097:12:13"
																		},
																		"nativeSrc": "19097:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19097:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "19078:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19078:6:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "19086:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "19086:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19075:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19075:2:13"
																},
																"nativeSrc": "19075:19:13",
																"nodeType": "YulFunctionCall",
																"src": "19075:19:13"
															},
															"nativeSrc": "19072:39:13",
															"nodeType": "YulIf",
															"src": "19072:39:13"
														},
														{
															"nativeSrc": "19120:22:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19120:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "19135:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "19135:2:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "19139:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "19139:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19131:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19131:3:13"
																},
																"nativeSrc": "19131:11:13",
																"nodeType": "YulFunctionCall",
																"src": "19131:11:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "19124:3:13",
																	"nodeType": "YulTypedName",
																	"src": "19124:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19207:1266:13",
																"nodeType": "YulBlock",
																"src": "19207:1266:13",
																"statements": [
																	{
																		"nativeSrc": "19221:29:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19221:29:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "19246:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "19246:3:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "19240:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19240:5:13"
																			},
																			"nativeSrc": "19240:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19240:10:13"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "19225:11:13",
																				"nodeType": "YulTypedName",
																				"src": "19225:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "19298:74:13",
																			"nodeType": "YulBlock",
																			"src": "19298:74:13",
																			"statements": [
																				{
																					"nativeSrc": "19316:11:13",
																					"nodeType": "YulVariableDeclaration",
																					"src": "19316:11:13",
																					"value": {
																						"kind": "number",
																						"nativeSrc": "19326:1:13",
																						"nodeType": "YulLiteral",
																						"src": "19326:1:13",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nativeSrc": "19320:2:13",
																							"nodeType": "YulTypedName",
																							"src": "19320:2:13",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nativeSrc": "19351:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "19351:2:13"
																							},
																							{
																								"name": "_5",
																								"nativeSrc": "19355:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "19355:2:13"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "19344:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "19344:6:13"
																						},
																						"nativeSrc": "19344:14:13",
																						"nodeType": "YulFunctionCall",
																						"src": "19344:14:13"
																					},
																					"nativeSrc": "19344:14:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "19344:14:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "19269:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "19269:11:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "19282:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "19282:2:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "19266:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "19266:2:13"
																			},
																			"nativeSrc": "19266:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19266:19:13"
																		},
																		"nativeSrc": "19263:109:13",
																		"nodeType": "YulIf",
																		"src": "19263:109:13"
																	},
																	{
																		"nativeSrc": "19385:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19385:30:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "_3",
																					"nativeSrc": "19399:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "19399:2:13"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "19403:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "19403:11:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19395:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "19395:3:13"
																			},
																			"nativeSrc": "19395:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19395:20:13"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nativeSrc": "19389:2:13",
																				"nodeType": "YulTypedName",
																				"src": "19389:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "19428:14:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19428:14:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "19438:4:13",
																			"nodeType": "YulLiteral",
																			"src": "19438:4:13",
																			"type": "",
																			"value": "0xe0"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nativeSrc": "19432:2:13",
																				"nodeType": "YulTypedName",
																				"src": "19432:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "19510:74:13",
																			"nodeType": "YulBlock",
																			"src": "19510:74:13",
																			"statements": [
																				{
																					"nativeSrc": "19528:11:13",
																					"nodeType": "YulVariableDeclaration",
																					"src": "19528:11:13",
																					"value": {
																						"kind": "number",
																						"nativeSrc": "19538:1:13",
																						"nodeType": "YulLiteral",
																						"src": "19538:1:13",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_8",
																							"nativeSrc": "19532:2:13",
																							"nodeType": "YulTypedName",
																							"src": "19532:2:13",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_8",
																								"nativeSrc": "19563:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "19563:2:13"
																							},
																							{
																								"name": "_8",
																								"nativeSrc": "19567:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "19567:2:13"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "19556:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "19556:6:13"
																						},
																						"nativeSrc": "19556:14:13",
																						"nodeType": "YulFunctionCall",
																						"src": "19556:14:13"
																					},
																					"nativeSrc": "19556:14:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "19556:14:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "dataEnd",
																									"nativeSrc": "19470:7:13",
																									"nodeType": "YulIdentifier",
																									"src": "19470:7:13"
																								},
																								{
																									"name": "_6",
																									"nativeSrc": "19479:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "19479:2:13"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "19466:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "19466:3:13"
																							},
																							"nativeSrc": "19466:16:13",
																							"nodeType": "YulFunctionCall",
																							"src": "19466:16:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19488:2:13",
																									"nodeType": "YulLiteral",
																									"src": "19488:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19484:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "19484:3:13"
																							},
																							"nativeSrc": "19484:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "19484:7:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "19462:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "19462:3:13"
																					},
																					"nativeSrc": "19462:30:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19462:30:13"
																				},
																				{
																					"name": "_7",
																					"nativeSrc": "19494:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "19494:2:13"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nativeSrc": "19458:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "19458:3:13"
																			},
																			"nativeSrc": "19458:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19458:39:13"
																		},
																		"nativeSrc": "19455:129:13",
																		"nodeType": "YulIf",
																		"src": "19455:129:13"
																	},
																	{
																		"nativeSrc": "19597:35:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19597:35:13",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "allocate_memory_3952",
																				"nativeSrc": "19610:20:13",
																				"nodeType": "YulIdentifier",
																				"src": "19610:20:13"
																			},
																			"nativeSrc": "19610:22:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19610:22:13"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "19601:5:13",
																				"nodeType": "YulTypedName",
																				"src": "19601:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "19652:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "19652:5:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "19669:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "19669:2:13"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "19673:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "19673:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19665:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "19665:3:13"
																							},
																							"nativeSrc": "19665:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "19665:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "19659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "19659:5:13"
																					},
																					"nativeSrc": "19659:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19659:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "19645:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19645:6:13"
																			},
																			"nativeSrc": "19645:33:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19645:33:13"
																		},
																		"nativeSrc": "19645:33:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19645:33:13"
																	},
																	{
																		"nativeSrc": "19691:12:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19691:12:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "19701:2:13",
																			"nodeType": "YulLiteral",
																			"src": "19701:2:13",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_9",
																				"nativeSrc": "19695:2:13",
																				"nodeType": "YulTypedName",
																				"src": "19695:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "19716:34:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19716:34:13",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_6",
																							"nativeSrc": "19742:2:13",
																							"nodeType": "YulIdentifier",
																							"src": "19742:2:13"
																						},
																						{
																							"name": "_9",
																							"nativeSrc": "19746:2:13",
																							"nodeType": "YulIdentifier",
																							"src": "19746:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "19738:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "19738:3:13"
																					},
																					"nativeSrc": "19738:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19738:11:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "19732:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19732:5:13"
																			},
																			"nativeSrc": "19732:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19732:18:13"
																		},
																		"variables": [
																			{
																				"name": "offset_1",
																				"nativeSrc": "19720:8:13",
																				"nodeType": "YulTypedName",
																				"src": "19720:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "19795:77:13",
																			"nodeType": "YulBlock",
																			"src": "19795:77:13",
																			"statements": [
																				{
																					"nativeSrc": "19813:12:13",
																					"nodeType": "YulVariableDeclaration",
																					"src": "19813:12:13",
																					"value": {
																						"kind": "number",
																						"nativeSrc": "19824:1:13",
																						"nodeType": "YulLiteral",
																						"src": "19824:1:13",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_10",
																							"nativeSrc": "19817:3:13",
																							"nodeType": "YulTypedName",
																							"src": "19817:3:13",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_10",
																								"nativeSrc": "19849:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "19849:3:13"
																							},
																							{
																								"name": "_10",
																								"nativeSrc": "19854:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "19854:3:13"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "19842:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "19842:6:13"
																						},
																						"nativeSrc": "19842:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "19842:16:13"
																					},
																					"nativeSrc": "19842:16:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "19842:16:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "offset_1",
																					"nativeSrc": "19769:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "19769:8:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "19779:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "19779:2:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "19766:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "19766:2:13"
																			},
																			"nativeSrc": "19766:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19766:16:13"
																		},
																		"nativeSrc": "19763:109:13",
																		"nodeType": "YulIf",
																		"src": "19763:109:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "19896:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "19896:5:13"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "19903:2:13",
																							"nodeType": "YulIdentifier",
																							"src": "19903:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "19892:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "19892:3:13"
																					},
																					"nativeSrc": "19892:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19892:14:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_6",
																											"nativeSrc": "19957:2:13",
																											"nodeType": "YulIdentifier",
																											"src": "19957:2:13"
																										},
																										{
																											"name": "offset_1",
																											"nativeSrc": "19961:8:13",
																											"nodeType": "YulIdentifier",
																											"src": "19961:8:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "19953:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "19953:3:13"
																									},
																									"nativeSrc": "19953:17:13",
																									"nodeType": "YulFunctionCall",
																									"src": "19953:17:13"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "19972:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "19972:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19949:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "19949:3:13"
																							},
																							"nativeSrc": "19949:26:13",
																							"nodeType": "YulFunctionCall",
																							"src": "19949:26:13"
																						},
																						{
																							"name": "dataEnd",
																							"nativeSrc": "19977:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "19977:7:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_struct_Contributor_fromMemory",
																						"nativeSrc": "19908:40:13",
																						"nodeType": "YulIdentifier",
																						"src": "19908:40:13"
																					},
																					"nativeSrc": "19908:77:13",
																					"nodeType": "YulFunctionCall",
																					"src": "19908:77:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "19885:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19885:6:13"
																			},
																			"nativeSrc": "19885:101:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19885:101:13"
																		},
																		"nativeSrc": "19885:101:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19885:101:13"
																	},
																	{
																		"nativeSrc": "19999:13:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19999:13:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "20010:2:13",
																			"nodeType": "YulLiteral",
																			"src": "20010:2:13",
																			"type": "",
																			"value": "96"
																		},
																		"variables": [
																			{
																				"name": "_11",
																				"nativeSrc": "20003:3:13",
																				"nodeType": "YulTypedName",
																				"src": "20003:3:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "20036:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "20036:5:13"
																						},
																						{
																							"name": "_9",
																							"nativeSrc": "20043:2:13",
																							"nodeType": "YulIdentifier",
																							"src": "20043:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20032:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "20032:3:13"
																					},
																					"nativeSrc": "20032:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20032:14:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "20058:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "20058:2:13"
																								},
																								{
																									"name": "_11",
																									"nativeSrc": "20062:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "20062:3:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20054:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20054:3:13"
																							},
																							"nativeSrc": "20054:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20054:12:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "20048:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "20048:5:13"
																					},
																					"nativeSrc": "20048:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20048:19:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20025:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20025:6:13"
																			},
																			"nativeSrc": "20025:43:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20025:43:13"
																		},
																		"nativeSrc": "20025:43:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20025:43:13"
																	},
																	{
																		"nativeSrc": "20081:14:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20081:14:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "20092:3:13",
																			"nodeType": "YulLiteral",
																			"src": "20092:3:13",
																			"type": "",
																			"value": "128"
																		},
																		"variables": [
																			{
																				"name": "_12",
																				"nativeSrc": "20085:3:13",
																				"nodeType": "YulTypedName",
																				"src": "20085:3:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "20119:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "20119:5:13"
																						},
																						{
																							"name": "_11",
																							"nativeSrc": "20126:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "20126:3:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20115:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "20115:3:13"
																					},
																					"nativeSrc": "20115:15:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20115:15:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "20142:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "20142:2:13"
																								},
																								{
																									"name": "_12",
																									"nativeSrc": "20146:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "20146:3:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20138:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20138:3:13"
																							},
																							"nativeSrc": "20138:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20138:12:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "20132:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "20132:5:13"
																					},
																					"nativeSrc": "20132:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20132:19:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20108:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20108:6:13"
																			},
																			"nativeSrc": "20108:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20108:44:13"
																		},
																		"nativeSrc": "20108:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20108:44:13"
																	},
																	{
																		"nativeSrc": "20165:14:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20165:14:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "20176:3:13",
																			"nodeType": "YulLiteral",
																			"src": "20176:3:13",
																			"type": "",
																			"value": "160"
																		},
																		"variables": [
																			{
																				"name": "_13",
																				"nativeSrc": "20169:3:13",
																				"nodeType": "YulTypedName",
																				"src": "20169:3:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "20203:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "20203:5:13"
																						},
																						{
																							"name": "_12",
																							"nativeSrc": "20210:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "20210:3:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20199:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "20199:3:13"
																					},
																					"nativeSrc": "20199:15:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20199:15:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "20226:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "20226:2:13"
																								},
																								{
																									"name": "_13",
																									"nativeSrc": "20230:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "20230:3:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20222:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20222:3:13"
																							},
																							"nativeSrc": "20222:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20222:12:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "20216:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "20216:5:13"
																					},
																					"nativeSrc": "20216:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20216:19:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20192:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20192:6:13"
																			},
																			"nativeSrc": "20192:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20192:44:13"
																		},
																		"nativeSrc": "20192:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20192:44:13"
																	},
																	{
																		"nativeSrc": "20249:14:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20249:14:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "20260:3:13",
																			"nodeType": "YulLiteral",
																			"src": "20260:3:13",
																			"type": "",
																			"value": "192"
																		},
																		"variables": [
																			{
																				"name": "_14",
																				"nativeSrc": "20253:3:13",
																				"nodeType": "YulTypedName",
																				"src": "20253:3:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "20287:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "20287:5:13"
																						},
																						{
																							"name": "_13",
																							"nativeSrc": "20294:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "20294:3:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20283:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "20283:3:13"
																					},
																					"nativeSrc": "20283:15:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20283:15:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "20310:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "20310:2:13"
																								},
																								{
																									"name": "_14",
																									"nativeSrc": "20314:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "20314:3:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20306:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20306:3:13"
																							},
																							"nativeSrc": "20306:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20306:12:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "20300:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "20300:5:13"
																					},
																					"nativeSrc": "20300:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20300:19:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20276:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20276:6:13"
																			},
																			"nativeSrc": "20276:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20276:44:13"
																		},
																		"nativeSrc": "20276:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20276:44:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "20344:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "20344:5:13"
																						},
																						{
																							"name": "_14",
																							"nativeSrc": "20351:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "20351:3:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20340:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "20340:3:13"
																					},
																					"nativeSrc": "20340:15:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20340:15:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_6",
																									"nativeSrc": "20391:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "20391:2:13"
																								},
																								{
																									"name": "_7",
																									"nativeSrc": "20395:2:13",
																									"nodeType": "YulIdentifier",
																									"src": "20395:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20387:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "20387:3:13"
																							},
																							"nativeSrc": "20387:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "20387:11:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address_fromMemory",
																						"nativeSrc": "20357:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "20357:29:13"
																					},
																					"nativeSrc": "20357:42:13",
																					"nodeType": "YulFunctionCall",
																					"src": "20357:42:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20333:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20333:6:13"
																			},
																			"nativeSrc": "20333:67:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20333:67:13"
																		},
																		"nativeSrc": "20333:67:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20333:67:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "20420:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "20420:3:13"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "20425:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "20425:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "20413:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20413:6:13"
																			},
																			"nativeSrc": "20413:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20413:18:13"
																		},
																		"nativeSrc": "20413:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20413:18:13"
																	},
																	{
																		"nativeSrc": "20444:19:13",
																		"nodeType": "YulAssignment",
																		"src": "20444:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "20455:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "20455:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "20460:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "20460:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20451:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "20451:3:13"
																			},
																			"nativeSrc": "20451:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20451:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "20444:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "20444:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19162:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19162:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "19167:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19167:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "19159:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19159:2:13"
																},
																"nativeSrc": "19159:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19159:15:13"
															},
															"nativeSrc": "19151:1322:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "19175:23:13",
																"nodeType": "YulBlock",
																"src": "19175:23:13",
																"statements": [
																	{
																		"nativeSrc": "19177:19:13",
																		"nodeType": "YulAssignment",
																		"src": "19177:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "19188:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "19188:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "19193:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "19193:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19184:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "19184:3:13"
																			},
																			"nativeSrc": "19184:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19184:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "19177:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "19177:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "19155:3:13",
																"nodeType": "YulBlock",
																"src": "19155:3:13",
																"statements": []
															},
															"src": "19151:1322:13"
														},
														{
															"nativeSrc": "20482:15:13",
															"nodeType": "YulAssignment",
															"src": "20482:15:13",
															"value": {
																"name": "dst_1",
																"nativeSrc": "20492:5:13",
																"nodeType": "YulIdentifier",
																"src": "20492:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "20482:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20482:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nativeSrc": "18380:2123:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18486:9:13",
														"nodeType": "YulTypedName",
														"src": "18486:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18497:7:13",
														"nodeType": "YulTypedName",
														"src": "18497:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18509:6:13",
														"nodeType": "YulTypedName",
														"src": "18509:6:13",
														"type": ""
													}
												],
												"src": "18380:2123:13"
											},
											{
												"body": {
													"nativeSrc": "20597:170:13",
													"nodeType": "YulBlock",
													"src": "20597:170:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "20643:16:13",
																"nodeType": "YulBlock",
																"src": "20643:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20652:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20652:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20655:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20655:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20645:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20645:6:13"
																			},
																			"nativeSrc": "20645:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20645:12:13"
																		},
																		"nativeSrc": "20645:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20645:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20618:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "20618:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20627:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20627:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20614:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20614:3:13"
																		},
																		"nativeSrc": "20614:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20614:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20639:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20639:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20610:3:13"
																},
																"nativeSrc": "20610:32:13",
																"nodeType": "YulFunctionCall",
																"src": "20610:32:13"
															},
															"nativeSrc": "20607:52:13",
															"nodeType": "YulIf",
															"src": "20607:52:13"
														},
														{
															"nativeSrc": "20668:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "20668:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20687:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20687:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20681:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20681:5:13"
																},
																"nativeSrc": "20681:16:13",
																"nodeType": "YulFunctionCall",
																"src": "20681:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "20672:5:13",
																	"nodeType": "YulTypedName",
																	"src": "20672:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20731:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20731:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "20706:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "20706:24:13"
																},
																"nativeSrc": "20706:31:13",
																"nodeType": "YulFunctionCall",
																"src": "20706:31:13"
															},
															"nativeSrc": "20706:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "20706:31:13"
														},
														{
															"nativeSrc": "20746:15:13",
															"nodeType": "YulAssignment",
															"src": "20746:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "20756:5:13",
																"nodeType": "YulIdentifier",
																"src": "20756:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "20746:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20746:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable_fromMemory",
												"nativeSrc": "20508:259:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20563:9:13",
														"nodeType": "YulTypedName",
														"src": "20563:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20574:7:13",
														"nodeType": "YulTypedName",
														"src": "20574:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20586:6:13",
														"nodeType": "YulTypedName",
														"src": "20586:6:13",
														"type": ""
													}
												],
												"src": "20508:259:13"
											},
											{
												"body": {
													"nativeSrc": "20946:166:13",
													"nodeType": "YulBlock",
													"src": "20946:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20963:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20963:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20974:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20974:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20956:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20956:6:13"
																},
																"nativeSrc": "20956:21:13",
																"nodeType": "YulFunctionCall",
																"src": "20956:21:13"
															},
															"nativeSrc": "20956:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "20956:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20997:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20997:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21008:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21008:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20993:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20993:3:13"
																		},
																		"nativeSrc": "20993:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20993:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21013:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21013:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20986:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20986:6:13"
																},
																"nativeSrc": "20986:30:13",
																"nodeType": "YulFunctionCall",
																"src": "20986:30:13"
															},
															"nativeSrc": "20986:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "20986:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21036:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21036:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21047:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21047:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21032:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21032:3:13"
																		},
																		"nativeSrc": "21032:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21032:18:13"
																	},
																	{
																		"hexValue": "206f72672061646d696e206f6e6c7920",
																		"kind": "string",
																		"nativeSrc": "21052:18:13",
																		"nodeType": "YulLiteral",
																		"src": "21052:18:13",
																		"type": "",
																		"value": " org admin only "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21025:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21025:6:13"
																},
																"nativeSrc": "21025:46:13",
																"nodeType": "YulFunctionCall",
																"src": "21025:46:13"
															},
															"nativeSrc": "21025:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "21025:46:13"
														},
														{
															"nativeSrc": "21080:26:13",
															"nodeType": "YulAssignment",
															"src": "21080:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21092:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21092:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21103:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21103:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21088:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21088:3:13"
																},
																"nativeSrc": "21088:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21088:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21080:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21080:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef1bb694c59caf41511e71fefbf8b79caf80d578a7846a1dc497f4d47758c0c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20772:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20923:9:13",
														"nodeType": "YulTypedName",
														"src": "20923:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20937:4:13",
														"nodeType": "YulTypedName",
														"src": "20937:4:13",
														"type": ""
													}
												],
												"src": "20772:340:13"
											},
											{
												"body": {
													"nativeSrc": "21233:307:13",
													"nodeType": "YulBlock",
													"src": "21233:307:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "21279:16:13",
																"nodeType": "YulBlock",
																"src": "21279:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "21288:1:13",
																					"nodeType": "YulLiteral",
																					"src": "21288:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21291:1:13",
																					"nodeType": "YulLiteral",
																					"src": "21291:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "21281:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21281:6:13"
																			},
																			"nativeSrc": "21281:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21281:12:13"
																		},
																		"nativeSrc": "21281:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21281:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21254:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21254:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21263:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21263:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21250:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21250:3:13"
																		},
																		"nativeSrc": "21250:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21250:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21275:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21275:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21246:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21246:3:13"
																},
																"nativeSrc": "21246:32:13",
																"nodeType": "YulFunctionCall",
																"src": "21246:32:13"
															},
															"nativeSrc": "21243:52:13",
															"nodeType": "YulIf",
															"src": "21243:52:13"
														},
														{
															"nativeSrc": "21304:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "21304:35:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory_3948",
																	"nativeSrc": "21317:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "21317:20:13"
																},
																"nativeSrc": "21317:22:13",
																"nodeType": "YulFunctionCall",
																"src": "21317:22:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "21308:5:13",
																	"nodeType": "YulTypedName",
																	"src": "21308:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21348:31:13",
															"nodeType": "YulVariableDeclaration",
															"src": "21348:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21369:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21369:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21363:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21363:5:13"
																},
																"nativeSrc": "21363:16:13",
																"nodeType": "YulFunctionCall",
																"src": "21363:16:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "21352:7:13",
																	"nodeType": "YulTypedName",
																	"src": "21352:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "21413:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "21413:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "21388:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "21388:24:13"
																},
																"nativeSrc": "21388:33:13",
																"nodeType": "YulFunctionCall",
																"src": "21388:33:13"
															},
															"nativeSrc": "21388:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "21388:33:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21437:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21437:5:13"
																	},
																	{
																		"name": "value_1",
																		"nativeSrc": "21444:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "21444:7:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21430:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21430:6:13"
																},
																"nativeSrc": "21430:22:13",
																"nodeType": "YulFunctionCall",
																"src": "21430:22:13"
															},
															"nativeSrc": "21430:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "21430:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21472:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "21472:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21479:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21479:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21468:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21468:3:13"
																		},
																		"nativeSrc": "21468:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21468:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21494:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "21494:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "21505:2:13",
																						"nodeType": "YulLiteral",
																						"src": "21505:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21490:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21490:3:13"
																				},
																				"nativeSrc": "21490:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21490:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "21484:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "21484:5:13"
																		},
																		"nativeSrc": "21484:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21484:25:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21461:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21461:6:13"
																},
																"nativeSrc": "21461:49:13",
																"nodeType": "YulFunctionCall",
																"src": "21461:49:13"
															},
															"nativeSrc": "21461:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "21461:49:13"
														},
														{
															"nativeSrc": "21519:15:13",
															"nodeType": "YulAssignment",
															"src": "21519:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "21529:5:13",
																"nodeType": "YulIdentifier",
																"src": "21529:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "21519:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21519:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_ProjectAllocation_$1658_memory_ptr_fromMemory",
												"nativeSrc": "21117:423:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21199:9:13",
														"nodeType": "YulTypedName",
														"src": "21199:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21210:7:13",
														"nodeType": "YulTypedName",
														"src": "21210:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21222:6:13",
														"nodeType": "YulTypedName",
														"src": "21222:6:13",
														"type": ""
													}
												],
												"src": "21117:423:13"
											},
											{
												"body": {
													"nativeSrc": "21644:170:13",
													"nodeType": "YulBlock",
													"src": "21644:170:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "21690:16:13",
																"nodeType": "YulBlock",
																"src": "21690:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "21699:1:13",
																					"nodeType": "YulLiteral",
																					"src": "21699:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21702:1:13",
																					"nodeType": "YulLiteral",
																					"src": "21702:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "21692:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21692:6:13"
																			},
																			"nativeSrc": "21692:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21692:12:13"
																		},
																		"nativeSrc": "21692:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21692:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21665:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21665:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21674:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21674:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21661:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21661:3:13"
																		},
																		"nativeSrc": "21661:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21661:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21686:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21686:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21657:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21657:3:13"
																},
																"nativeSrc": "21657:32:13",
																"nodeType": "YulFunctionCall",
																"src": "21657:32:13"
															},
															"nativeSrc": "21654:52:13",
															"nodeType": "YulIf",
															"src": "21654:52:13"
														},
														{
															"nativeSrc": "21715:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "21715:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21734:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21734:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21728:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21728:5:13"
																},
																"nativeSrc": "21728:16:13",
																"nodeType": "YulFunctionCall",
																"src": "21728:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "21719:5:13",
																	"nodeType": "YulTypedName",
																	"src": "21719:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21778:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21778:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "21753:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "21753:24:13"
																},
																"nativeSrc": "21753:31:13",
																"nodeType": "YulFunctionCall",
																"src": "21753:31:13"
															},
															"nativeSrc": "21753:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "21753:31:13"
														},
														{
															"nativeSrc": "21793:15:13",
															"nodeType": "YulAssignment",
															"src": "21793:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "21803:5:13",
																"nodeType": "YulIdentifier",
																"src": "21803:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "21793:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21793:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IRegistry_$2282_fromMemory",
												"nativeSrc": "21545:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21610:9:13",
														"nodeType": "YulTypedName",
														"src": "21610:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21621:7:13",
														"nodeType": "YulTypedName",
														"src": "21621:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21633:6:13",
														"nodeType": "YulTypedName",
														"src": "21633:6:13",
														"type": ""
													}
												],
												"src": "21545:269:13"
											},
											{
												"body": {
													"nativeSrc": "21948:145:13",
													"nodeType": "YulBlock",
													"src": "21948:145:13",
													"statements": [
														{
															"nativeSrc": "21958:26:13",
															"nodeType": "YulAssignment",
															"src": "21958:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21970:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21970:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21981:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21981:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21966:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21966:3:13"
																},
																"nativeSrc": "21966:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21966:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21958:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21958:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22000:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22000:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "22011:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22011:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21993:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21993:6:13"
																},
																"nativeSrc": "21993:25:13",
																"nodeType": "YulFunctionCall",
																"src": "21993:25:13"
															},
															"nativeSrc": "21993:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "21993:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22038:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22038:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22049:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22049:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22034:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22034:3:13"
																		},
																		"nativeSrc": "22034:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22034:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "22058:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22058:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "22074:3:13",
																								"nodeType": "YulLiteral",
																								"src": "22074:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "22079:1:13",
																								"nodeType": "YulLiteral",
																								"src": "22079:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "22070:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "22070:3:13"
																						},
																						"nativeSrc": "22070:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "22070:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "22083:1:13",
																						"nodeType": "YulLiteral",
																						"src": "22083:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "22066:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "22066:3:13"
																				},
																				"nativeSrc": "22066:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "22066:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22054:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22054:3:13"
																		},
																		"nativeSrc": "22054:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22054:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22027:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22027:6:13"
																},
																"nativeSrc": "22027:60:13",
																"nodeType": "YulFunctionCall",
																"src": "22027:60:13"
															},
															"nativeSrc": "22027:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "22027:60:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "21819:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21909:9:13",
														"nodeType": "YulTypedName",
														"src": "21909:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21920:6:13",
														"nodeType": "YulTypedName",
														"src": "21920:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21928:6:13",
														"nodeType": "YulTypedName",
														"src": "21928:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21939:4:13",
														"nodeType": "YulTypedName",
														"src": "21939:4:13",
														"type": ""
													}
												],
												"src": "21819:274:13"
											},
											{
												"body": {
													"nativeSrc": "22227:145:13",
													"nodeType": "YulBlock",
													"src": "22227:145:13",
													"statements": [
														{
															"nativeSrc": "22237:26:13",
															"nodeType": "YulAssignment",
															"src": "22237:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22249:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22249:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22260:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22260:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22245:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22245:3:13"
																},
																"nativeSrc": "22245:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22245:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22237:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22237:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22279:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22279:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "22290:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22290:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22272:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22272:6:13"
																},
																"nativeSrc": "22272:25:13",
																"nodeType": "YulFunctionCall",
																"src": "22272:25:13"
															},
															"nativeSrc": "22272:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "22272:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22317:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22317:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22328:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22328:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22313:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22313:3:13"
																		},
																		"nativeSrc": "22313:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22313:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "22337:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22337:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "22353:3:13",
																								"nodeType": "YulLiteral",
																								"src": "22353:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "22358:1:13",
																								"nodeType": "YulLiteral",
																								"src": "22358:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "22349:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "22349:3:13"
																						},
																						"nativeSrc": "22349:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "22349:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "22362:1:13",
																						"nodeType": "YulLiteral",
																						"src": "22362:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "22345:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "22345:3:13"
																				},
																				"nativeSrc": "22345:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "22345:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22333:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22333:3:13"
																		},
																		"nativeSrc": "22333:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22333:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22306:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22306:6:13"
																},
																"nativeSrc": "22306:60:13",
																"nodeType": "YulFunctionCall",
																"src": "22306:60:13"
															},
															"nativeSrc": "22306:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "22306:60:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
												"nativeSrc": "22098:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22188:9:13",
														"nodeType": "YulTypedName",
														"src": "22188:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22199:6:13",
														"nodeType": "YulTypedName",
														"src": "22199:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22207:6:13",
														"nodeType": "YulTypedName",
														"src": "22207:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22218:4:13",
														"nodeType": "YulTypedName",
														"src": "22218:4:13",
														"type": ""
													}
												],
												"src": "22098:274:13"
											},
											{
												"body": {
													"nativeSrc": "22618:350:13",
													"nodeType": "YulBlock",
													"src": "22618:350:13",
													"statements": [
														{
															"nativeSrc": "22628:27:13",
															"nodeType": "YulAssignment",
															"src": "22628:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22640:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22640:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22651:3:13",
																		"nodeType": "YulLiteral",
																		"src": "22651:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22636:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22636:3:13"
																},
																"nativeSrc": "22636:19:13",
																"nodeType": "YulFunctionCall",
																"src": "22636:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22628:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22628:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22671:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22671:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "22682:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22682:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22664:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22664:6:13"
																},
																"nativeSrc": "22664:25:13",
																"nodeType": "YulFunctionCall",
																"src": "22664:25:13"
															},
															"nativeSrc": "22664:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "22664:25:13"
														},
														{
															"nativeSrc": "22698:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "22698:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "22716:3:13",
																				"nodeType": "YulLiteral",
																				"src": "22716:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22721:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22721:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "22712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22712:3:13"
																		},
																		"nativeSrc": "22712:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22712:11:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22725:1:13",
																		"nodeType": "YulLiteral",
																		"src": "22725:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "22708:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22708:3:13"
																},
																"nativeSrc": "22708:19:13",
																"nodeType": "YulFunctionCall",
																"src": "22708:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "22702:2:13",
																	"nodeType": "YulTypedName",
																	"src": "22702:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22747:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22747:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22758:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22758:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22743:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22743:3:13"
																		},
																		"nativeSrc": "22743:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22743:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "22767:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22767:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "22775:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "22775:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22763:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22763:3:13"
																		},
																		"nativeSrc": "22763:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22763:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22736:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22736:6:13"
																},
																"nativeSrc": "22736:43:13",
																"nodeType": "YulFunctionCall",
																"src": "22736:43:13"
															},
															"nativeSrc": "22736:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "22736:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22799:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22799:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22810:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22810:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22795:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22795:3:13"
																		},
																		"nativeSrc": "22795:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22795:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "22815:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22815:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22788:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22788:6:13"
																},
																"nativeSrc": "22788:34:13",
																"nodeType": "YulFunctionCall",
																"src": "22788:34:13"
															},
															"nativeSrc": "22788:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "22788:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22842:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22842:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22853:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22853:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22838:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22838:3:13"
																		},
																		"nativeSrc": "22838:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22838:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "22862:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22862:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "22870:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "22870:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22858:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22858:3:13"
																		},
																		"nativeSrc": "22858:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22858:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22831:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22831:6:13"
																},
																"nativeSrc": "22831:43:13",
																"nodeType": "YulFunctionCall",
																"src": "22831:43:13"
															},
															"nativeSrc": "22831:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "22831:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22894:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22894:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22905:3:13",
																				"nodeType": "YulLiteral",
																				"src": "22905:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22890:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22890:3:13"
																		},
																		"nativeSrc": "22890:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22890:19:13"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "22911:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22911:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22883:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22883:6:13"
																},
																"nativeSrc": "22883:35:13",
																"nodeType": "YulFunctionCall",
																"src": "22883:35:13"
															},
															"nativeSrc": "22883:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "22883:35:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22938:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22938:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22949:3:13",
																				"nodeType": "YulLiteral",
																				"src": "22949:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22934:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22934:3:13"
																		},
																		"nativeSrc": "22934:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22934:19:13"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "22955:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22955:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22927:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22927:6:13"
																},
																"nativeSrc": "22927:35:13",
																"nodeType": "YulFunctionCall",
																"src": "22927:35:13"
															},
															"nativeSrc": "22927:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "22927:35:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_address_t_bytes32_t_uint256__to_t_uint256_t_address_t_uint256_t_address_t_bytes32_t_uint256__fromStack_reversed",
												"nativeSrc": "22377:591:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22547:9:13",
														"nodeType": "YulTypedName",
														"src": "22547:9:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "22558:6:13",
														"nodeType": "YulTypedName",
														"src": "22558:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "22566:6:13",
														"nodeType": "YulTypedName",
														"src": "22566:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "22574:6:13",
														"nodeType": "YulTypedName",
														"src": "22574:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22582:6:13",
														"nodeType": "YulTypedName",
														"src": "22582:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22590:6:13",
														"nodeType": "YulTypedName",
														"src": "22590:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22598:6:13",
														"nodeType": "YulTypedName",
														"src": "22598:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22609:4:13",
														"nodeType": "YulTypedName",
														"src": "22609:4:13",
														"type": ""
													}
												],
												"src": "22377:591:13"
											},
											{
												"body": {
													"nativeSrc": "23117:175:13",
													"nodeType": "YulBlock",
													"src": "23117:175:13",
													"statements": [
														{
															"nativeSrc": "23127:26:13",
															"nodeType": "YulAssignment",
															"src": "23127:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23139:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23139:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23150:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23150:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23135:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23135:3:13"
																},
																"nativeSrc": "23135:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23135:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23127:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23127:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23169:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23169:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "23180:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23180:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23162:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23162:6:13"
																},
																"nativeSrc": "23162:25:13",
																"nodeType": "YulFunctionCall",
																"src": "23162:25:13"
															},
															"nativeSrc": "23162:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "23162:25:13"
														},
														{
															"body": {
																"nativeSrc": "23221:22:13",
																"nodeType": "YulBlock",
																"src": "23221:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "23223:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "23223:16:13"
																			},
																			"nativeSrc": "23223:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23223:18:13"
																		},
																		"nativeSrc": "23223:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "23223:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "23209:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23209:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23217:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23217:1:13",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "23206:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "23206:2:13"
																		},
																		"nativeSrc": "23206:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23206:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23199:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23199:6:13"
																},
																"nativeSrc": "23199:21:13",
																"nodeType": "YulFunctionCall",
																"src": "23199:21:13"
															},
															"nativeSrc": "23196:47:13",
															"nodeType": "YulIf",
															"src": "23196:47:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23263:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23263:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23274:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23274:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23259:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23259:3:13"
																		},
																		"nativeSrc": "23259:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23259:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "23279:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23279:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23252:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23252:6:13"
																},
																"nativeSrc": "23252:34:13",
																"nodeType": "YulFunctionCall",
																"src": "23252:34:13"
															},
															"nativeSrc": "23252:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "23252:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_PayoutStatus_$1615__to_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "22973:319:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23078:9:13",
														"nodeType": "YulTypedName",
														"src": "23078:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23089:6:13",
														"nodeType": "YulTypedName",
														"src": "23089:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23097:6:13",
														"nodeType": "YulTypedName",
														"src": "23097:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23108:4:13",
														"nodeType": "YulTypedName",
														"src": "23108:4:13",
														"type": ""
													}
												],
												"src": "22973:319:13"
											},
											{
												"body": {
													"nativeSrc": "23352:325:13",
													"nodeType": "YulBlock",
													"src": "23352:325:13",
													"statements": [
														{
															"nativeSrc": "23362:22:13",
															"nodeType": "YulAssignment",
															"src": "23362:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23376:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23376:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "23379:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23379:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "23372:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23372:3:13"
																},
																"nativeSrc": "23372:12:13",
																"nodeType": "YulFunctionCall",
																"src": "23372:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "23362:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23362:6:13"
																}
															]
														},
														{
															"nativeSrc": "23393:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23393:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23423:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23423:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23429:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23429:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23419:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23419:3:13"
																},
																"nativeSrc": "23419:12:13",
																"nodeType": "YulFunctionCall",
																"src": "23419:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "23397:18:13",
																	"nodeType": "YulTypedName",
																	"src": "23397:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23470:31:13",
																"nodeType": "YulBlock",
																"src": "23470:31:13",
																"statements": [
																	{
																		"nativeSrc": "23472:27:13",
																		"nodeType": "YulAssignment",
																		"src": "23472:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "23486:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "23486:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23494:4:13",
																					"nodeType": "YulLiteral",
																					"src": "23494:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "23482:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "23482:3:13"
																			},
																			"nativeSrc": "23482:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23482:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "23472:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23472:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "23450:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "23450:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23443:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23443:6:13"
																},
																"nativeSrc": "23443:26:13",
																"nodeType": "YulFunctionCall",
																"src": "23443:26:13"
															},
															"nativeSrc": "23440:61:13",
															"nodeType": "YulIf",
															"src": "23440:61:13"
														},
														{
															"body": {
																"nativeSrc": "23560:111:13",
																"nodeType": "YulBlock",
																"src": "23560:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23581:1:13",
																					"nodeType": "YulLiteral",
																					"src": "23581:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "23588:3:13",
																							"nodeType": "YulLiteral",
																							"src": "23588:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "23593:10:13",
																							"nodeType": "YulLiteral",
																							"src": "23593:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "23584:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "23584:3:13"
																					},
																					"nativeSrc": "23584:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "23584:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "23574:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23574:6:13"
																			},
																			"nativeSrc": "23574:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23574:31:13"
																		},
																		"nativeSrc": "23574:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "23574:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23625:1:13",
																					"nodeType": "YulLiteral",
																					"src": "23625:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23628:4:13",
																					"nodeType": "YulLiteral",
																					"src": "23628:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "23618:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23618:6:13"
																			},
																			"nativeSrc": "23618:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23618:15:13"
																		},
																		"nativeSrc": "23618:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "23618:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23653:1:13",
																					"nodeType": "YulLiteral",
																					"src": "23653:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23656:4:13",
																					"nodeType": "YulLiteral",
																					"src": "23656:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "23646:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23646:6:13"
																			},
																			"nativeSrc": "23646:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23646:15:13"
																		},
																		"nativeSrc": "23646:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "23646:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "23516:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "23516:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "23539:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23539:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23547:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23547:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "23536:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "23536:2:13"
																		},
																		"nativeSrc": "23536:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23536:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "23513:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "23513:2:13"
																},
																"nativeSrc": "23513:38:13",
																"nodeType": "YulFunctionCall",
																"src": "23513:38:13"
															},
															"nativeSrc": "23510:161:13",
															"nodeType": "YulIf",
															"src": "23510:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "23297:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23332:4:13",
														"nodeType": "YulTypedName",
														"src": "23332:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "23341:6:13",
														"nodeType": "YulTypedName",
														"src": "23341:6:13",
														"type": ""
													}
												],
												"src": "23297:380:13"
											},
											{
												"body": {
													"nativeSrc": "23738:65:13",
													"nodeType": "YulBlock",
													"src": "23738:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23755:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23755:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "23758:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23758:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23748:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23748:6:13"
																},
																"nativeSrc": "23748:14:13",
																"nodeType": "YulFunctionCall",
																"src": "23748:14:13"
															},
															"nativeSrc": "23748:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "23748:14:13"
														},
														{
															"nativeSrc": "23771:26:13",
															"nodeType": "YulAssignment",
															"src": "23771:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23789:1:13",
																		"nodeType": "YulLiteral",
																		"src": "23789:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23792:4:13",
																		"nodeType": "YulLiteral",
																		"src": "23792:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "23779:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "23779:9:13"
																},
																"nativeSrc": "23779:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23779:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23771:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23771:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "23682:121:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "23721:3:13",
														"nodeType": "YulTypedName",
														"src": "23721:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "23729:4:13",
														"nodeType": "YulTypedName",
														"src": "23729:4:13",
														"type": ""
													}
												],
												"src": "23682:121:13"
											},
											{
												"body": {
													"nativeSrc": "23889:462:13",
													"nodeType": "YulBlock",
													"src": "23889:462:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "23922:423:13",
																"nodeType": "YulBlock",
																"src": "23922:423:13",
																"statements": [
																	{
																		"nativeSrc": "23936:11:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23936:11:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "23946:1:13",
																			"nodeType": "YulLiteral",
																			"src": "23946:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "23940:2:13",
																				"nodeType": "YulTypedName",
																				"src": "23940:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23967:1:13",
																					"nodeType": "YulLiteral",
																					"src": "23967:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "23970:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "23970:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "23960:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "23960:6:13"
																			},
																			"nativeSrc": "23960:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23960:16:13"
																		},
																		"nativeSrc": "23960:16:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "23960:16:13"
																	},
																	{
																		"nativeSrc": "23989:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23989:30:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "24011:1:13",
																					"nodeType": "YulLiteral",
																					"src": "24011:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24014:4:13",
																					"nodeType": "YulLiteral",
																					"src": "24014:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "24001:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24001:9:13"
																			},
																			"nativeSrc": "24001:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24001:18:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "23993:4:13",
																				"nodeType": "YulTypedName",
																				"src": "23993:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "24032:57:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24032:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "24055:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "24055:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "24065:1:13",
																							"nodeType": "YulLiteral",
																							"src": "24065:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "24072:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "24072:10:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24084:2:13",
																									"nodeType": "YulLiteral",
																									"src": "24084:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24068:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "24068:3:13"
																							},
																							"nativeSrc": "24068:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "24068:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "24061:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "24061:3:13"
																					},
																					"nativeSrc": "24061:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24061:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24051:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "24051:3:13"
																			},
																			"nativeSrc": "24051:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24051:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "24036:11:13",
																				"nodeType": "YulTypedName",
																				"src": "24036:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24126:23:13",
																			"nodeType": "YulBlock",
																			"src": "24126:23:13",
																			"statements": [
																				{
																					"nativeSrc": "24128:19:13",
																					"nodeType": "YulAssignment",
																					"src": "24128:19:13",
																					"value": {
																						"name": "data",
																						"nativeSrc": "24143:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "24143:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "24128:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "24128:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "24108:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "24108:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24120:4:13",
																					"nodeType": "YulLiteral",
																					"src": "24120:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24105:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "24105:2:13"
																			},
																			"nativeSrc": "24105:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24105:20:13"
																		},
																		"nativeSrc": "24102:47:13",
																		"nodeType": "YulIf",
																		"src": "24102:47:13"
																	},
																	{
																		"nativeSrc": "24162:41:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24162:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "24176:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "24176:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "24186:1:13",
																							"nodeType": "YulLiteral",
																							"src": "24186:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "24193:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "24193:3:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24198:2:13",
																									"nodeType": "YulLiteral",
																									"src": "24198:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24189:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "24189:3:13"
																							},
																							"nativeSrc": "24189:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "24189:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "24182:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "24182:3:13"
																					},
																					"nativeSrc": "24182:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24182:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "24172:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "24172:3:13"
																			},
																			"nativeSrc": "24172:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24172:31:13"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "24166:2:13",
																				"nodeType": "YulTypedName",
																				"src": "24166:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "24216:24:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "24216:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "24229:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "24229:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "24220:5:13",
																				"nodeType": "YulTypedName",
																				"src": "24220:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24314:21:13",
																			"nodeType": "YulBlock",
																			"src": "24314:21:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "24323:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "24323:5:13"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "24330:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "24330:2:13"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "24316:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "24316:6:13"
																						},
																						"nativeSrc": "24316:17:13",
																						"nodeType": "YulFunctionCall",
																						"src": "24316:17:13"
																					},
																					"nativeSrc": "24316:17:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "24316:17:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "24264:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "24264:5:13"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "24271:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "24271:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24261:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "24261:2:13"
																			},
																			"nativeSrc": "24261:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24261:13:13"
																		},
																		"nativeSrc": "24253:82:13",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "24275:26:13",
																			"nodeType": "YulBlock",
																			"src": "24275:26:13",
																			"statements": [
																				{
																					"nativeSrc": "24277:22:13",
																					"nodeType": "YulAssignment",
																					"src": "24277:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "24290:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "24290:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "24297:1:13",
																								"nodeType": "YulLiteral",
																								"src": "24297:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "24286:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "24286:3:13"
																						},
																						"nativeSrc": "24286:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "24286:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "24277:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "24277:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "24257:3:13",
																			"nodeType": "YulBlock",
																			"src": "24257:3:13",
																			"statements": []
																		},
																		"src": "24253:82:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "23905:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23905:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23910:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23910:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23902:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "23902:2:13"
																},
																"nativeSrc": "23902:11:13",
																"nodeType": "YulFunctionCall",
																"src": "23902:11:13"
															},
															"nativeSrc": "23899:446:13",
															"nodeType": "YulIf",
															"src": "23899:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "23808:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "23861:5:13",
														"nodeType": "YulTypedName",
														"src": "23861:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23868:3:13",
														"nodeType": "YulTypedName",
														"src": "23868:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "23873:10:13",
														"nodeType": "YulTypedName",
														"src": "23873:10:13",
														"type": ""
													}
												],
												"src": "23808:543:13"
											},
											{
												"body": {
													"nativeSrc": "24441:81:13",
													"nodeType": "YulBlock",
													"src": "24441:81:13",
													"statements": [
														{
															"nativeSrc": "24451:65:13",
															"nodeType": "YulAssignment",
															"src": "24451:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "24466:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "24466:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "24484:1:13",
																										"nodeType": "YulLiteral",
																										"src": "24484:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "24487:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "24487:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "24480:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "24480:3:13"
																								},
																								"nativeSrc": "24480:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "24480:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "24497:1:13",
																										"nodeType": "YulLiteral",
																										"src": "24497:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "24493:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "24493:3:13"
																								},
																								"nativeSrc": "24493:6:13",
																								"nodeType": "YulFunctionCall",
																								"src": "24493:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "24476:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "24476:3:13"
																						},
																						"nativeSrc": "24476:24:13",
																						"nodeType": "YulFunctionCall",
																						"src": "24476:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24472:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "24472:3:13"
																				},
																				"nativeSrc": "24472:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "24472:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "24462:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24462:3:13"
																		},
																		"nativeSrc": "24462:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24462:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "24508:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24508:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "24511:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "24511:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "24504:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24504:3:13"
																		},
																		"nativeSrc": "24504:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24504:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24459:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24459:2:13"
																},
																"nativeSrc": "24459:57:13",
																"nodeType": "YulFunctionCall",
																"src": "24459:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "24451:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24451:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24356:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24418:4:13",
														"nodeType": "YulTypedName",
														"src": "24418:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24424:3:13",
														"nodeType": "YulTypedName",
														"src": "24424:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "24432:4:13",
														"nodeType": "YulTypedName",
														"src": "24432:4:13",
														"type": ""
													}
												],
												"src": "24356:166:13"
											},
											{
												"body": {
													"nativeSrc": "24623:1249:13",
													"nodeType": "YulBlock",
													"src": "24623:1249:13",
													"statements": [
														{
															"nativeSrc": "24633:24:13",
															"nodeType": "YulVariableDeclaration",
															"src": "24633:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "24653:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "24653:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24647:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "24647:5:13"
																},
																"nativeSrc": "24647:10:13",
																"nodeType": "YulFunctionCall",
																"src": "24647:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "24637:6:13",
																	"nodeType": "YulTypedName",
																	"src": "24637:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24700:22:13",
																"nodeType": "YulBlock",
																"src": "24700:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "24702:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "24702:16:13"
																			},
																			"nativeSrc": "24702:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24702:18:13"
																		},
																		"nativeSrc": "24702:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24702:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24672:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24672:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24680:18:13",
																		"nodeType": "YulLiteral",
																		"src": "24680:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24669:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24669:2:13"
																},
																"nativeSrc": "24669:30:13",
																"nodeType": "YulFunctionCall",
																"src": "24669:30:13"
															},
															"nativeSrc": "24666:56:13",
															"nodeType": "YulIf",
															"src": "24666:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24775:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "24775:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "24813:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "24813:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "24807:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "24807:5:13"
																				},
																				"nativeSrc": "24807:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "24807:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "24781:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "24781:25:13"
																		},
																		"nativeSrc": "24781:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24781:38:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "24821:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24821:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "24731:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24731:43:13"
																},
																"nativeSrc": "24731:97:13",
																"nodeType": "YulFunctionCall",
																"src": "24731:97:13"
															},
															"nativeSrc": "24731:97:13",
															"nodeType": "YulExpressionStatement",
															"src": "24731:97:13"
														},
														{
															"nativeSrc": "24837:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "24837:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "24854:1:13",
																"nodeType": "YulLiteral",
																"src": "24854:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24841:9:13",
																	"nodeType": "YulTypedName",
																	"src": "24841:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24864:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "24864:23:13",
															"value": {
																"kind": "number",
																"nativeSrc": "24883:4:13",
																"nodeType": "YulLiteral",
																"src": "24883:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "24868:11:13",
																	"nodeType": "YulTypedName",
																	"src": "24868:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24896:17:13",
															"nodeType": "YulAssignment",
															"src": "24896:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "24909:4:13",
																"nodeType": "YulLiteral",
																"src": "24909:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24896:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "24896:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "24959:656:13",
																		"nodeType": "YulBlock",
																		"src": "24959:656:13",
																		"statements": [
																			{
																				"nativeSrc": "24973:35:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24973:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "24992:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "24992:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25004:2:13",
																									"nodeType": "YulLiteral",
																									"src": "25004:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25000:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "25000:3:13"
																							},
																							"nativeSrc": "25000:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "25000:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "24988:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "24988:3:13"
																					},
																					"nativeSrc": "24988:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24988:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "24977:7:13",
																						"nodeType": "YulTypedName",
																						"src": "24977:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25021:49:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25021:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25065:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "25065:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "25035:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "25035:29:13"
																					},
																					"nativeSrc": "25035:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25035:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25025:6:13",
																						"nodeType": "YulTypedName",
																						"src": "25025:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25083:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25083:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25092:1:13",
																					"nodeType": "YulLiteral",
																					"src": "25092:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25087:1:13",
																						"nodeType": "YulTypedName",
																						"src": "25087:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25170:172:13",
																					"nodeType": "YulBlock",
																					"src": "25170:172:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25195:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "25195:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "25213:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "25213:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "25218:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "25218:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "25209:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "25209:3:13"
																												},
																												"nativeSrc": "25209:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "25209:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "25203:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "25203:5:13"
																										},
																										"nativeSrc": "25203:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "25203:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25188:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "25188:6:13"
																								},
																								"nativeSrc": "25188:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "25188:42:13"
																							},
																							"nativeSrc": "25188:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "25188:42:13"
																						},
																						{
																							"nativeSrc": "25247:24:13",
																							"nodeType": "YulAssignment",
																							"src": "25247:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25261:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "25261:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25269:1:13",
																										"nodeType": "YulLiteral",
																										"src": "25269:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25257:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "25257:3:13"
																								},
																								"nativeSrc": "25257:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "25257:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "25247:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "25247:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "25288:40:13",
																							"nodeType": "YulAssignment",
																							"src": "25288:40:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "25305:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "25305:9:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "25316:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "25316:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25301:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "25301:3:13"
																								},
																								"nativeSrc": "25301:27:13",
																								"nodeType": "YulFunctionCall",
																								"src": "25301:27:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "25288:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "25288:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25117:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "25117:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25120:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "25120:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25114:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "25114:2:13"
																					},
																					"nativeSrc": "25114:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25114:14:13"
																				},
																				"nativeSrc": "25106:236:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25129:28:13",
																					"nodeType": "YulBlock",
																					"src": "25129:28:13",
																					"statements": [
																						{
																							"nativeSrc": "25131:24:13",
																							"nodeType": "YulAssignment",
																							"src": "25131:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25140:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "25140:1:13"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "25143:11:13",
																										"nodeType": "YulIdentifier",
																										"src": "25143:11:13"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25136:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "25136:3:13"
																								},
																								"nativeSrc": "25136:19:13",
																								"nodeType": "YulFunctionCall",
																								"src": "25136:19:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25131:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "25131:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25110:3:13",
																					"nodeType": "YulBlock",
																					"src": "25110:3:13",
																					"statements": []
																				},
																				"src": "25106:236:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "25390:166:13",
																					"nodeType": "YulBlock",
																					"src": "25390:166:13",
																					"statements": [
																						{
																							"nativeSrc": "25408:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "25408:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25435:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "25435:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25440:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "25440:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25431:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "25431:3:13"
																										},
																										"nativeSrc": "25431:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "25431:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25425:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "25425:5:13"
																								},
																								"nativeSrc": "25425:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "25425:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "25412:9:13",
																									"nodeType": "YulTypedName",
																									"src": "25412:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25475:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "25475:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "25487:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "25487:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "25514:1:13",
																																				"nodeType": "YulLiteral",
																																				"src": "25514:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "25517:6:13",
																																				"nodeType": "YulIdentifier",
																																				"src": "25517:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "25510:3:13",
																																			"nodeType": "YulIdentifier",
																																			"src": "25510:3:13"
																																		},
																																		"nativeSrc": "25510:14:13",
																																		"nodeType": "YulFunctionCall",
																																		"src": "25510:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "25526:3:13",
																																		"nodeType": "YulLiteral",
																																		"src": "25526:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "25506:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "25506:3:13"
																																},
																																"nativeSrc": "25506:24:13",
																																"nodeType": "YulFunctionCall",
																																"src": "25506:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "25536:1:13",
																																		"nodeType": "YulLiteral",
																																		"src": "25536:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "25532:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "25532:3:13"
																																},
																																"nativeSrc": "25532:6:13",
																																"nodeType": "YulFunctionCall",
																																"src": "25532:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "25502:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "25502:3:13"
																														},
																														"nativeSrc": "25502:37:13",
																														"nodeType": "YulFunctionCall",
																														"src": "25502:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "25498:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "25498:3:13"
																												},
																												"nativeSrc": "25498:42:13",
																												"nodeType": "YulFunctionCall",
																												"src": "25498:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "25483:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "25483:3:13"
																										},
																										"nativeSrc": "25483:58:13",
																										"nodeType": "YulFunctionCall",
																										"src": "25483:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25468:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "25468:6:13"
																								},
																								"nativeSrc": "25468:74:13",
																								"nodeType": "YulFunctionCall",
																								"src": "25468:74:13"
																							},
																							"nativeSrc": "25468:74:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "25468:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25361:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "25361:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "25370:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "25370:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25358:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "25358:2:13"
																					},
																					"nativeSrc": "25358:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25358:19:13"
																				},
																				"nativeSrc": "25355:201:13",
																				"nodeType": "YulIf",
																				"src": "25355:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25576:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "25576:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "25590:1:13",
																											"nodeType": "YulLiteral",
																											"src": "25590:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "25593:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "25593:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "25586:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "25586:3:13"
																									},
																									"nativeSrc": "25586:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "25586:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "25602:1:13",
																									"nodeType": "YulLiteral",
																									"src": "25602:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "25582:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "25582:3:13"
																							},
																							"nativeSrc": "25582:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "25582:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25569:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "25569:6:13"
																					},
																					"nativeSrc": "25569:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25569:36:13"
																				},
																				"nativeSrc": "25569:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "25569:36:13"
																			}
																		]
																	},
																	"nativeSrc": "24952:663:13",
																	"nodeType": "YulCase",
																	"src": "24952:663:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24957:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24957:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "25632:234:13",
																		"nodeType": "YulBlock",
																		"src": "25632:234:13",
																		"statements": [
																			{
																				"nativeSrc": "25646:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25646:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25659:1:13",
																					"nodeType": "YulLiteral",
																					"src": "25659:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "25650:5:13",
																						"nodeType": "YulTypedName",
																						"src": "25650:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25695:67:13",
																					"nodeType": "YulBlock",
																					"src": "25695:67:13",
																					"statements": [
																						{
																							"nativeSrc": "25713:35:13",
																							"nodeType": "YulAssignment",
																							"src": "25713:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25732:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "25732:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25737:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "25737:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25728:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "25728:3:13"
																										},
																										"nativeSrc": "25728:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "25728:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25722:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "25722:5:13"
																								},
																								"nativeSrc": "25722:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "25722:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "25713:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "25713:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "25676:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "25676:6:13"
																				},
																				"nativeSrc": "25673:89:13",
																				"nodeType": "YulIf",
																				"src": "25673:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25782:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "25782:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "25841:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "25841:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "25848:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "25848:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "25788:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "25788:52:13"
																							},
																							"nativeSrc": "25788:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "25788:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25775:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "25775:6:13"
																					},
																					"nativeSrc": "25775:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25775:81:13"
																				},
																				"nativeSrc": "25775:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "25775:81:13"
																			}
																		]
																	},
																	"nativeSrc": "25624:242:13",
																	"nodeType": "YulCase",
																	"src": "25624:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24932:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24932:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24940:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24940:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24929:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24929:2:13"
																},
																"nativeSrc": "24929:14:13",
																"nodeType": "YulFunctionCall",
																"src": "24929:14:13"
															},
															"nativeSrc": "24922:944:13",
															"nodeType": "YulSwitch",
															"src": "24922:944:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "24527:1345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24608:4:13",
														"nodeType": "YulTypedName",
														"src": "24608:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "24614:3:13",
														"nodeType": "YulTypedName",
														"src": "24614:3:13",
														"type": ""
													}
												],
												"src": "24527:1345:13"
											},
											{
												"body": {
													"nativeSrc": "25924:88:13",
													"nodeType": "YulBlock",
													"src": "25924:88:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "25955:22:13",
																"nodeType": "YulBlock",
																"src": "25955:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25957:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "25957:16:13"
																			},
																			"nativeSrc": "25957:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "25957:18:13"
																		},
																		"nativeSrc": "25957:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "25957:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25940:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "25940:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "25951:1:13",
																				"nodeType": "YulLiteral",
																				"src": "25951:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "25947:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25947:3:13"
																		},
																		"nativeSrc": "25947:6:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25947:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "25937:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "25937:2:13"
																},
																"nativeSrc": "25937:17:13",
																"nodeType": "YulFunctionCall",
																"src": "25937:17:13"
															},
															"nativeSrc": "25934:43:13",
															"nodeType": "YulIf",
															"src": "25934:43:13"
														},
														{
															"nativeSrc": "25986:20:13",
															"nodeType": "YulAssignment",
															"src": "25986:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25997:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "25997:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26004:1:13",
																		"nodeType": "YulLiteral",
																		"src": "26004:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25993:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25993:3:13"
																},
																"nativeSrc": "25993:13:13",
																"nodeType": "YulFunctionCall",
																"src": "25993:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25986:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25986:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "25877:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25906:5:13",
														"nodeType": "YulTypedName",
														"src": "25906:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25916:3:13",
														"nodeType": "YulTypedName",
														"src": "25916:3:13",
														"type": ""
													}
												],
												"src": "25877:135:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_3945() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0100)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_3947() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x80)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_3948() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 64)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory_3952() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xe0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bytes_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IAllo_$2089__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := calldataload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, shl(5, _4)), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _1)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, abi_decode_bytes(add(add(_3, innerOffset), _2), dataEnd))\n            dst := add(dst, _2)\n        }\n        value1 := dst_1\n    }\n    function abi_encode_tuple_t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_Status_$2296__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 7)) { panic_error_0x21() }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_061c27735e8d4de427c1d79927697f5893e7c1ed55f494a77889279330b06ae6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"ARRAY MISMATCH\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"UNAUTHORIZED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_96a721d265006ec8b79a4f231d5b616559a7b3d181d752324c3a3c78630a14a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"NOT_INITIALIZED\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(array_1, 0x20), _1)\n        array := array_1\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_array_uint256_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_address_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_struct$_Project_$1653_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x0100) { revert(0, 0) }\n        let value := allocate_memory_3945()\n        mstore(value, mload(_2))\n        let offset_1 := mload(add(_2, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string_fromMemory(add(_2, offset_1), dataEnd))\n        mstore(add(value, 64), mload(add(_2, 64)))\n        mstore(add(value, 96), mload(add(_2, 96)))\n        mstore(add(value, 128), abi_decode_address_fromMemory(add(_2, 128)))\n        mstore(add(value, 160), mload(add(_2, 160)))\n        let offset_2 := mload(add(_2, 192))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 192), abi_decode_array_uint256_dyn_fromMemory(add(_2, offset_2), dataEnd))\n        let offset_3 := mload(add(_2, 224))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 224), abi_decode_array_address_dyn_fromMemory(add(_2, offset_3), dataEnd))\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e09022697c85a7a7440752a329f6477a74e3db5b046ff4459bbe8c9847e2790b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"recipient <> sender mis-match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d30e69c99980e9196594fc9e631f2a27d78e3e2bdb28ce5149b307d64a620f1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"budget <> remaining allocation m\")\n        mstore(add(headStart, 96), \"is-match\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0f639a352b68e6033960894fd239064f91f6227e67b30f35f71f3ed80642ad02__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"insufficient native token funds \")\n        mstore(add(headStart, 96), \"in pool \")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a110f67727518ca7b3a14aca804c17f793c5bfe7f295e1afb41af41d4b4c568b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"insufficient funds in pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_struct_Contributor_fromMemory(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0x80) { revert(0, 0) }\n        value := allocate_memory_3947()\n        mstore(value, mload(headStart))\n        mstore(add(value, 32), mload(add(headStart, 32)))\n        let value_1 := mload(add(headStart, 64))\n        validator_revert_address(value_1)\n        mstore(add(value, 64), value_1)\n        let offset := mload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(end, _2), 64) { revert(0, 0) }\n        let value_2 := allocate_memory_3948()\n        mstore(value_2, mload(_2))\n        let offset_1 := mload(add(_2, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value_2, 32), abi_decode_string_fromMemory(add(_2, offset_1), end))\n        mstore(add(value, 96), value_2)\n    }\n    function abi_decode_tuple_t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, _2)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            let _6 := add(_3, innerOffset)\n            let _7 := 0xe0\n            if slt(add(sub(dataEnd, _6), not(31)), _7)\n            {\n                let _8 := 0\n                revert(_8, _8)\n            }\n            let value := allocate_memory_3952()\n            mstore(value, mload(add(_6, _1)))\n            let _9 := 64\n            let offset_1 := mload(add(_6, _9))\n            if gt(offset_1, _2)\n            {\n                let _10 := 0\n                revert(_10, _10)\n            }\n            mstore(add(value, _1), abi_decode_struct_Contributor_fromMemory(add(add(_6, offset_1), _1), dataEnd))\n            let _11 := 96\n            mstore(add(value, _9), mload(add(_6, _11)))\n            let _12 := 128\n            mstore(add(value, _11), mload(add(_6, _12)))\n            let _13 := 160\n            mstore(add(value, _12), mload(add(_6, _13)))\n            let _14 := 192\n            mstore(add(value, _13), mload(add(_6, _14)))\n            mstore(add(value, _14), abi_decode_address_fromMemory(add(_6, _7)))\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ef1bb694c59caf41511e71fefbf8b79caf80d578a7846a1dc497f4d47758c0c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \" org admin only \")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_struct$_ProjectAllocation_$1658_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := allocate_memory_3948()\n        let value_1 := mload(headStart)\n        validator_revert_address(value_1)\n        mstore(value, value_1)\n        mstore(add(value, 32), mload(add(headStart, 32)))\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IRegistry_$2282_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_address_t_bytes32_t_uint256__to_t_uint256_t_address_t_uint256_t_address_t_bytes32_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_uint256_t_enum$_PayoutStatus_$1615__to_t_uint256_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        if iszero(lt(value1, 5)) { panic_error_0x21() }\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"116": [
									{
										"length": 32,
										"start": 2256
									},
									{
										"length": 32,
										"start": 2425
									}
								],
								"833": [
									{
										"length": 32,
										"start": 343
									},
									{
										"length": 32,
										"start": 1543
									}
								],
								"835": [
									{
										"length": 32,
										"start": 613
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4AB4BA42 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDF868ED3 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDF868ED3 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xEB11AF93 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xEDD146CC EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xEF2920FC EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xF5B0DFB7 EQ PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4AB4BA42 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x4D31D087 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xB2B878D0 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xDCC60128 EQ PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BBE0CAE GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x2BBE0CAE EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x38FFF2D0 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x41F44125 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x42FDA9C7 EQ PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA6F0EE9 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x15CC481E EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0x18F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1989 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH32 0x52455345525645445F4D5F415F44454C49564552595F53545241544547590000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x3C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x135 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DE PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC5 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1B99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x246 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x345 PUSH2 0x340 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA8 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1C54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6E JUMP JUMPDEST POP PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x123 PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A57 JUMP JUMPDEST PUSH2 0x5B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x3B6 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x3C1 DUP4 DUP4 DUP4 PUSH2 0x6A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D0 PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x3D8 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x3E2 DUP4 DUP4 PUSH2 0xC14 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x3E5 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD PUSH1 0x60 SWAP2 SWAP1 DUP2 EQ PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x82A4A482B2409A92A69A82A8869 PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x45A JUMPI PUSH2 0x45A PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x49F JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x478 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x541 JUMPI PUSH2 0x51C DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C2 JUMPI PUSH2 0x4C2 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4DC JUMPI PUSH2 0x4DC PUSH2 0x1CCD JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP1 DUP6 MSTORE DUP2 MSTORE PUSH1 0xB DUP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x52E JUMPI PUSH2 0x52E PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4A5 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x584 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x5BC PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x665 JUMP JUMPDEST PUSH2 0x5CE DUP3 DUP3 PUSH2 0xD42 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5DA PUSH2 0x5FC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5EC SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5F9 SWAP1 POP DUP2 DUP2 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x15539055551213D492569151 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SUB PUSH2 0x663 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1393D517D253925512505312569151 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC0E JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6C9 JUMPI PUSH2 0x6C9 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3BA94ED8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x740 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP PUSH2 0x755 DUP6 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726563697069656E74203C3E2073656E646572206D69732D6D61746368000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 ADD MLOAD SWAP1 POP DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x6 PUSH1 0x0 DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x7C5 JUMPI PUSH2 0x7C5 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x627564676574203C3E2072656D61696E696E6720616C6C6F636174696F6E206D PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xD2E65ADAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x437 JUMP JUMPDEST DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x6 PUSH1 0x0 DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x868 JUMPI PUSH2 0x868 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x89F SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADD PUSH2 0x95D JUMPI DUP2 PUSH1 0xA0 ADD MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE LT ISZERO PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E74206E617469766520746F6B656E2066756E647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x34B7103837B7B61 PUSH1 0xC5 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x437 JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9EC SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST LT ISZERO PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E647320696E20706F6F6C000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x52455345525645445F4D4152474152495F434F5245 PUSH1 0x58 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 PUSH4 0x95EA7B3 SWAP4 SWAP2 AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0xA9B SWAP2 PUSH1 0x4 ADD PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1FAE35D4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xBBA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2032 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xBC9 DUP4 DUP9 PUSH2 0x110F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP DUP4 SWAP3 PUSH2 0xBF6 SWAP1 DUP5 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SWAP1 SWAP8 ADD SWAP7 POP PUSH2 0x6AC SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC2B SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3BA94ED8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC9A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP PUSH2 0xCAF DUP6 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1037B9339030B236B4B71037B7363C9 PUSH1 0x85 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x215F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3BA94ED8 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xDCB SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP PUSH2 0xDE0 DUP5 DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xE8D JUMP JUMPDEST PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1037B9339030B236B4B71037B7363C9 PUSH1 0x85 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x437 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 DUP1 DUP6 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP8 MLOAD DUP4 AND DUP3 MSTORE PUSH1 0x7 DUP6 MSTORE DUP4 DUP3 KECCAK256 SLOAD DUP9 MLOAD SWAP1 SWAP4 AND DUP3 MSTORE SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH18 0x52455345525645445F414C4C4F5F434F5245 PUSH1 0x70 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0xEE7 SWAP2 PUSH1 0x4 ADD PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AB1BD53 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF8E SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x29E40D4B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP4 AND SWAP1 PUSH4 0x29E40D4B SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFDF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1003 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST DUP1 PUSH2 0x107A JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x559FF5E3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0xAB3FEBC6 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1056 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107A SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST DUP1 PUSH2 0x10F1 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xE6E1AE3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x39B86B8C SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F1 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST ISZERO PUSH2 0x1101 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x52455345525645445F4D4152474152495F434F5245 PUSH1 0x58 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xBF40FAC1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x60 SWAP3 PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xBF40FAC1 SWAP2 PUSH2 0x116F SWAP2 PUSH1 0x4 ADD PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x118C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11B0 SWAP2 SWAP1 PUSH2 0x1F4A JUMP JUMPDEST DUP6 MLOAD SWAP1 SWAP2 POP DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x11CE JUMPI PUSH2 0x11CE PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1768 JUMPI PUSH1 0x0 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x121A JUMPI PUSH2 0x121A PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0xA0 ADD MLOAD DUP6 PUSH2 0x1234 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP5 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3408E470 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x20 ADD MLOAD EQ PUSH2 0x1475 JUMPI PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x13C2 JUMPI PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP2 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0x40 SWAP3 DUP4 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD DUP5 DUP8 ADD MLOAD SWAP5 MLOAD PUSH4 0x60F71BF1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP7 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA4 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP7 AND SWAP2 PUSH4 0xC1EE37E2 SWAP2 PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x137A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x13B1 JUMPI PUSH2 0x13B1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP1 DUP2 ADD MLOAD PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x40 SWAP4 DUP5 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD DUP6 DUP8 ADD MLOAD SWAP6 MLOAD PUSH4 0x60F71BF1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA4 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP6 AND SWAP1 PUSH4 0xC1EE37E2 SWAP1 PUSH1 0xC4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1451 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139F SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST PUSH20 0xEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x14F1 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC DUP3 PUSH1 0xA0 ADD MLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14EB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x157C JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1556 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST POP JUMPDEST PUSH2 0x1584 PUSH2 0x1772 JUMP JUMPDEST DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1596 JUMPI PUSH2 0x1596 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x26192DF PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x4C325BE SWAP2 PUSH2 0x15D6 SWAP2 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x4 ADD PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1619 SWAP2 SWAP1 PUSH2 0x1F67 JUMP JUMPDEST POP DUP1 PUSH1 0x9 PUSH1 0x0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1631 JUMPI PUSH2 0x1631 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x16C3 SWAP2 SWAP1 PUSH2 0x2247 JUMP JUMPDEST POP POP POP POP PUSH1 0x40 DUP4 DUP2 ADD MLOAD PUSH1 0x6 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x7 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x8 DUP5 ADD SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x9 DUP5 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD PUSH1 0xA SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 DUP7 MLOAD DUP8 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1738 JUMPI PUSH2 0x1738 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP6 SSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE SWAP3 SWAP1 SWAP4 KECCAK256 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 POP PUSH2 0x11FD JUMP JUMPDEST POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 DUP2 SWAP1 PUSH1 0x0 PUSH2 0x1784 DUP4 PUSH2 0x2306 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xE0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C5 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1859 JUMPI PUSH2 0x1859 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x187A JUMPI PUSH2 0x187A PUSH2 0x178C JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x18BF PUSH2 0x18BA DUP4 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x1831 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x18E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1906 JUMPI DUP1 CALLDATALOAD PUSH2 0x18F9 DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x18E6 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x192A JUMPI PUSH2 0x192A PUSH2 0x178C JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1949 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1957 PUSH2 0x18BA DUP3 PUSH2 0x1911 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x199E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x19B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C1 DUP8 DUP4 DUP9 ADD PUSH2 0x1899 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19E4 DUP7 DUP3 DUP8 ADD PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x19F5 DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A1B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A03 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1A43 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A00 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A8C DUP6 DUP3 DUP7 ADD PUSH2 0x1938 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1A9D DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1108 DUP2 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AFB DUP7 DUP4 DUP8 ADD PUSH2 0x1899 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1B23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1B31 PUSH2 0x18BA DUP3 PUSH2 0x1861 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP10 DUP4 GT ISZERO PUSH2 0x1B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B88 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B7A DUP13 DUP10 DUP4 DUP10 ADD ADD PUSH2 0x1938 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x1B54 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1BE4 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1BB6 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C32 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1C0D JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x7 DUP4 LT PUSH2 0x1C68 JUMPI PUSH2 0x1C68 PUSH2 0x1C3E JUMP JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1C9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CAA DUP6 DUP3 DUP7 ADD PUSH2 0x1938 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E5 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1D2B PUSH2 0x18BA DUP3 PUSH2 0x1911 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1D40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D51 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A00 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1D64 DUP2 PUSH2 0x1884 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1D8A PUSH2 0x18BA DUP4 PUSH2 0x1861 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1DAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1906 JUMPI DUP1 MLOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1DB1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 PUSH2 0x1DE9 PUSH2 0x18BA DUP4 PUSH2 0x1861 JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP5 PUSH1 0x5 SHL DUP8 ADD ADD SWAP4 POP DUP7 DUP5 GT ISZERO PUSH2 0x1E0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1906 JUMPI DUP1 MLOAD PUSH2 0x1E23 DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1E10 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1E59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH2 0x100 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x1E6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E76 PUSH2 0x17A2 JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1E8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E98 DUP8 DUP3 DUP7 ADD PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1EBE PUSH1 0x80 DUP5 ADD PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1EDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EEB DUP8 DUP3 DUP7 ADD PUSH2 0x1D69 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x1F03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F0F DUP8 DUP3 DUP7 ADD PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E5 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1108 DUP2 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA3 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1FC1 DUP2 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1FE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x40 DUP3 DUP7 SUB SLT ISZERO PUSH2 0x1FF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FFC PUSH2 0x17ED JUMP JUMPDEST DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x2012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x201E DUP8 DUP3 DUP7 ADD PUSH2 0x1D0C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x60 DUP5 ADD MSTORE POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2045 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x205C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2070 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x207E PUSH2 0x18BA DUP3 PUSH2 0x1861 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP9 DUP4 GT ISZERO PUSH2 0x209D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2152 JUMPI DUP1 MLOAD DUP6 DUP2 GT ISZERO PUSH2 0x20B9 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP7 ADD PUSH1 0xE0 DUP2 DUP13 SUB PUSH1 0x1F NOT ADD DUP2 SGT ISZERO PUSH2 0x20D1 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x20D9 PUSH2 0x180F JUMP JUMPDEST DUP10 DUP4 ADD MLOAD DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP10 DUP2 GT ISZERO PUSH2 0x20F3 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2101 DUP16 DUP14 DUP4 DUP9 ADD ADD PUSH2 0x1F89 JUMP JUMPDEST DUP13 DUP5 ADD MSTORE POP PUSH1 0x60 DUP1 DUP6 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x80 SWAP2 POP DUP2 DUP6 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH1 0xA0 DUP1 DUP6 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0xC0 SWAP2 POP DUP2 DUP6 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x213F DUP4 DUP6 ADD PUSH2 0x1D59 JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP6 MSTORE POP POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x20A1 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2179 PUSH2 0x17ED JUMP JUMPDEST DUP3 MLOAD PUSH2 0x2184 DUP2 PUSH2 0x1884 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x21B0 JUMPI PUSH2 0x21B0 PUSH2 0x1C3E JUMP JUMPDEST DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x21D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3C1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2220 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x223F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x222C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x2260 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x2274 DUP2 PUSH2 0x226E DUP5 SLOAD PUSH2 0x21BD JUMP JUMPDEST DUP5 PUSH2 0x21F7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22A9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2291 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x223F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x22D8 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x22B9 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x22F6 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2318 JUMPI PUSH2 0x2318 PUSH2 0x1CE3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xA922810D036D6123DA454C079629C1BF CREATE LOG1 0xAD MSTORE 0xC1 DUP6 0xAA POP MLOAD SLOAD 0xB3 0xC2 CALL MUL PUSH0 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "773:9575:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10891:333:2;;;;;;;;;;-1:-1:-1;10891:333:2;;;;;:::i;:::-;;:::i;:::-;;2050:97:1;;;;;;;;;;-1:-1:-1;950:1:1;2050:97;;;4041:25:13;;;4029:2;4014:18;2050:97:1;;;;;;;;6873:88:2;;;;;;;;;;-1:-1:-1;6949:4:2;6873:88;;;-1:-1:-1;;;;;4255:32:13;;;4237:51;;4225:2;4210:18;6873:88:2;4077:217:13;1948:94:1;;;;;;;;;;-1:-1:-1;2029:4:1;;;;;;;;;;;;;;;;1948:94;;;;2029:4;1948:94;:::i;9586:354:2:-;;;;;;:::i;:::-;;:::i;7047:94::-;;;;;;;;;;-1:-1:-1;7127:6:2;;7047:94;;2565:161:1;;;;;;;;;;-1:-1:-1;2565:161:1;;;;;:::i;:::-;-1:-1:-1;;;;;2650:37:1;2626:11;2650:37;;;:25;:37;;;;;:44;;-1:-1:-1;;2650:44:1;2690:4;2650:44;;;;;;2690:4;2565:161;;;;6040:14:13;;6033:22;6015:41;;6003:2;5988:18;2565:161:1;5875:187:13;7235:102:2;;;;;;;;;;-1:-1:-1;7319:10:2;7235:102;;7432:110;;;;;;;;;;-1:-1:-1;7524:10:2;;7432:110;;12622:147;;;;;;;;;;-1:-1:-1;12622:147:2;;;;;:::i;:::-;;:::i;11568:724::-;;;;;;;;;;-1:-1:-1;11568:724:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2155:110:1:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;7678:103:2:-;;;;;;;;;;-1:-1:-1;7734:4:2;14765:10;;;7678:103;;7942:148;;;;;;;;;;-1:-1:-1;7942:148:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1839:101:1:-;;;;;;;;;;-1:-1:-1;1839:101:1;;;;;:::i;:::-;-1:-1:-1;1915:6:1;:16;1839:101;10266:224:2;;;;;;:::i;:::-;;:::i;8961:201::-;;;;;;;;;;-1:-1:-1;8961:201:2;;;;;:::i;:::-;;:::i;10891:333::-;5709:16;:14;:16::i;:::-;6610:23:::1;:21;:23::i;:::-;11116:42:::2;11128:13;11143:5;11150:7;11116:11;:42::i;:::-;10891:333:::0;;;:::o;9586:354::-;9746:19;5709:16;:14;:16::i;:::-;6610:23:::1;:21;:23::i;:::-;9848:34:::2;9867:5;9874:7;9848:18;:34::i;:::-;9834:48;;9893:39;9586:354:::0;;;;:::o;12622:147::-;12708:4;2544::1;12732:29:2;2442:115:1;11568:724:2;11793:20;;11951:12;;11727:22;;11793:20;11932:31;;11928:61;;11965:24;;-1:-1:-1;;;11965:24:2;;10264:2:13;11965:24:2;;;10246:21:13;10303:2;10283:18;;;10276:30;-1:-1:-1;;;10322:18:13;;;10315:44;10376:18;;11965:24:2;;;;;;;;11928:61;12002:30;12055:15;-1:-1:-1;;;;;12035:36:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;12035:36:2;;;;;;;;;;;;;;;;12002:69;;12087:9;12082:178;12102:15;12098:1;:19;12082:178;;;12148:38;12159:13;12173:1;12159:16;;;;;;;;:::i;:::-;;;;;;;12177:5;12183:1;12177:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;12177:8:2;-1:-1:-1;;;;;;9441:144:1;;;;;;;-1:-1:-1;;;;;9441:144:1;;;;;;;9535:34;;:20;:34;;;;;;;9441:144;;;;;9266:329;12148:38:2;12135:7;12143:1;12135:10;;;;;;;;:::i;:::-;;;;;;;;;;:51;12230:3;;12082:178;;;-1:-1:-1;12277:7:2;11568:724;-1:-1:-1;;;;11568:724:2:o;2155:110:1:-;2201:27;2248:8;2241:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2241:15:1;;;;;;;;;;;;;;;;;;;;;;;2155:110;:::o;7942:148:2:-;8023:6;;8049:33;9759:100:1;10266:224:2;5709:16;:14;:16::i;:::-;6610:23:::1;:21;:23::i;:::-;10416:25:::2;10426:5;10433:7;10416:9;:25::i;:::-;10266:224:::0;;:::o;8961:201::-;5709:16;:14;:16::i;:::-;9103:7:::1;9089:10;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;9121:33:2::1;::::0;-1:-1:-1;9146:7:2;9121:33;:::i:1;:::-;8961:201:::0;:::o;13051:114::-;13106:10;-1:-1:-1;;;;;13128:4:2;13106:27;;13102:55;;13135:22;;-1:-1:-1;;;13135:22:2;;11001:2:13;13135:22:2;;;10983:21:13;11040:2;11020:18;;;11013:30;-1:-1:-1;;;11059:18:13;;;11052:42;11111:18;;13135:22:2;10799:336:13;13102:55:2;13051:114::o;14039:109::-;14101:6;;14111:1;14101:11;14097:42;;14114:25;;-1:-1:-1;;;14114:25:2;;11342:2:13;14114:25:2;;;11324:21:13;11381:2;11361:18;;;11354:30;-1:-1:-1;;;11400:18:13;;;11393:45;11455:18;;14114:25:2;11140:339:13;5224:1494:1;5357:9;5353:1358;5376:13;:20;5372:1;:24;5353:1358;;;5417:23;5443:13;5457:1;5443:16;;;;;;;;:::i;:::-;;;;;;;5417:42;;5474:18;5505:15;5474:47;;5537:26;5566:8;-1:-1:-1;;;;;5566:29:1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5566:31:1;;;;;;;;;;;;:::i;:::-;5537:60;;5620:69;5630:7;5639:11;:22;;;5663:11;:25;;;5620:9;:69::i;:::-;5612:111;;;;-1:-1:-1;;;5612:111:1;;14978:2:13;5612:111:1;;;14960:21:13;15017:2;14997:18;;;14990:30;15056:31;15036:18;;;15029:59;15105:18;;5612:111:1;14776:353:13;5612:111:1;5740:13;5763:11;:26;;;5740:50;;5863:11;:18;;;5813:28;:46;5842:13;5856:1;5842:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5813:46:1;-1:-1:-1;;;;;5813:46:1;;;;;;;;;;;;;:68;;5805:121;;;;-1:-1:-1;;;5805:121:1;;15336:2:13;5805:121:1;;;15318:21:13;15375:2;15355:18;;;15348:30;15414:34;15394:18;;;15387:62;-1:-1:-1;;;15465:18:13;;;15458:38;15513:19;;5805:121:1;15134:404:13;5805:121:1;5993:11;:18;;;5943:28;:46;5972:13;5986:1;5972:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5943:46:1;-1:-1:-1;;;;;5943:46:1;;;;;;;;;;;;;:68;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;;;6031:25:1;;;6028:374;;6100:11;:18;;;6084:4;-1:-1:-1;;;;;6084:12:1;;:34;;6076:87;;;;-1:-1:-1;;;6076:87:1;;15878:2:13;6076:87:1;;;15860:21:13;15917:2;15897:18;;;15890:30;15956:34;15936:18;;;15929:62;-1:-1:-1;;;16007:18:13;;;16000:38;16055:19;;6076:87:1;15676:404:13;6076:87:1;6028:374;;;6251:18;;;;6225:22;;-1:-1:-1;;;6225:22:1;;-1:-1:-1;;;;;6242:4:1;4255:32:13;;6225:22:1;;;4237:51:13;6225:16:1;;;;;4210:18:13;;6225:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;6217:83;;;;-1:-1:-1;;;6217:83:1;;16476:2:13;6217:83:1;;;16458:21:13;16515:2;16495:18;;;16488:30;16554:28;16534:18;;;16527:56;16600:18;;6217:83:1;16274:350:13;6217:83:1;6334:8;;6354:10;;;;;;;;;;;-1:-1:-1;;;6354:10:1;;;;6334:31;;-1:-1:-1;;;6334:31:1;;-1:-1:-1;;;;;6319:14:1;;;;;;6334:8;;;:19;;:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6367:18;;;;6319:67;;-1:-1:-1;;;;;;6319:67:1;;;;;;;-1:-1:-1;;;;;17077:32:13;;;6319:67:1;;;17059:51:13;17126:18;;;17119:34;17032:18;;6319:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6028:374;6418:45;6466:8;-1:-1:-1;;;;;6466:29:1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6466:31:1;;;;;;;;;;;;:::i;:::-;6418:79;;6514:26;6542:18;6564:53;6581:18;6601:15;6564:16;:53::i;:::-;-1:-1:-1;;;;;6646:37:1;;;;;;:20;:37;;;;;:51;;6513:104;;-1:-1:-1;6513:104:1;;-1:-1:-1;6513:104:1;;6646:51;;6513:104;;6646:51;:::i;:::-;;;;-1:-1:-1;;5398:3:1;;;;;-1:-1:-1;5353:1358:1;;-1:-1:-1;;;;;;5353:1358:1;;;5224:1494;;;:::o;3335:487::-;3427:7;3446:23;3483:5;3472:28;;;;;;;;;;;;:::i;:::-;3446:54;;3512:18;3543:15;3512:47;;3570:26;3599:8;-1:-1:-1;;;;;3599:29:1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3599:31:1;;;;;;;;;;;;:::i;:::-;3570:60;;3650:69;3660:7;3669:11;:22;;;3693:11;:25;;;3650:9;:69::i;:::-;3642:98;;;;-1:-1:-1;;;3642:98:1;;20974:2:13;3642:98:1;;;20956:21:13;21013:2;20993:18;;;20986:30;-1:-1:-1;;;21032:18:13;;;21025:46;21088:18;;3642:98:1;20772:340:13;3642:98:1;-1:-1:-1;;3751:8:1;:30;;;;;;;-1:-1:-1;3751:30:1;;;;;;;;-1:-1:-1;;;;;;3751:30:1;-1:-1:-1;;;;;3751:30:1;;;;;;3335:487;-1:-1:-1;;;3335:487:1:o;4084:651::-;4178:36;4228:5;4217:38;;;;;;;;;;;;:::i;:::-;4178:77;;4266:18;4297:11;:19;;;4266:51;;4328:26;4357:8;-1:-1:-1;;;;;4357:29:1;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4357:31:1;;;;;;;;;;;;:::i;:::-;4328:60;;4409:69;4419:7;4428:11;:22;;;4452:11;:25;;;4409:9;:69::i;:::-;4401:98;;;;-1:-1:-1;;;4401:98:1;;20974:2:13;4401:98:1;;;20956:21:13;21013:2;20993:18;;;20986:30;-1:-1:-1;;;21032:18:13;;;21025:46;21088:18;;4401:98:1;20772:340:13;4401:98:1;4553:25;;;;;4530:19;;-1:-1:-1;;;;;4510:40:1;;;;;;;:19;:40;;;;;;;:68;;;;4707:19;;4685:42;;;;:21;:42;;;;;;4662:19;;4642:40;;;;;;;;;;;:85;;4685:42;4642:85;:::i;:::-;4619:19;;-1:-1:-1;;;;;4590:49:1;;;;;:28;:49;;;;;:137;;;;-1:-1:-1;;;;4084:651:1:o;9867:476::-;10012:8;;10032:7;;;;;;;;;;;-1:-1:-1;;;10032:7:1;;;;10012:28;;-1:-1:-1;;;10012:28:1;;9967:13;;;;-1:-1:-1;;;;;10012:8:1;;;;:19;;:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9993:48;;10052:22;10077:4;-1:-1:-1;;;;;10077:16:1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10110:36;;-1:-1:-1;;;10110:36:1;;;;;21993:25:13;;;-1:-1:-1;;;;;22054:32:13;;;22034:18;;;22027:60;10052:43:1;;-1:-1:-1;10110:18:1;;;;;;21966::13;;10110:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:88;;;-1:-1:-1;10164:34:1;;-1:-1:-1;;;10164:34:1;;;;;21993:25:13;;;-1:-1:-1;;;;;22054:32:13;;;22034:18;;;22027:60;10164:16:1;;;;;21966:18:13;;10164:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10110:160;;;-1:-1:-1;10216:54:1;;-1:-1:-1;;;10216:54:1;;;;;21993:25:13;;;-1:-1:-1;;;;;22054:32:13;;;22034:18;;;22027:60;10216:29:1;;;;;21966:18:13;;10216:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10107:203;;;10293:4;10286:11;;;;;;10107:203;10327:5;10320:12;;;;9867:476;;;;;;:::o;6726:2020::-;6929:8;;6949:10;;;;;;;;;;;-1:-1:-1;;;6949:10:1;;;;6929:31;;-1:-1:-1;;;6929:31:1;;6842:26;;6870:18;;;;-1:-1:-1;;;;;6929:8:1;;;;:19;;:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7058:25;;6901:60;;-1:-1:-1;7004:15:1;;-1:-1:-1;;;;;7044:40:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7044:40:1;;7033:51;;7099:9;7095:1603;7118:18;:25;7114:1;:29;7095:1603;;;7164:41;7208:18;7227:1;7208:21;;;;;;;;:::i;:::-;;;;;;;7164:65;;7258:17;:24;;;7244:38;;;;;:::i;:::-;;;7344:8;;;;;;;;;-1:-1:-1;;;;;7344:8:1;-1:-1:-1;;;;;7344:19:1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7301:17;:29;;;:39;;;:64;7298:1152;;4712:42:2;-1:-1:-1;;;;;7388:33:1;:17;:23;;;-1:-1:-1;;;;;7388:33:1;;7385:624;;7485:24;;;;7511:29;;;;;:39;;;;7552:23;;;;7603:36;;;;;7640:31;;;;7672:27;;;;7459:242;;-1:-1:-1;;;7459:242:1;;;;;22664:25:13;;;;-1:-1:-1;;;;;22763:15:13;;;22743:18;;;22736:43;22795:18;;;22788:34;;;22858:15;;;22838:18;;;22831:43;22890:19;;;22883:35;22934:19;;;22927:35;;;;7459:17:1;;;;;;22636:19:13;;7459:242:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7445:8;7454:1;7445:11;;;;;;;;:::i;:::-;;;;;;:256;;;;;7298:1152;;7385:624;7799:29;;;;;:39;;;;7840:23;;;;7865:24;;;;7891:36;;;;;7928:31;;;;7960:27;;;;7781:208;;-1:-1:-1;;;7781:208:1;;;;;22664:25:13;;;;-1:-1:-1;;;;;22763:15:13;;;22743:18;;;22736:43;22795:18;;;22788:34;;;;22858:15;;22838:18;;;22831:43;22890:19;;;22883:35;22934:19;;;22927:35;;;;7781:17:1;;;;;;22636:19:13;;7781:208:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7298:1152::-;4712:42:2;-1:-1:-1;;;;;8065:33:1;:17;:23;;;-1:-1:-1;;;;;8065:33:1;;8062:330;;8130:17;:29;;;:36;;;-1:-1:-1;;;;;8122:54:1;:80;8177:17;:24;;;8122:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8062:330;;;8275:23;;;;8309:29;;;;:36;;;;;8346:24;;;;8268:104;;-1:-1:-1;;;8268:104:1;;-1:-1:-1;;;;;17077:32:13;;;8268:104:1;;;17059:51:13;17126:18;;;17119:34;;;;8268:40:1;;;;;;17032:18:13;;8268:104:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8062:330;8424:10;:8;:10::i;:::-;8410:8;8419:1;8410:11;;;;;;;;:::i;:::-;;;;;;:24;;;;;7298:1152;8493:31;;;;8465:79;;-1:-1:-1;;;8465:79:1;;-1:-1:-1;;;;;8465:27:1;;;;;:79;;8493:31;8526:17;;8465:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8601:17;8561:24;:37;8586:8;8595:1;8586:11;;;;;;;;:::i;:::-;;;;;;;8561:37;;;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8561:57:1;;;;;-1:-1:-1;;;;;8561:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;8561:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8561:57:1;-1:-1:-1;;;;;8561:57:1;;;;;;8633:35;;-1:-1:-1;8633:35:1;;;;;;;;-1:-1:-1;8633:35:1;8674:11;;;;8683:1;;8674:11;;;;;;:::i;:::-;;;;;;;;;;;;8633:53;;;;;;;;-1:-1:-1;8633:53:1;;;;;;;;;;;;;;7145:3;;;;;-1:-1:-1;7095:1603:1;;;;8708:29;;6726:2020;;;;;:::o;8784:131::-;8858:5;;;;;;8822:14;8875:7;8858:5;8875:7;:::i;:::-;;;;;;8784:131;:::o;14:127:13:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:255;218:2;212:9;260:6;248:19;;-1:-1:-1;;;;;282:34:13;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:2;373:22;146:255;:::o;406:253::-;478:2;472:9;520:4;508:17;;-1:-1:-1;;;;;540:34:13;;576:22;;;537:62;534:88;;;602:18;;:::i;664:251::-;736:2;730:9;;;766:15;;-1:-1:-1;;;;;796:34:13;;832:22;;;793:62;790:88;;;858:18;;:::i;920:253::-;992:2;986:9;1034:4;1022:17;;-1:-1:-1;;;;;1054:34:13;;1090:22;;;1051:62;1048:88;;;1116:18;;:::i;1178:275::-;1249:2;1243:9;1314:2;1295:13;;-1:-1:-1;;1291:27:13;1279:40;;-1:-1:-1;;;;;1334:34:13;;1370:22;;;1331:62;1328:88;;;1396:18;;:::i;:::-;1432:2;1425:22;1178:275;;-1:-1:-1;1178:275:13:o;1458:183::-;1518:4;-1:-1:-1;;;;;1543:6:13;1540:30;1537:56;;;1573:18;;:::i;:::-;-1:-1:-1;1618:1:13;1614:14;1630:4;1610:25;;1458:183::o;1646:131::-;-1:-1:-1;;;;;1721:31:13;;1711:42;;1701:70;;1767:1;1764;1757:12;1782:743;1836:5;1889:3;1882:4;1874:6;1870:17;1866:27;1856:55;;1907:1;1904;1897:12;1856:55;1943:6;1930:20;1969:4;1993:60;2009:43;2049:2;2009:43;:::i;:::-;1993:60;:::i;:::-;2075:3;2099:2;2094:3;2087:15;2127:4;2122:3;2118:14;2111:21;;2184:4;2178:2;2175:1;2171:10;2163:6;2159:23;2155:34;2141:48;;2212:3;2204:6;2201:15;2198:35;;;2229:1;2226;2219:12;2198:35;2265:4;2257:6;2253:17;2279:217;2295:6;2290:3;2287:15;2279:217;;;2375:3;2362:17;2392:31;2417:5;2392:31;:::i;:::-;2436:18;;2474:12;;;;2312;;2279:217;;;-1:-1:-1;2514:5:13;1782:743;-1:-1:-1;;;;;;1782:743:13:o;2530:186::-;2578:4;-1:-1:-1;;;;;2603:6:13;2600:30;2597:56;;;2633:18;;:::i;:::-;-1:-1:-1;2699:2:13;2678:15;-1:-1:-1;;2674:29:13;2705:4;2670:40;;2530:186::o;2721:462::-;2763:5;2816:3;2809:4;2801:6;2797:17;2793:27;2783:55;;2834:1;2831;2824:12;2783:55;2870:6;2857:20;2901:48;2917:31;2945:2;2917:31;:::i;2901:48::-;2974:2;2965:7;2958:19;3020:3;3013:4;3008:2;3000:6;2996:15;2992:26;2989:35;2986:55;;;3037:1;3034;3027:12;2986:55;3102:2;3095:4;3087:6;3083:17;3076:4;3067:7;3063:18;3050:55;3150:1;3125:16;;;3143:4;3121:27;3114:38;;;;3129:7;2721:462;-1:-1:-1;;;2721:462:13:o;3188:702::-;3299:6;3307;3315;3368:2;3356:9;3347:7;3343:23;3339:32;3336:52;;;3384:1;3381;3374:12;3336:52;3424:9;3411:23;-1:-1:-1;;;;;3494:2:13;3486:6;3483:14;3480:34;;;3510:1;3507;3500:12;3480:34;3533:61;3586:7;3577:6;3566:9;3562:22;3533:61;:::i;:::-;3523:71;;3647:2;3636:9;3632:18;3619:32;3603:48;;3676:2;3666:8;3663:16;3660:36;;;3692:1;3689;3682:12;3660:36;;3715:51;3758:7;3747:8;3736:9;3732:24;3715:51;:::i;:::-;3705:61;;;3816:2;3805:9;3801:18;3788:32;3829:31;3854:5;3829:31;:::i;:::-;3879:5;3869:15;;;3188:702;;;;;:::o;4299:250::-;4384:1;4394:113;4408:6;4405:1;4402:13;4394:113;;;4484:11;;;4478:18;4465:11;;;4458:39;4430:2;4423:10;4394:113;;;-1:-1:-1;;4541:1:13;4523:16;;4516:27;4299:250::o;4554:396::-;4703:2;4692:9;4685:21;4666:4;4735:6;4729:13;4778:6;4773:2;4762:9;4758:18;4751:34;4794:79;4866:6;4861:2;4850:9;4846:18;4841:2;4833:6;4829:15;4794:79;:::i;:::-;4934:2;4913:15;-1:-1:-1;;4909:29:13;4894:45;;;;4941:2;4890:54;;4554:396;-1:-1:-1;;4554:396:13:o;4955:455::-;5032:6;5040;5093:2;5081:9;5072:7;5068:23;5064:32;5061:52;;;5109:1;5106;5099:12;5061:52;5149:9;5136:23;-1:-1:-1;;;;;5174:6:13;5171:30;5168:50;;;5214:1;5211;5204:12;5168:50;5237:49;5278:7;5269:6;5258:9;5254:22;5237:49;:::i;:::-;5227:59;;;5336:2;5325:9;5321:18;5308:32;5349:31;5374:5;5349:31;:::i;:::-;5399:5;5389:15;;;4955:455;;;;;:::o;5623:247::-;5682:6;5735:2;5723:9;5714:7;5710:23;5706:32;5703:52;;;5751:1;5748;5741:12;5703:52;5790:9;5777:23;5809:31;5834:5;5809:31;:::i;6249:1357::-;6376:6;6384;6437:2;6425:9;6416:7;6412:23;6408:32;6405:52;;;6453:1;6450;6443:12;6405:52;6493:9;6480:23;-1:-1:-1;;;;;6563:2:13;6555:6;6552:14;6549:34;;;6579:1;6576;6569:12;6549:34;6602:61;6655:7;6646:6;6635:9;6631:22;6602:61;:::i;:::-;6592:71;;6682:2;6672:12;;6737:2;6726:9;6722:18;6709:32;6766:2;6756:8;6753:16;6750:36;;;6782:1;6779;6772:12;6750:36;6805:24;;6860:4;6852:13;;6848:27;-1:-1:-1;6838:55:13;;6889:1;6886;6879:12;6838:55;6925:2;6912:16;6948:60;6964:43;7004:2;6964:43;:::i;6948:60::-;7042:15;;;7124:1;7120:10;;;;7112:19;;7108:28;;;7073:12;;;;7148:19;;;7145:39;;;7180:1;7177;7170:12;7145:39;7212:2;7208;7204:11;7224:352;7240:6;7235:3;7232:15;7224:352;;;7326:3;7313:17;7362:2;7349:11;7346:19;7343:109;;;7406:1;7435:2;7431;7424:14;7343:109;7477:56;7525:7;7520:2;7506:11;7502:2;7498:20;7494:29;7477:56;:::i;:::-;7465:69;;-1:-1:-1;7554:12:13;;;;7257;;7224:352;;;7228:3;7595:5;7585:15;;;;;;;;6249:1357;;;;;:::o;7611:826::-;7844:2;7896:21;;;7966:13;;7869:18;;;7988:22;;;7815:4;;7844:2;8029;;8047:18;;;;8088:15;;;7815:4;8131:280;8145:6;8142:1;8139:13;8131:280;;;8204:13;;8246:9;;-1:-1:-1;;;;;8242:35:13;8230:48;;8318:11;;8312:18;8298:12;;;8291:40;8351:12;;;;8386:15;;;;8274:1;8160:9;8131:280;;;-1:-1:-1;8428:3:13;;7611:826;-1:-1:-1;;;;;;;7611:826:13:o;8442:658::-;8613:2;8665:21;;;8735:13;;8638:18;;;8757:22;;;8584:4;;8613:2;8836:15;;;;8810:2;8795:18;;;8584:4;8879:195;8893:6;8890:1;8887:13;8879:195;;;8958:13;;-1:-1:-1;;;;;8954:39:13;8942:52;;9049:15;;;;9014:12;;;;8990:1;8908:9;8879:195;;;-1:-1:-1;9091:3:13;;8442:658;-1:-1:-1;;;;;;8442:658:13:o;9105:127::-;9166:10;9161:3;9157:20;9154:1;9147:31;9197:4;9194:1;9187:15;9221:4;9218:1;9211:15;9237:242;9380:2;9365:18;;9413:1;9402:13;;9392:47;;9419:18;;:::i;:::-;9448:25;;;9237:242;:::o;9484:388::-;9561:6;9569;9622:2;9610:9;9601:7;9597:23;9593:32;9590:52;;;9638:1;9635;9628:12;9590:52;9674:9;9661:23;9651:33;;9735:2;9724:9;9720:18;9707:32;-1:-1:-1;;;;;9754:6:13;9751:30;9748:50;;;9794:1;9791;9784:12;9748:50;9817:49;9858:7;9849:6;9838:9;9834:22;9817:49;:::i;:::-;9807:59;;;9484:388;;;;;:::o;9877:180::-;9936:6;9989:2;9977:9;9968:7;9964:23;9960:32;9957:52;;;10005:1;10002;9995:12;9957:52;-1:-1:-1;10028:23:13;;9877:180;-1:-1:-1;9877:180:13:o;10405:127::-;10466:10;10461:3;10457:20;10454:1;10447:31;10497:4;10494:1;10487:15;10521:4;10518:1;10511:15;10537:127;10598:10;10593:3;10589:20;10586:1;10579:31;10629:4;10626:1;10619:15;10653:4;10650:1;10643:15;10669:125;10734:9;;;10755:10;;;10752:36;;;10768:18;;:::i;11484:442::-;11538:5;11591:3;11584:4;11576:6;11572:17;11568:27;11558:55;;11609:1;11606;11599:12;11558:55;11638:6;11632:13;11669:48;11685:31;11713:2;11685:31;:::i;11669:48::-;11742:2;11733:7;11726:19;11788:3;11781:4;11776:2;11768:6;11764:15;11760:26;11757:35;11754:55;;;11805:1;11802;11795:12;11754:55;11818:77;11892:2;11885:4;11876:7;11872:18;11865:4;11857:6;11853:17;11818:77;:::i;:::-;11913:7;11484:442;-1:-1:-1;;;;11484:442:13:o;11931:138::-;12010:13;;12032:31;12010:13;12032:31;:::i;:::-;11931:138;;;:::o;12074:665::-;12139:5;12192:3;12185:4;12177:6;12173:17;12169:27;12159:55;;12210:1;12207;12200:12;12159:55;12239:6;12233:13;12265:4;12289:60;12305:43;12345:2;12305:43;:::i;12289:60::-;12371:3;12395:2;12390:3;12383:15;12423:4;12418:3;12414:14;12407:21;;12480:4;12474:2;12471:1;12467:10;12459:6;12455:23;12451:34;12437:48;;12508:3;12500:6;12497:15;12494:35;;;12525:1;12522;12515:12;12494:35;12561:4;12553:6;12549:17;12575:135;12591:6;12586:3;12583:15;12575:135;;;12657:10;;12645:23;;12688:12;;;;12608;;12575:135;;12744:740;12809:5;12862:3;12855:4;12847:6;12843:17;12839:27;12829:55;;12880:1;12877;12870:12;12829:55;12909:6;12903:13;12935:4;12959:60;12975:43;13015:2;12975:43;:::i;12959:60::-;13041:3;13065:2;13060:3;13053:15;13093:4;13088:3;13084:14;13077:21;;13150:4;13144:2;13141:1;13137:10;13129:6;13125:23;13121:34;13107:48;;13178:3;13170:6;13167:15;13164:35;;;13195:1;13192;13185:12;13164:35;13231:4;13223:6;13219:17;13245:210;13261:6;13256:3;13253:15;13245:210;;;13334:3;13328:10;13351:31;13376:5;13351:31;:::i;:::-;13395:18;;13433:12;;;;13278;;13245:210;;13489:1282;13584:6;13637:2;13625:9;13616:7;13612:23;13608:32;13605:52;;;13653:1;13650;13643:12;13605:52;13686:9;13680:16;-1:-1:-1;;;;;13756:2:13;13748:6;13745:14;13742:34;;;13772:1;13769;13762:12;13742:34;13795:22;;;;13851:6;13833:16;;;13829:29;13826:49;;;13871:1;13868;13861:12;13826:49;13897:22;;:::i;:::-;13948:2;13942:9;13935:5;13928:24;13991:2;13987;13983:11;13977:18;14020:2;14010:8;14007:16;14004:36;;;14036:1;14033;14026:12;14004:36;14072:56;14120:7;14109:8;14105:2;14101:17;14072:56;:::i;:::-;14067:2;14060:5;14056:14;14049:80;;14175:2;14171;14167:11;14161:18;14156:2;14149:5;14145:14;14138:42;14226:2;14222;14218:11;14212:18;14207:2;14200:5;14196:14;14189:42;14264:43;14302:3;14298:2;14294:12;14264:43;:::i;:::-;14258:3;14251:5;14247:15;14240:68;14355:3;14351:2;14347:12;14341:19;14335:3;14328:5;14324:15;14317:44;14400:3;14396:2;14392:12;14386:19;14430:2;14420:8;14417:16;14414:36;;;14446:1;14443;14436:12;14414:36;14483:67;14542:7;14531:8;14527:2;14523:17;14483:67;:::i;:::-;14477:3;14470:5;14466:15;14459:92;;14590:3;14586:2;14582:12;14576:19;14620:2;14610:8;14607:16;14604:36;;;14636:1;14633;14626:12;14604:36;14673:67;14732:7;14721:8;14717:2;14713:17;14673:67;:::i;:::-;14667:3;14656:15;;14649:92;-1:-1:-1;14660:5:13;13489:1282;-1:-1:-1;;;;;13489:1282:13:o;15543:128::-;15610:9;;;15631:11;;;15628:37;;;15645:18;;:::i;16085:184::-;16155:6;16208:2;16196:9;16187:7;16183:23;16179:32;16176:52;;;16224:1;16221;16214:12;16176:52;-1:-1:-1;16247:16:13;;16085:184;-1:-1:-1;16085:184:13:o;16629:251::-;16699:6;16752:2;16740:9;16731:7;16727:23;16723:32;16720:52;;;16768:1;16765;16758:12;16720:52;16800:9;16794:16;16819:31;16844:5;16819:31;:::i;17164:277::-;17231:6;17284:2;17272:9;17263:7;17259:23;17255:32;17252:52;;;17300:1;17297;17290:12;17252:52;17332:9;17326:16;17385:5;17378:13;17371:21;17364:5;17361:32;17351:60;;17407:1;17404;17397:12;17446:929;17515:5;17563:4;17551:9;17546:3;17542:19;17538:30;17535:50;;;17581:1;17578;17571:12;17535:50;17603:22;;:::i;:::-;17594:31;;17654:9;17648:16;17641:5;17634:31;17718:2;17707:9;17703:18;17697:25;17692:2;17685:5;17681:14;17674:49;17768:2;17757:9;17753:18;17747:25;17781:33;17806:7;17781:33;:::i;:::-;17841:2;17830:14;;17823:31;17898:2;17883:18;;17877:25;-1:-1:-1;;;;;17951:14:13;;;17948:34;;;17978:1;17975;17968:12;17948:34;18001:22;;;;18053:2;18039:12;;;18035:21;18032:41;;;18069:1;18066;18059:12;18032:41;18097:22;;:::i;:::-;18150:2;18144:9;18135:7;18128:26;18193:2;18189;18185:11;18179:18;18222:2;18212:8;18209:16;18206:36;;;18238:1;18235;18228:12;18206:36;18276:52;18324:3;18313:8;18309:2;18305:17;18276:52;:::i;:::-;18271:2;18258:16;;18251:78;-1:-1:-1;18356:2:13;18345:14;;18338:31;-1:-1:-1;18349:5:13;;17446:929;-1:-1:-1;;;17446:929:13:o;18380:2123::-;18509:6;18540:2;18583;18571:9;18562:7;18558:23;18554:32;18551:52;;;18599:1;18596;18589:12;18551:52;18632:9;18626:16;-1:-1:-1;;;;;18702:2:13;18694:6;18691:14;18688:34;;;18718:1;18715;18708:12;18688:34;18756:6;18745:9;18741:22;18731:32;;18801:7;18794:4;18790:2;18786:13;18782:27;18772:55;;18823:1;18820;18813:12;18772:55;18852:2;18846:9;18875:60;18891:43;18931:2;18891:43;:::i;18875:60::-;18969:15;;;19051:1;19047:10;;;;19039:19;;19035:28;;;19000:12;;;;19075:19;;;19072:39;;;19107:1;19104;19097:12;19072:39;19139:2;19135;19131:11;19151:1322;19167:6;19162:3;19159:15;19151:1322;;;19246:3;19240:10;19282:2;19269:11;19266:19;19263:109;;;19326:1;19355:2;19351;19344:14;19263:109;19395:20;;19438:4;19466:16;;;-1:-1:-1;;19462:30:13;19458:39;-1:-1:-1;19455:129:13;;;19538:1;19567:2;19563;19556:14;19455:129;19610:22;;:::i;:::-;19673:2;19669;19665:11;19659:18;19652:5;19645:33;19701:2;19746;19742;19738:11;19732:18;19779:2;19769:8;19766:16;19763:109;;;19824:1;19854:3;19849;19842:16;19763:109;19908:77;19977:7;19972:2;19961:8;19957:2;19953:17;19949:26;19908:77;:::i;:::-;19903:2;19896:5;19892:14;19885:101;;20010:2;20062:3;20058:2;20054:12;20048:19;20043:2;20036:5;20032:14;20025:43;20092:3;20081:14;;20146:3;20142:2;20138:12;20132:19;20126:3;20119:5;20115:15;20108:44;;20176:3;20230;20226:2;20222:12;20216:19;20210:3;20203:5;20199:15;20192:44;20260:3;20249:14;;20314:3;20310:2;20306:12;20300:19;20294:3;20287:5;20283:15;20276:44;;20357:42;20395:2;20391;20387:11;20357:42;:::i;:::-;20340:15;;;20333:67;20413:18;;-1:-1:-1;;20451:12:13;;;;19184;;19151:1322;;;-1:-1:-1;20492:5:13;18380:2123;-1:-1:-1;;;;;;;;18380:2123:13:o;21117:423::-;21222:6;21275:2;21263:9;21254:7;21250:23;21246:32;21243:52;;;21291:1;21288;21281:12;21243:52;21317:22;;:::i;:::-;21369:9;21363:16;21388:33;21413:7;21388:33;:::i;:::-;21430:22;;21505:2;21490:18;;;21484:25;21468:14;;;21461:49;;;;-1:-1:-1;21437:5:13;21117:423;-1:-1:-1;21117:423:13:o;22973:319::-;23162:25;;;23150:2;23135:18;;23217:1;23206:13;;23196:47;;23223:18;;:::i;:::-;23279:6;23274:2;23263:9;23259:18;23252:34;22973:319;;;;;:::o;23297:380::-;23376:1;23372:12;;;;23419;;;23440:61;;23494:4;23486:6;23482:17;23472:27;;23440:61;23547:2;23539:6;23536:14;23516:18;23513:38;23510:161;;23593:10;23588:3;23584:20;23581:1;23574:31;23628:4;23625:1;23618:15;23656:4;23653:1;23646:15;23510:161;;23297:380;;;:::o;23808:543::-;23910:2;23905:3;23902:11;23899:446;;;23946:1;23970:5;23967:1;23960:16;24014:4;24011:1;24001:18;24084:2;24072:10;24068:19;24065:1;24061:27;24055:4;24051:38;24120:4;24108:10;24105:20;24102:47;;;-1:-1:-1;24143:4:13;24102:47;24198:2;24193:3;24189:12;24186:1;24182:20;24176:4;24172:31;24162:41;;24253:82;24271:2;24264:5;24261:13;24253:82;;;24316:17;;;24297:1;24286:13;24253:82;;;24257:3;;;23808:543;;;:::o;24527:1345::-;24653:3;24647:10;-1:-1:-1;;;;;24672:6:13;24669:30;24666:56;;;24702:18;;:::i;:::-;24731:97;24821:6;24781:38;24813:4;24807:11;24781:38;:::i;:::-;24775:4;24731:97;:::i;:::-;24883:4;;24940:2;24929:14;;24957:1;24952:663;;;;25659:1;25676:6;25673:89;;;-1:-1:-1;25728:19:13;;;25722:26;25673:89;-1:-1:-1;;24484:1:13;24480:11;;;24476:24;24472:29;24462:40;24508:1;24504:11;;;24459:57;25775:81;;24922:944;;24952:663;23755:1;23748:14;;;23792:4;23779:18;;-1:-1:-1;;24988:20:13;;;25106:236;25120:7;25117:1;25114:14;25106:236;;;25209:19;;;25203:26;25188:42;;25301:27;;;;25269:1;25257:14;;;;25136:19;;25106:236;;;25110:3;25370:6;25361:7;25358:19;25355:201;;;25431:19;;;25425:26;-1:-1:-1;;25514:1:13;25510:14;;;25526:3;25506:24;25502:37;25498:42;25483:58;25468:74;;25355:201;-1:-1:-1;;;;;25602:1:13;25586:14;;;25582:22;25569:36;;-1:-1:-1;24527:1345:13:o;25877:135::-;25916:3;25937:17;;;25934:43;;25957:18;;:::i;:::-;-1:-1:-1;26004:1:13;25993:13;;25877:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1809000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAllocator(address)": "24734",
								"allocate(bytes,address)": "infinite",
								"distribute(address[],bytes,address)": "infinite",
								"getAllo()": "infinite",
								"getName()": "infinite",
								"getPayouts(address[],bytes[])": "infinite",
								"getPoolAmount()": "2304",
								"getPoolId()": "2326",
								"getProjects()": "infinite",
								"getRecipientStatus(address)": "472",
								"getStrategyId()": "infinite",
								"getVersion()": "216",
								"increasePoolAmount(uint256)": "infinite",
								"initialize(uint256,bytes)": "infinite",
								"isPoolActive()": "2326",
								"isValidAllocator(address)": "432",
								"registerRecipient(bytes,address)": "infinite"
							},
							"internal": {
								"_allocate(bytes memory,address)": "infinite",
								"_distribute(address[] memory,bytes memory,address)": "infinite",
								"_getPayout(address,bytes memory)": "infinite",
								"_getRecipientStatus(address)": "infinite",
								"_isValidAllocator(address)": "infinite",
								"_registerRecipient(bytes memory,address)": "infinite",
								"getIndex()": "24304",
								"onlyAdmin(address,uint256,bytes32)": "infinite",
								"payoutDirectives(struct PaymentDirective memory[] memory,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 8754,
									"end": 8774,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 8754,
									"end": 8774,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1645,
									"end": 1831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1645,
									"end": 1831,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5306,
									"end": 5325,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5306,
									"end": 5325,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5306,
									"end": 5325,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5306,
									"end": 5325,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1731,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1731,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1738,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1738,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1733,
									"end": 1738,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1738,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5359,
									"end": 5376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5349,
									"end": 5377,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5349,
									"end": 5377,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5359,
									"end": 5376,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5349,
									"end": 5377,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5349,
									"end": 5377,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5349,
									"end": 5377,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5349,
									"end": 5377,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 5336,
									"end": 5377,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 5336,
									"end": 5377,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1750,
									"end": 1758,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1750,
									"end": 1782,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"modifierDepth": 1,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"modifierDepth": 1,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1782,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1818,
									"end": 1822,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1803,
									"end": 1823,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 1803,
									"end": 1823,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 328,
									"end": 578,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 328,
									"end": 578,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 413,
									"end": 414,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 434,
									"end": 435,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 431,
									"end": 444,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 423,
									"end": 536,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 513,
									"end": 524,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 507,
									"end": 525,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 494,
									"end": 505,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 487,
									"end": 526,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 459,
									"end": 461,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 462,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 568,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 552,
									"end": 568,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 545,
									"end": 572,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 328,
									"end": 578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 681,
									"end": 687,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 697,
									"end": 703,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 752,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 738,
									"end": 747,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 729,
									"end": 736,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 725,
									"end": 748,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 721,
									"end": 753,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 718,
									"end": 770,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 718,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 718,
									"end": 770,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 766,
									"end": 767,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 764,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 756,
									"end": 768,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 718,
									"end": 770,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 718,
									"end": 770,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 789,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 819,
									"end": 828,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 789,
									"end": 829,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 789,
									"end": 829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 789,
									"end": 829,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 789,
									"end": 829,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 779,
									"end": 829,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 779,
									"end": 829,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 848,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 893,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 891,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 878,
									"end": 896,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 848,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 848,
									"end": 897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 848,
									"end": 897,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 848,
									"end": 897,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 941,
									"end": 943,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 926,
									"end": 944,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 920,
									"end": 945,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 838,
									"end": 897,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 838,
									"end": 897,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 994,
									"end": 1008,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 994,
									"end": 1008,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 994,
									"end": 1008,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1025,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 991,
									"end": 1025,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1021,
									"end": 1022,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1019,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1023,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1025,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 991,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1059,
									"end": 1065,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1048,
									"end": 1057,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1044,
									"end": 1066,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1034,
									"end": 1066,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1034,
									"end": 1066,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1104,
									"end": 1111,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1097,
									"end": 1101,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1089,
									"end": 1102,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1085,
									"end": 1112,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1075,
									"end": 1130,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1126,
									"end": 1127,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1123,
									"end": 1124,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1116,
									"end": 1128,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1130,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1075,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1149,
									"end": 1158,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1177,
									"end": 1179,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1173,
									"end": 1175,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1170,
									"end": 1180,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1167,
									"end": 1203,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1167,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1167,
									"end": 1203,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1183,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1183,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 1183,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1183,
									"end": 1201,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1183,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1258,
									"end": 1260,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1252,
									"end": 1261,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1226,
									"end": 1228,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1312,
									"end": 1325,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1312,
									"end": 1325,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1330,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1330,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1330,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1332,
									"end": 1334,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 1304,
									"end": 1335,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1300,
									"end": 1340,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1288,
									"end": 1341,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1288,
									"end": 1341,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1288,
									"end": 1341,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1376,
									"end": 1398,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1376,
									"end": 1398,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1376,
									"end": 1398,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1353,
									"end": 1399,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1350,
									"end": 1422,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1350,
									"end": 1422,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1350,
									"end": 1422,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1402,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1402,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 1402,
									"end": 1420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1402,
									"end": 1420,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1402,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1442,
									"end": 1452,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1438,
									"end": 1440,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1431,
									"end": 1453,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1479,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1469,
									"end": 1475,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1462,
									"end": 1480,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1524,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1512,
									"end": 1514,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1507,
									"end": 1509,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1503,
									"end": 1505,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1499,
									"end": 1510,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1495,
									"end": 1515,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1492,
									"end": 1525,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1489,
									"end": 1542,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1489,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1489,
									"end": 1542,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1535,
									"end": 1536,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1528,
									"end": 1540,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1489,
									"end": 1542,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1489,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1551,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1616,
									"end": 1618,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1611,
									"end": 1613,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1603,
									"end": 1609,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1599,
									"end": 1614,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1594,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1590,
									"end": 1592,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1586,
									"end": 1597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1551,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1551,
									"end": 1619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1551,
									"end": 1619,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1551,
									"end": 1619,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1644,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1644,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1644,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1644,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1644,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1644,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1644,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1628,
									"end": 1644,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 583,
									"end": 1650,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 583,
									"end": 1650,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1655,
									"end": 2051,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1655,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1804,
									"end": 1806,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1802,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1786,
									"end": 1807,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1771,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1843,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1874,
									"end": 1876,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1859,
									"end": 1877,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1852,
									"end": 1886,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1895,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1967,
									"end": 1973,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1962,
									"end": 1964,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1951,
									"end": 1960,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1947,
									"end": 1965,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1942,
									"end": 1944,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1934,
									"end": 1940,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1930,
									"end": 1945,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1895,
									"end": 1974,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1895,
									"end": 1974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1895,
									"end": 1974,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1895,
									"end": 1974,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2035,
									"end": 2037,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2014,
									"end": 2029,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2010,
									"end": 2039,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1995,
									"end": 2040,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1995,
									"end": 2040,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1995,
									"end": 2040,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1995,
									"end": 2040,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2042,
									"end": 2044,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1991,
									"end": 2045,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1991,
									"end": 2045,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1655,
									"end": 2051,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1655,
									"end": 2051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1655,
									"end": 2051,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 1655,
									"end": 2051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "835"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "ASSIGNIMMUTABLE",
									"source": 1,
									"value": "833"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 10348,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fa922810d036d6123da454c079629c1bff0a1ad52c185aa505154b3c2f1025f64736f6c63430008170033",
									".code": [
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "4AB4BA42"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "DF868ED3"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "DF868ED3"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "EB11AF93"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "EDD146CC"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "EF2920FC"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "F5B0DFB7"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "4AB4BA42"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "4D31D087"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "B2B878D0"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "DCC60128"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "2BBE0CAE"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "2BBE0CAE"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "38FFF2D0"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "41F44125"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "42FDA9C7"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "A6F0EE9"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "D8E6E2C"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "15CC481E"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "17D7DE7C"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 10348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 10891,
											"end": 11224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 10891,
											"end": 11224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4066,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4066,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4029,
											"end": 4031,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4014,
											"end": 4032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2147,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6949,
											"end": 6953,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "833"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4287,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4287,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4287,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4288,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4225,
											"end": 4227,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4210,
											"end": 4228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4077,
											"end": 4294,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "52455345525645445F4D5F415F44454C49564552595F53545241544547590000"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1948,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 9586,
											"end": 9940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 9586,
											"end": 9940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7127,
											"end": 7133,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7127,
											"end": 7133,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7047,
											"end": 7141,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2565,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2675,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2687,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2694,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6040,
											"end": 6054,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6055,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6056,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6056,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6003,
											"end": 6005,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5875,
											"end": 6062,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7319,
											"end": 7329,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "835"
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7235,
											"end": 7337,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7524,
											"end": 7534,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7524,
											"end": 7534,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7432,
											"end": 7542,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12622,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 12622,
											"end": 12769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 11568,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 11568,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11568,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2155,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2155,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7734,
											"end": 7738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14765,
											"end": 14775,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14765,
											"end": 14775,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 14765,
											"end": 14775,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 7678,
											"end": 7781,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 7942,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7942,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 7942,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1839,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1915,
											"end": 1931,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1940,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10266,
											"end": 10490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10266,
											"end": 10490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 8961,
											"end": 9162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8961,
											"end": 9162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5709,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5709,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6610,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6610,
											"end": 6633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11116,
											"end": 11158,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11128,
											"end": 11141,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11143,
											"end": 11148,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11150,
											"end": 11157,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11116,
											"end": 11127,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 11116,
											"end": 11158,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11116,
											"end": 11158,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11116,
											"end": 11158,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10891,
											"end": 11224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5709,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5709,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6610,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6610,
											"end": 6633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9882,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 9867,
											"end": 9872,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9874,
											"end": 9881,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9866,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 9848,
											"end": 9882,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9882,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 9848,
											"end": 9882,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9882,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9834,
											"end": 9882,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9893,
											"end": 9932,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 9893,
											"end": 9932,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 12622,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12708,
											"end": 12712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12732,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2442,
											"end": 2557,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11813,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11951,
											"end": 11963,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11951,
											"end": 11963,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11727,
											"end": 11749,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11727,
											"end": 11749,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11932,
											"end": 11963,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11932,
											"end": 11963,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11928,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 11928,
											"end": 11989,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10267,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10303,
											"end": 10305,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 10283,
											"end": 10301,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10283,
											"end": 10301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10283,
											"end": 10301,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10306,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82A4A482B2409A92A69A82A8869"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10322,
											"end": 10340,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10322,
											"end": 10340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10322,
											"end": 10340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10315,
											"end": 10359,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10376,
											"end": 10394,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10376,
											"end": 10394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11989,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11928,
											"end": 11989,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 11928,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12002,
											"end": 12032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12055,
											"end": 12070,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 12035,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12035,
											"end": 12071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12002,
											"end": 12071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12002,
											"end": 12071,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12087,
											"end": 12096,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12102,
											"end": 12117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12098,
											"end": 12117,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12148,
											"end": 12186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 12159,
											"end": 12172,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12173,
											"end": 12174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 12159,
											"end": 12175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12177,
											"end": 12182,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12183,
											"end": 12184,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 12177,
											"end": 12185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12177,
											"end": 12185,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9555,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9569,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9266,
											"end": 9595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12148,
											"end": 12186,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 12148,
											"end": 12186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12143,
											"end": 12144,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 12135,
											"end": 12145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12135,
											"end": 12186,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12230,
											"end": 12233,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12230,
											"end": 12233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 12082,
											"end": 12260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12277,
											"end": 12284,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11568,
											"end": 12292,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11568,
											"end": 12292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2248,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2155,
											"end": 2265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 7942,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8049,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 9759,
											"end": 9859,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5709,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5709,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6610,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6610,
											"end": 6633,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6610,
											"end": 6633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10416,
											"end": 10441,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10426,
											"end": 10431,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10433,
											"end": 10440,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10416,
											"end": 10425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10416,
											"end": 10441,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10416,
											"end": 10441,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10416,
											"end": 10441,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10490,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10266,
											"end": 10490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5709,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5709,
											"end": 5725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5709,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9103,
											"end": 9110,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9089,
											"end": 9099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 9089,
											"end": 9110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 9089,
											"end": 9110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9110,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9121,
											"end": 9154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9121,
											"end": 9154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9146,
											"end": 9153,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9121,
											"end": 9154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9121,
											"end": 9154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13051,
											"end": 13165,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 13051,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13106,
											"end": 13116,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13128,
											"end": 13132,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "833"
										},
										{
											"begin": 13106,
											"end": 13133,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13106,
											"end": 13133,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13102,
											"end": 13157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13102,
											"end": 13157,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11001,
											"end": 11003,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11042,
											"name": "PUSH",
											"source": 13,
											"value": "C"
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11020,
											"end": 11038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11013,
											"end": 11043,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15539055551213D492569151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11059,
											"end": 11077,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11059,
											"end": 11077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11059,
											"end": 11077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11052,
											"end": 11094,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11111,
											"end": 11129,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11111,
											"end": 11129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13135,
											"end": 13157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10799,
											"end": 11135,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13102,
											"end": 13157,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 13102,
											"end": 13157,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13051,
											"end": 13165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14039,
											"end": 14148,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 14039,
											"end": 14148,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14101,
											"end": 14107,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14101,
											"end": 14107,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14111,
											"end": 14112,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14101,
											"end": 14112,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14097,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 14097,
											"end": 14139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11342,
											"end": 11344,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11324,
											"end": 11345,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11381,
											"end": 11383,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 11361,
											"end": 11379,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11361,
											"end": 11379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11361,
											"end": 11379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11354,
											"end": 11384,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1393D517D253925512505312569151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11438,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11455,
											"end": 11473,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11455,
											"end": 11473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14114,
											"end": 14139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 11140,
											"end": 11479,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5224,
											"end": 6718,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5224,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5396,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5396,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5443,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5459,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5595,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5595,
											"name": "PUSH",
											"source": 1,
											"value": "3BA94ED8"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 5566,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5566,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5630,
											"end": 5637,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 5661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5661,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5663,
											"end": 5688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5688,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5620,
											"end": 5689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5689,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5620,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 14980,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15017,
											"end": 15019,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14997,
											"end": 15015,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14990,
											"end": 15020,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15056,
											"end": 15087,
											"name": "PUSH",
											"source": 13,
											"value": "726563697069656E74203C3E2073656E646572206D69732D6D61746368000000"
										},
										{
											"begin": 15036,
											"end": 15054,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15036,
											"end": 15054,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15036,
											"end": 15054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15029,
											"end": 15088,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15105,
											"end": 15123,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15105,
											"end": 15123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 14776,
											"end": 15129,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5612,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5841,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5855,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5856,
											"end": 5857,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5842,
											"end": 5858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5858,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5859,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5881,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15336,
											"end": 15338,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15318,
											"end": 15339,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15375,
											"end": 15377,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 15355,
											"end": 15373,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15355,
											"end": 15373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15355,
											"end": 15373,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15348,
											"end": 15378,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15414,
											"end": 15448,
											"name": "PUSH",
											"source": 13,
											"value": "627564676574203C3E2072656D61696E696E6720616C6C6F636174696F6E206D"
										},
										{
											"begin": 15394,
											"end": 15412,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15394,
											"end": 15412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15394,
											"end": 15412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15387,
											"end": 15449,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2E65ADAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15465,
											"end": 15483,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15465,
											"end": 15483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15465,
											"end": 15483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15458,
											"end": 15496,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15513,
											"end": 15532,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 15513,
											"end": 15532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 15134,
											"end": 15538,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5805,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5971,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 5985,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 5987,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5972,
											"end": 5988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5943,
											"end": 6011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6011,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6056,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6028,
											"end": 6402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6118,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6088,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "116"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6084,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6096,
											"name": "BALANCE",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6118,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15860,
											"end": 15881,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15917,
											"end": 15919,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 15897,
											"end": 15915,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15897,
											"end": 15915,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15897,
											"end": 15915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 15920,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15956,
											"end": 15990,
											"name": "PUSH",
											"source": 13,
											"value": "696E73756666696369656E74206E617469766520746F6B656E2066756E647320"
										},
										{
											"begin": 15936,
											"end": 15954,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15936,
											"end": 15954,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15936,
											"end": 15954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15929,
											"end": 15991,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B7103837B7B61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16007,
											"end": 16025,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16007,
											"end": 16025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16007,
											"end": 16025,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16000,
											"end": 16038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16055,
											"end": 16074,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 16055,
											"end": 16074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 15676,
											"end": 16080,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6076,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6028,
											"end": 6402,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6028,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6242,
											"end": 6246,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4255,
											"end": 4287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4287,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4288,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6241,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 6225,
											"end": 6241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4228,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4210,
											"end": 4228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6225,
											"end": 6247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6269,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6269,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16476,
											"end": 16478,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16458,
											"end": 16479,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16515,
											"end": 16517,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16495,
											"end": 16513,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16488,
											"end": 16518,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16554,
											"end": 16582,
											"name": "PUSH",
											"source": 13,
											"value": "696E73756666696369656E742066756E647320696E20706F6F6C000000000000"
										},
										{
											"begin": 16534,
											"end": 16552,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16534,
											"end": 16552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16527,
											"end": 16583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16600,
											"end": 16618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 16274,
											"end": 16624,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6342,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6334,
											"end": 6342,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52455345525645445F4D4152474152495F434F5245"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6364,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BF40FAC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6319,
											"end": 6333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6333,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6333,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6333,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6333,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 6319,
											"end": 6333,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6342,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6353,
											"name": "PUSH",
											"source": 1,
											"value": "BF40FAC1"
										},
										{
											"begin": 6334,
											"end": 6353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6334,
											"end": 6365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6334,
											"end": 6365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 6334,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17077,
											"end": 17109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17109,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17109,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17059,
											"end": 17110,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17126,
											"end": 17144,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17126,
											"end": 17144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17126,
											"end": 17144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17119,
											"end": 17153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17032,
											"end": 17050,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17032,
											"end": 17050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6319,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 6028,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6418,
											"end": 6463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6474,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6466,
											"end": 6495,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6495,
											"name": "PUSH",
											"source": 1,
											"value": "1FAE35D4"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 6466,
											"end": 6497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 6466,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6418,
											"end": 6497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6418,
											"end": 6497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6581,
											"end": 6599,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6616,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6564,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6617,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 6564,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6666,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6683,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6617,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6617,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6617,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6617,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6617,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6646,
											"end": 6697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6697,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5398,
											"end": 5401,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5398,
											"end": 5401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5401,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5401,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 6711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 6718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 6718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 6718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 6718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3822,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3335,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3427,
											"end": 3434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3483,
											"end": 3488,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3472,
											"end": 3500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3472,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3599,
											"end": 3628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3628,
											"name": "PUSH",
											"source": 1,
											"value": "3BA94ED8"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3599,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3599,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3660,
											"end": 3667,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3669,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3704,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3718,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3693,
											"end": 3718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3718,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3650,
											"end": 3719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3650,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20974,
											"end": 20976,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20956,
											"end": 20977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21013,
											"end": 21015,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 20993,
											"end": 21011,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 20993,
											"end": 21011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20993,
											"end": 21011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20986,
											"end": 21016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1037B9339030B236B4B71037B7363C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21032,
											"end": 21050,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 21032,
											"end": 21050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21032,
											"end": 21050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21025,
											"end": 21071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21088,
											"end": 21106,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 21088,
											"end": 21106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 20772,
											"end": 21112,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3642,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3751,
											"end": 3759,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3751,
											"end": 3781,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3822,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4084,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4084,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4217,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4217,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4297,
											"end": 4316,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4386,
											"name": "PUSH",
											"source": 1,
											"value": "3BA94ED8"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4357,
											"end": 4388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4357,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4419,
											"end": 4426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4477,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4452,
											"end": 4477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4409,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4409,
											"end": 4478,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4409,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20974,
											"end": 20976,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20956,
											"end": 20977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21013,
											"end": 21015,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 20993,
											"end": 21011,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 20993,
											"end": 21011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20993,
											"end": 21011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20986,
											"end": 21016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1037B9339030B236B4B71037B7363C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21032,
											"end": 21050,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 21032,
											"end": 21050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21032,
											"end": 21050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21025,
											"end": 21071,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21088,
											"end": 21106,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 21088,
											"end": 21106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 20772,
											"end": 21112,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4401,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4553,
											"end": 4578,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4549,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4550,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4578,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4578,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4578,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4726,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4726,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4706,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4681,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4662,
											"end": 4681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4682,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4642,
											"end": 4727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 4642,
											"end": 4727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4727,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4642,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4618,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4727,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4084,
											"end": 4735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 10012,
											"end": 10020,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52455345525645445F414C4C4F5F434F5245"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10039,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BF40FAC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9967,
											"end": 9980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9967,
											"end": 9980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9967,
											"end": 9980,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9967,
											"end": 9980,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10031,
											"name": "PUSH",
											"source": 1,
											"value": "BF40FAC1"
										},
										{
											"begin": 10012,
											"end": 10031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10012,
											"end": 10040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10012,
											"end": 10040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 10012,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9993,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9993,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10077,
											"end": 10093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10093,
											"name": "PUSH",
											"source": 1,
											"value": "5AB1BD53"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10077,
											"end": 10095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 10077,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29E40D4B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22027,
											"end": 22087,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10095,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "PUSH",
											"source": 1,
											"value": "29E40D4B"
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21966,
											"end": 21984,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 21966,
											"end": 21984,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10110,
											"end": 10146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 10110,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 10110,
											"end": 10198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "559FF5E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22027,
											"end": 22087,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "AB3FEBC6"
										},
										{
											"begin": 10164,
											"end": 10180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21966,
											"end": 21984,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 21966,
											"end": 21984,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10164,
											"end": 10198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 10164,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10110,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10110,
											"end": 10270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6E1AE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21993,
											"end": 22018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22054,
											"end": 22086,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22034,
											"end": 22052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22027,
											"end": 22087,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10216,
											"end": 10245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10245,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10245,
											"name": "PUSH",
											"source": 1,
											"value": "39B86B8C"
										},
										{
											"begin": 10216,
											"end": 10245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21966,
											"end": 21984,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 21966,
											"end": 21984,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10216,
											"end": 10270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10216,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10310,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10107,
											"end": 10310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10297,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10286,
											"end": 10297,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10286,
											"end": 10297,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10107,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10107,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10327,
											"end": 10332,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 10343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9867,
											"end": 10343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 8746,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 6726,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6937,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6929,
											"end": 6937,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52455345525645445F4D4152474152495F434F5245"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BF40FAC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6868,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6842,
											"end": 6868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6888,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6929,
											"end": 6937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6937,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6937,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6948,
											"name": "PUSH",
											"source": 1,
											"value": "BF40FAC1"
										},
										{
											"begin": 6929,
											"end": 6948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 6929,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6929,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6929,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7058,
											"end": 7083,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7058,
											"end": 7083,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7004,
											"end": 7019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 7044,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7033,
											"end": 7084,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7033,
											"end": 7084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7099,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7118,
											"end": 7136,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7118,
											"end": 7143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7114,
											"end": 7115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7114,
											"end": 7143,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7227,
											"end": 7228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7208,
											"end": 7229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7282,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7258,
											"end": 7282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7282,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7244,
											"end": 7282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7244,
											"end": 7282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7344,
											"end": 7352,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7344,
											"end": 7363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "3408E470"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7344,
											"end": 7365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 7344,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7301,
											"end": 7330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7330,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7301,
											"end": 7340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7365,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7298,
											"end": 8450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4754,
											"name": "PUSH",
											"source": 2,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7388,
											"end": 7421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7388,
											"end": 7405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7388,
											"end": 7411,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7388,
											"end": 7411,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7388,
											"end": 7411,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7388,
											"end": 7421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7388,
											"end": 7421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 7385,
											"end": 8009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7509,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7485,
											"end": 7509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7509,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7511,
											"end": 7540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7511,
											"end": 7550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7575,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7552,
											"end": 7575,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7575,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7603,
											"end": 7639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7671,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7640,
											"end": 7671,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7640,
											"end": 7671,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60F71BF1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22689,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 22664,
											"end": 22689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22664,
											"end": 22689,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 22664,
											"end": 22689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22763,
											"end": 22778,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22763,
											"end": 22778,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22763,
											"end": 22778,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 22743,
											"end": 22761,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22743,
											"end": 22761,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22743,
											"end": 22761,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22736,
											"end": 22779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22795,
											"end": 22813,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 22795,
											"end": 22813,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22795,
											"end": 22813,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22788,
											"end": 22822,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 22788,
											"end": 22822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22788,
											"end": 22822,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22858,
											"end": 22873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22858,
											"end": 22873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22858,
											"end": 22873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 22838,
											"end": 22856,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 22838,
											"end": 22856,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22838,
											"end": 22856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22831,
											"end": 22874,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22890,
											"end": 22909,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 22890,
											"end": 22909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22890,
											"end": 22909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22883,
											"end": 22918,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 22953,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 22934,
											"end": 22953,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 22953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 22962,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 22962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 22962,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 22962,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7459,
											"end": 7476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7476,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7476,
											"name": "PUSH",
											"source": 1,
											"value": "C1EE37E2"
										},
										{
											"begin": 7459,
											"end": 7476,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22636,
											"end": 22655,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 22636,
											"end": 22655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7459,
											"end": 7701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7459,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7454,
											"end": 7455,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 7445,
											"end": 7456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7298,
											"end": 8450,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7385,
											"end": 8009,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 7385,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7799,
											"end": 7828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7828,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7863,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7840,
											"end": 7863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7891,
											"end": 7927,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7927,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 7927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7959,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7928,
											"end": 7959,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7987,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7987,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7987,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7960,
											"end": 7987,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60F71BF1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22664,
											"end": 22689,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 22664,
											"end": 22689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22664,
											"end": 22689,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 22664,
											"end": 22689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22763,
											"end": 22778,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22763,
											"end": 22778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22763,
											"end": 22778,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 22743,
											"end": 22761,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 22743,
											"end": 22761,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 22743,
											"end": 22761,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22736,
											"end": 22779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22795,
											"end": 22813,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 22795,
											"end": 22813,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22795,
											"end": 22813,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22788,
											"end": 22822,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22788,
											"end": 22822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22788,
											"end": 22822,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22788,
											"end": 22822,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22858,
											"end": 22873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22858,
											"end": 22873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 22838,
											"end": 22856,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 22838,
											"end": 22856,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22838,
											"end": 22856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22831,
											"end": 22874,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22890,
											"end": 22909,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 22890,
											"end": 22909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22890,
											"end": 22909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22883,
											"end": 22918,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 22953,
											"name": "PUSH",
											"source": 13,
											"value": "A4"
										},
										{
											"begin": 22934,
											"end": 22953,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22934,
											"end": 22953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 22962,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 22962,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 22962,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22927,
											"end": 22962,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7781,
											"end": 7798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7798,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7798,
											"name": "PUSH",
											"source": 1,
											"value": "C1EE37E2"
										},
										{
											"begin": 7781,
											"end": 7798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22636,
											"end": 22655,
											"name": "PUSH",
											"source": 13,
											"value": "C4"
										},
										{
											"begin": 22636,
											"end": 22655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7781,
											"end": 7989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 7298,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4754,
											"name": "PUSH",
											"source": 2,
											"value": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8065,
											"end": 8098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8088,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8065,
											"end": 8088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8065,
											"end": 8098,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8065,
											"end": 8098,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 8062,
											"end": 8392,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8159,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8130,
											"end": 8159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8159,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8130,
											"end": 8166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8122,
											"end": 8176,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 8177,
											"end": 8194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8177,
											"end": 8201,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8177,
											"end": 8201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8177,
											"end": 8201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8062,
											"end": 8392,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8392,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 8062,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8298,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8275,
											"end": 8298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8298,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8309,
											"end": 8338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8345,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8309,
											"end": 8345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8345,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8370,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8346,
											"end": 8370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8370,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17077,
											"end": 17109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17109,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17077,
											"end": 17109,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17059,
											"end": 17110,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17126,
											"end": 17144,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17126,
											"end": 17144,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17126,
											"end": 17144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17119,
											"end": 17153,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17119,
											"end": 17153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17119,
											"end": 17153,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17119,
											"end": 17153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8268,
											"end": 8308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8308,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 8268,
											"end": 8308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17032,
											"end": 17050,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17032,
											"end": 17050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8268,
											"end": 8372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8062,
											"end": 8392,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8062,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8424,
											"end": 8434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8424,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 8424,
											"end": 8434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8424,
											"end": 8434,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8424,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8418,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8420,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8410,
											"end": 8421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7298,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8524,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8493,
											"end": 8524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "26192DF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8465,
											"end": 8492,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8492,
											"name": "PUSH",
											"source": 1,
											"value": "4C325BE"
										},
										{
											"begin": 8465,
											"end": 8492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8543,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8526,
											"end": 8543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 8465,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8465,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8465,
											"end": 8544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8585,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8586,
											"end": 8594,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8596,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8586,
											"end": 8597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8598,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 8561,
											"end": 8618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8618,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8633,
											"end": 8668,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8674,
											"end": 8685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8674,
											"end": 8685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8686,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 8698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8708,
											"end": 8737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 8746,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 8746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 8746,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 8746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 8746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 8746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8915,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 8784,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8863,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 8858,
											"end": 8863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8863,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8858,
											"end": 8863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8858,
											"end": 8863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 8875,
											"end": 8882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8784,
											"end": 8915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 146,
											"end": 401,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 146,
											"end": 401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 218,
											"end": 220,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 221,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 248,
											"end": 267,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 248,
											"end": 267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 282,
											"end": 316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 282,
											"end": 316,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 318,
											"end": 340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 318,
											"end": 340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 318,
											"end": 340,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 279,
											"end": 341,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 276,
											"end": 364,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 276,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 276,
											"end": 364,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 344,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 344,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 344,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 344,
											"end": 362,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 344,
											"end": 362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 380,
											"end": 382,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 146,
											"end": 401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 406,
											"end": 659,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 406,
											"end": 659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 481,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 520,
											"end": 524,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 508,
											"end": 525,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 508,
											"end": 525,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 540,
											"end": 574,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 540,
											"end": 574,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 576,
											"end": 598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 576,
											"end": 598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 576,
											"end": 598,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 537,
											"end": 599,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 534,
											"end": 622,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 534,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 534,
											"end": 622,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 602,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 602,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 602,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 664,
											"end": 915,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 664,
											"end": 915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 736,
											"end": 738,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 739,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 730,
											"end": 739,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 730,
											"end": 739,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 766,
											"end": 781,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 766,
											"end": 781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 796,
											"end": 830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 830,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 832,
											"end": 854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 832,
											"end": 854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 832,
											"end": 854,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 793,
											"end": 855,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 790,
											"end": 878,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 790,
											"end": 878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 790,
											"end": 878,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 858,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 858,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 858,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1173,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 920,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 992,
											"end": 994,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 995,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1034,
											"end": 1038,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1088,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1054,
											"end": 1088,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1112,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1113,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1136,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 1048,
											"end": 1136,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 1116,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1116,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1453,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1178,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1314,
											"end": 1316,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1295,
											"end": 1308,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1295,
											"end": 1308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1291,
											"end": 1318,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1319,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1368,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1370,
											"end": 1392,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1370,
											"end": 1392,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1370,
											"end": 1392,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1331,
											"end": 1393,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1416,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1328,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 1328,
											"end": 1416,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1396,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 1396,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1425,
											"end": 1447,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1453,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1178,
											"end": 1453,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1178,
											"end": 1453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1641,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 1458,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1540,
											"end": 1570,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1593,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 1537,
											"end": 1593,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 1573,
											"end": 1591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 1573,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1614,
											"end": 1628,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1630,
											"end": 1634,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1458,
											"end": 1641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1777,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1646,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1721,
											"end": 1752,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1711,
											"end": 1753,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1711,
											"end": 1753,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 1701,
											"end": 1771,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 2525,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 1782,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 1887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1893,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1856,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 1856,
											"end": 1911,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1856,
											"end": 1911,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 1856,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1930,
											"end": 1950,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 1973,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 2009,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2009,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 2009,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2009,
											"end": 2052,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 2009,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1993,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2053,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 1993,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2099,
											"end": 2101,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2097,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2087,
											"end": 2102,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2127,
											"end": 2131,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2125,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2132,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2188,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2178,
											"end": 2180,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2175,
											"end": 2176,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2171,
											"end": 2181,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2163,
											"end": 2169,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2182,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2155,
											"end": 2189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2189,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2212,
											"end": 2215,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2204,
											"end": 2210,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2201,
											"end": 2216,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2227,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 2198,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2269,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2270,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2290,
											"end": 2293,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2287,
											"end": 2302,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 2378,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2362,
											"end": 2379,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 2392,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2423,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 2392,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2436,
											"end": 2454,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2436,
											"end": 2454,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2486,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2486,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2486,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2312,
											"end": 2324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2279,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2514,
											"end": 2519,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 2525,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2716,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2530,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2578,
											"end": 2582,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2600,
											"end": 2630,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2653,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2597,
											"end": 2653,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 2633,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2699,
											"end": 2701,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2678,
											"end": 2693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2674,
											"end": 2703,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2709,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2670,
											"end": 2710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2670,
											"end": 2710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 3183,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 2721,
											"end": 3183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2819,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2797,
											"end": 2814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2793,
											"end": 2820,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2783,
											"end": 2838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2783,
											"end": 2838,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2783,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2857,
											"end": 2877,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2901,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 2917,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2901,
											"end": 2949,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2901,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2974,
											"end": 2976,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2965,
											"end": 2972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2958,
											"end": 2977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3013,
											"end": 3017,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3010,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2996,
											"end": 3011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 3024,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3041,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2986,
											"end": 3041,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3035,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3027,
											"end": 3039,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3041,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2986,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3099,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3093,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3100,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3076,
											"end": 3080,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3067,
											"end": 3074,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3105,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 3150,
											"end": 3151,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3125,
											"end": 3141,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3143,
											"end": 3147,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3121,
											"end": 3148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3152,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2721,
											"end": 3183,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2721,
											"end": 3183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3890,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 3188,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3366,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3371,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3382,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3336,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3434,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3494,
											"end": 3496,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3480,
											"end": 3514,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3480,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 3480,
											"end": 3514,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3511,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3508,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3500,
											"end": 3512,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3480,
											"end": 3514,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 3480,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3584,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 3533,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3594,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 3533,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3594,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3645,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3650,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3619,
											"end": 3651,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3603,
											"end": 3651,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3603,
											"end": 3651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3676,
											"end": 3678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3666,
											"end": 3674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3696,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 3660,
											"end": 3696,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3694,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3696,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 3660,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3660,
											"end": 3696,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3758,
											"end": 3765,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3732,
											"end": 3756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 3715,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3766,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3715,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3766,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3814,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3788,
											"end": 3820,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3829,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3854,
											"end": 3859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3829,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 3829,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3829,
											"end": 3860,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3829,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3884,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3884,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3890,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3890,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3890,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4549,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 4299,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4415,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4495,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4495,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4484,
											"end": 4495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4458,
											"end": 4497,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4432,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4423,
											"end": 4433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4394,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4541,
											"end": 4542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4516,
											"end": 4543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4950,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4554,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4705,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4685,
											"end": 4706,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4729,
											"end": 4742,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4778,
											"end": 4784,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4771,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4751,
											"end": 4785,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 4866,
											"end": 4872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4861,
											"end": 4863,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4859,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4846,
											"end": 4864,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4843,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4829,
											"end": 4844,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 4794,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4873,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 4794,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4934,
											"end": 4936,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4913,
											"end": 4928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 4938,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4939,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4939,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 4944,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 4944,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4950,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4554,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 5410,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4955,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5032,
											"end": 5038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5046,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5093,
											"end": 5095,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5081,
											"end": 5090,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5079,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5068,
											"end": 5091,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5064,
											"end": 5096,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5061,
											"end": 5113,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5061,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5061,
											"end": 5113,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5109,
											"end": 5110,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5061,
											"end": 5113,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5061,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5136,
											"end": 5159,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5174,
											"end": 5180,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5171,
											"end": 5201,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5214,
											"end": 5215,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5211,
											"end": 5212,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5216,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5168,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5237,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 5278,
											"end": 5285,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5269,
											"end": 5275,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5258,
											"end": 5267,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5254,
											"end": 5276,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5237,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 5237,
											"end": 5286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5237,
											"end": 5286,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 5237,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5286,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5227,
											"end": 5286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5340,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 5374,
											"end": 5379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5349,
											"end": 5380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5399,
											"end": 5404,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5389,
											"end": 5404,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5389,
											"end": 5404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5389,
											"end": 5404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 5410,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 5410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 5410,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 5410,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 5410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5870,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5623,
											"end": 5870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5737,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5723,
											"end": 5732,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5714,
											"end": 5721,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5710,
											"end": 5733,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5738,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5755,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 5703,
											"end": 5755,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5741,
											"end": 5753,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5703,
											"end": 5755,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 5703,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5800,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5809,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 5834,
											"end": 5839,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5809,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5809,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 7606,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 6249,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6439,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6425,
											"end": 6434,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6423,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6412,
											"end": 6435,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6408,
											"end": 6440,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6457,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 6405,
											"end": 6457,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6453,
											"end": 6454,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6451,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6443,
											"end": 6455,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6457,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 6405,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6503,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6563,
											"end": 6565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6561,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6552,
											"end": 6566,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6579,
											"end": 6580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6576,
											"end": 6577,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6581,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6602,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 6655,
											"end": 6662,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6646,
											"end": 6652,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6635,
											"end": 6644,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6631,
											"end": 6653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6602,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 6602,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6602,
											"end": 6663,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 6602,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6592,
											"end": 6663,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6592,
											"end": 6663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6682,
											"end": 6684,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6672,
											"end": 6684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6672,
											"end": 6684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6726,
											"end": 6735,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6722,
											"end": 6740,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6709,
											"end": 6741,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6768,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6756,
											"end": 6764,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6753,
											"end": 6769,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6750,
											"end": 6786,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6750,
											"end": 6786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 6750,
											"end": 6786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6782,
											"end": 6783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6780,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6772,
											"end": 6784,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6750,
											"end": 6786,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 6750,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6805,
											"end": 6829,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6805,
											"end": 6829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6852,
											"end": 6865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6852,
											"end": 6865,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6848,
											"end": 6875,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6889,
											"end": 6890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6912,
											"end": 6928,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6948,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 6964,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 7004,
											"end": 7006,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6964,
											"end": 7007,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 6964,
											"end": 7007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6948,
											"end": 7008,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 6948,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7042,
											"end": 7057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7042,
											"end": 7057,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7042,
											"end": 7057,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7125,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7120,
											"end": 7130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7120,
											"end": 7130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7120,
											"end": 7130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7120,
											"end": 7130,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7108,
											"end": 7136,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7108,
											"end": 7136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7108,
											"end": 7136,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7148,
											"end": 7167,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7148,
											"end": 7167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7148,
											"end": 7167,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7184,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 7145,
											"end": 7184,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7177,
											"end": 7178,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7182,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7184,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 7145,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7212,
											"end": 7214,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7208,
											"end": 7210,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7204,
											"end": 7215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7235,
											"end": 7238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7232,
											"end": 7247,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7329,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7364,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7346,
											"end": 7365,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7343,
											"end": 7452,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7343,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 7343,
											"end": 7452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7437,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7431,
											"end": 7433,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7424,
											"end": 7438,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7343,
											"end": 7452,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 7343,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7477,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 7525,
											"end": 7532,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 7520,
											"end": 7522,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7506,
											"end": 7517,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7502,
											"end": 7504,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7498,
											"end": 7518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7494,
											"end": 7523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7477,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 7477,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7477,
											"end": 7533,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 7477,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7534,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7534,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7269,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7257,
											"end": 7269,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 7224,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7228,
											"end": 7231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7595,
											"end": 7600,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 7606,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 7606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 7606,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 7606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 7606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6249,
											"end": 7606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7611,
											"end": 8437,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 7611,
											"end": 8437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7844,
											"end": 7846,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7917,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 7917,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 7917,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 7979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 7979,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7869,
											"end": 7887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7988,
											"end": 8010,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7988,
											"end": 8010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7988,
											"end": 8010,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7844,
											"end": 7846,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8029,
											"end": 8031,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8029,
											"end": 8031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8103,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8103,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7815,
											"end": 7819,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8145,
											"end": 8151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8142,
											"end": 8143,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8139,
											"end": 8152,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8204,
											"end": 8217,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8204,
											"end": 8217,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8255,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8246,
											"end": 8255,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8242,
											"end": 8277,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8230,
											"end": 8278,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8230,
											"end": 8278,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8318,
											"end": 8329,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8318,
											"end": 8329,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8330,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8310,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8310,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8310,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8291,
											"end": 8331,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8351,
											"end": 8363,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8351,
											"end": 8363,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8351,
											"end": 8363,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8351,
											"end": 8363,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8386,
											"end": 8401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8386,
											"end": 8401,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8386,
											"end": 8401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8386,
											"end": 8401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8160,
											"end": 8169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 8131,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8431,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8428,
											"end": 8431,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 7611,
											"end": 8437,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7611,
											"end": 8437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8442,
											"end": 9100,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 8442,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8613,
											"end": 8615,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8665,
											"end": 8686,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8665,
											"end": 8686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8665,
											"end": 8686,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8735,
											"end": 8748,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8735,
											"end": 8748,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8779,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8588,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8588,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8613,
											"end": 8615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8810,
											"end": 8812,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8795,
											"end": 8813,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8813,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8813,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8588,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8893,
											"end": 8899,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8890,
											"end": 8891,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8887,
											"end": 8900,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 8971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 8971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8954,
											"end": 8993,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8942,
											"end": 8994,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8942,
											"end": 8994,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9049,
											"end": 9064,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9026,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9026,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9014,
											"end": 9026,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8908,
											"end": 8917,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 8879,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9091,
											"end": 9094,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9091,
											"end": 9094,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 8442,
											"end": 9100,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8442,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9105,
											"end": 9232,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 9105,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9166,
											"end": 9176,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9161,
											"end": 9164,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9157,
											"end": 9177,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9154,
											"end": 9155,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9147,
											"end": 9178,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9197,
											"end": 9201,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 9194,
											"end": 9195,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9187,
											"end": 9202,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9221,
											"end": 9225,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9218,
											"end": 9219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9226,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9479,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 9237,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9380,
											"end": 9382,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9365,
											"end": 9383,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9365,
											"end": 9383,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9413,
											"end": 9414,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 9402,
											"end": 9415,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9415,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9392,
											"end": 9439,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 9392,
											"end": 9439,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 9419,
											"end": 9437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 9419,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9448,
											"end": 9473,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9448,
											"end": 9473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9448,
											"end": 9473,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9237,
											"end": 9479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9872,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 9484,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9561,
											"end": 9567,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9622,
											"end": 9624,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9610,
											"end": 9619,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9601,
											"end": 9608,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9620,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9593,
											"end": 9625,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9642,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 9590,
											"end": 9642,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9628,
											"end": 9640,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9642,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 9590,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9674,
											"end": 9683,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9661,
											"end": 9684,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9651,
											"end": 9684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9651,
											"end": 9684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9735,
											"end": 9737,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9724,
											"end": 9733,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9738,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9707,
											"end": 9739,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9754,
											"end": 9760,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9751,
											"end": 9781,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9748,
											"end": 9798,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9748,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 9748,
											"end": 9798,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9794,
											"end": 9795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9791,
											"end": 9792,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9796,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9748,
											"end": 9798,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 9748,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9817,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 9858,
											"end": 9865,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9849,
											"end": 9855,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9838,
											"end": 9847,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9834,
											"end": 9856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9817,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 9817,
											"end": 9866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9817,
											"end": 9866,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 9817,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9807,
											"end": 9866,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9807,
											"end": 9866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9807,
											"end": 9866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9872,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9872,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9877,
											"end": 10057,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 9877,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 9942,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9989,
											"end": 9991,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9977,
											"end": 9986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9968,
											"end": 9975,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9964,
											"end": 9987,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9960,
											"end": 9992,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9957,
											"end": 10009,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9957,
											"end": 10009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 9957,
											"end": 10009,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10005,
											"end": 10006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9995,
											"end": 10007,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9957,
											"end": 10009,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 9957,
											"end": 10009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10028,
											"end": 10051,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10028,
											"end": 10051,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9877,
											"end": 10057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9877,
											"end": 10057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 10405,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10466,
											"end": 10476,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10461,
											"end": 10464,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10457,
											"end": 10477,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10447,
											"end": 10478,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10497,
											"end": 10501,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 10494,
											"end": 10495,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10487,
											"end": 10502,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10521,
											"end": 10525,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10518,
											"end": 10519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10526,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10537,
											"end": 10664,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 10537,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10598,
											"end": 10608,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10593,
											"end": 10596,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10589,
											"end": 10609,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10586,
											"end": 10587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10579,
											"end": 10610,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10629,
											"end": 10633,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 10626,
											"end": 10627,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10619,
											"end": 10634,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 10657,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10650,
											"end": 10651,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10643,
											"end": 10658,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10669,
											"end": 10794,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 10669,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10755,
											"end": 10765,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10755,
											"end": 10765,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10755,
											"end": 10765,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10752,
											"end": 10788,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10752,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 10752,
											"end": 10788,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 10768,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 10768,
											"end": 10786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11484,
											"end": 11926,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 11484,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11538,
											"end": 11543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11584,
											"end": 11588,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11576,
											"end": 11582,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11572,
											"end": 11589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11568,
											"end": 11595,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11558,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 11558,
											"end": 11613,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11609,
											"end": 11610,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11606,
											"end": 11607,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11599,
											"end": 11611,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11558,
											"end": 11613,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 11558,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11638,
											"end": 11644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11632,
											"end": 11645,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11669,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 11685,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 11713,
											"end": 11715,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11685,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 11685,
											"end": 11716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11669,
											"end": 11717,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 11669,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11742,
											"end": 11744,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11733,
											"end": 11740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11726,
											"end": 11745,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11788,
											"end": 11791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11768,
											"end": 11774,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11760,
											"end": 11786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11757,
											"end": 11792,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 11809,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 11809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 11754,
											"end": 11809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11805,
											"end": 11806,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11802,
											"end": 11803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11795,
											"end": 11807,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 11809,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 11754,
											"end": 11809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11818,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 11892,
											"end": 11894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11885,
											"end": 11889,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11876,
											"end": 11883,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11872,
											"end": 11890,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11865,
											"end": 11869,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11857,
											"end": 11863,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11853,
											"end": 11870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11818,
											"end": 11895,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 11818,
											"end": 11895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11818,
											"end": 11895,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 11818,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11913,
											"end": 11920,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11484,
											"end": 11926,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11484,
											"end": 11926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11931,
											"end": 12069,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 11931,
											"end": 12069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12010,
											"end": 12023,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12010,
											"end": 12023,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 12010,
											"end": 12023,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 12032,
											"end": 12063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12032,
											"end": 12063,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 12032,
											"end": 12063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11931,
											"end": 12069,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11931,
											"end": 12069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11931,
											"end": 12069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11931,
											"end": 12069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12074,
											"end": 12739,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 12074,
											"end": 12739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12139,
											"end": 12144,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12192,
											"end": 12195,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12185,
											"end": 12189,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12177,
											"end": 12183,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12173,
											"end": 12190,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12169,
											"end": 12196,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12159,
											"end": 12214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 12159,
											"end": 12214,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12210,
											"end": 12211,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12207,
											"end": 12208,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12200,
											"end": 12212,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12159,
											"end": 12214,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 12159,
											"end": 12214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12239,
											"end": 12245,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12233,
											"end": 12246,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12265,
											"end": 12269,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12289,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 12305,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 12345,
											"end": 12347,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12305,
											"end": 12348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 12305,
											"end": 12348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12289,
											"end": 12349,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 12289,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12371,
											"end": 12374,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12395,
											"end": 12397,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12383,
											"end": 12398,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12423,
											"end": 12427,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12418,
											"end": 12421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 12428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12407,
											"end": 12428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12407,
											"end": 12428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12480,
											"end": 12484,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12474,
											"end": 12476,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12471,
											"end": 12472,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 12467,
											"end": 12477,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12459,
											"end": 12465,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12455,
											"end": 12478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12451,
											"end": 12485,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12437,
											"end": 12485,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12437,
											"end": 12485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12508,
											"end": 12511,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12500,
											"end": 12506,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12497,
											"end": 12512,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12529,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 12494,
											"end": 12529,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12525,
											"end": 12526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12522,
											"end": 12523,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12515,
											"end": 12527,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12529,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 12494,
											"end": 12529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12561,
											"end": 12565,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12549,
											"end": 12566,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12575,
											"end": 12710,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 12575,
											"end": 12710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12591,
											"end": 12597,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12586,
											"end": 12589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12583,
											"end": 12598,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12575,
											"end": 12710,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12575,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 12575,
											"end": 12710,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12667,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12667,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12645,
											"end": 12668,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12645,
											"end": 12668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12700,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12700,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12608,
											"end": 12620,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12608,
											"end": 12620,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12575,
											"end": 12710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 12575,
											"end": 12710,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12744,
											"end": 13484,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 12744,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12809,
											"end": 12814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12865,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12855,
											"end": 12859,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12847,
											"end": 12853,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12843,
											"end": 12860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12839,
											"end": 12866,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12829,
											"end": 12884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 12829,
											"end": 12884,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12880,
											"end": 12881,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12877,
											"end": 12878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12870,
											"end": 12882,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12829,
											"end": 12884,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 12829,
											"end": 12884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12909,
											"end": 12915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12903,
											"end": 12916,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12935,
											"end": 12939,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12959,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 12975,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 13015,
											"end": 13017,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12975,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 12975,
											"end": 13018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12959,
											"end": 13019,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 12959,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13041,
											"end": 13044,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13065,
											"end": 13067,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13060,
											"end": 13063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13053,
											"end": 13068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13093,
											"end": 13097,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13088,
											"end": 13091,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13084,
											"end": 13098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13150,
											"end": 13154,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13144,
											"end": 13146,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13141,
											"end": 13142,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 13137,
											"end": 13147,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13129,
											"end": 13135,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 13125,
											"end": 13148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13121,
											"end": 13155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13107,
											"end": 13155,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13107,
											"end": 13155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13178,
											"end": 13181,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13170,
											"end": 13176,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13164,
											"end": 13199,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13164,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 13164,
											"end": 13199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13195,
											"end": 13196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13192,
											"end": 13193,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13197,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13164,
											"end": 13199,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 13164,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13231,
											"end": 13235,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13223,
											"end": 13229,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13219,
											"end": 13236,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13245,
											"end": 13455,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 13245,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13261,
											"end": 13267,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13256,
											"end": 13259,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13253,
											"end": 13268,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13245,
											"end": 13455,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13245,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 13245,
											"end": 13455,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13334,
											"end": 13337,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13328,
											"end": 13338,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13351,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 13376,
											"end": 13381,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13351,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 13351,
											"end": 13382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13351,
											"end": 13382,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 13351,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13395,
											"end": 13413,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13395,
											"end": 13413,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13433,
											"end": 13445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13433,
											"end": 13445,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13433,
											"end": 13445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13433,
											"end": 13445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13245,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 13245,
											"end": 13455,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13489,
											"end": 14771,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 13489,
											"end": 14771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13584,
											"end": 13590,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13637,
											"end": 13639,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13625,
											"end": 13634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13616,
											"end": 13623,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13612,
											"end": 13635,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13608,
											"end": 13640,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 13605,
											"end": 13657,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13605,
											"end": 13657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 13605,
											"end": 13657,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13653,
											"end": 13654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13650,
											"end": 13651,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13643,
											"end": 13655,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13605,
											"end": 13657,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 13605,
											"end": 13657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13686,
											"end": 13695,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 13696,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13756,
											"end": 13758,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13748,
											"end": 13754,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13745,
											"end": 13759,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13742,
											"end": 13776,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13742,
											"end": 13776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 13742,
											"end": 13776,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13772,
											"end": 13773,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13769,
											"end": 13770,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13762,
											"end": 13774,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13742,
											"end": 13776,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 13742,
											"end": 13776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 13817,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 13817,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 13817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13795,
											"end": 13817,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13851,
											"end": 13857,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 13833,
											"end": 13849,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13833,
											"end": 13849,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13833,
											"end": 13849,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13829,
											"end": 13858,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 13826,
											"end": 13875,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13826,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 13826,
											"end": 13875,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13871,
											"end": 13872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13868,
											"end": 13869,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13861,
											"end": 13873,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13826,
											"end": 13875,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 13826,
											"end": 13875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13897,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 13897,
											"end": 13919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 13897,
											"end": 13919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13897,
											"end": 13919,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 13897,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13948,
											"end": 13950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13942,
											"end": 13951,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13935,
											"end": 13940,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13928,
											"end": 13952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13991,
											"end": 13993,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13987,
											"end": 13989,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13983,
											"end": 13994,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13977,
											"end": 13995,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14020,
											"end": 14022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14010,
											"end": 14018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14007,
											"end": 14023,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14004,
											"end": 14040,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14004,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14004,
											"end": 14040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14036,
											"end": 14037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14033,
											"end": 14034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14026,
											"end": 14038,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14004,
											"end": 14040,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 14004,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14072,
											"end": 14128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 14120,
											"end": 14127,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14109,
											"end": 14117,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14107,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14101,
											"end": 14118,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14072,
											"end": 14128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 14072,
											"end": 14128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14072,
											"end": 14128,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 14072,
											"end": 14128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14067,
											"end": 14069,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14060,
											"end": 14065,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14070,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14049,
											"end": 14129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14049,
											"end": 14129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14175,
											"end": 14177,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14171,
											"end": 14173,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14167,
											"end": 14178,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14156,
											"end": 14158,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14149,
											"end": 14154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14145,
											"end": 14159,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14138,
											"end": 14180,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14226,
											"end": 14228,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14222,
											"end": 14224,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14218,
											"end": 14229,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14212,
											"end": 14230,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14207,
											"end": 14209,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14200,
											"end": 14205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14196,
											"end": 14210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14231,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14264,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 14302,
											"end": 14305,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 14298,
											"end": 14300,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14294,
											"end": 14306,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14264,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 14264,
											"end": 14307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14264,
											"end": 14307,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 14264,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14261,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 14251,
											"end": 14256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14247,
											"end": 14262,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14240,
											"end": 14308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14355,
											"end": 14358,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 14351,
											"end": 14353,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14347,
											"end": 14359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14341,
											"end": 14360,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14335,
											"end": 14338,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 14328,
											"end": 14333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14324,
											"end": 14339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14317,
											"end": 14361,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14400,
											"end": 14403,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 14396,
											"end": 14398,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14392,
											"end": 14404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14386,
											"end": 14405,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14430,
											"end": 14432,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14420,
											"end": 14428,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14417,
											"end": 14433,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14450,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 14414,
											"end": 14450,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14446,
											"end": 14447,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14443,
											"end": 14444,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14436,
											"end": 14448,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14450,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 14414,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14483,
											"end": 14550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 14542,
											"end": 14549,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14531,
											"end": 14539,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14527,
											"end": 14529,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14523,
											"end": 14540,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14483,
											"end": 14550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 14483,
											"end": 14550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14483,
											"end": 14550,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 14483,
											"end": 14550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14477,
											"end": 14480,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 14470,
											"end": 14475,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14466,
											"end": 14481,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14459,
											"end": 14551,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14459,
											"end": 14551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14590,
											"end": 14593,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14586,
											"end": 14588,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14582,
											"end": 14594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14576,
											"end": 14595,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14620,
											"end": 14622,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14610,
											"end": 14618,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14623,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14604,
											"end": 14640,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14604,
											"end": 14640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 14604,
											"end": 14640,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14636,
											"end": 14637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14633,
											"end": 14634,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14626,
											"end": 14638,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14604,
											"end": 14640,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 14604,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 14732,
											"end": 14739,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14721,
											"end": 14729,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14717,
											"end": 14719,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14713,
											"end": 14730,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 14740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 14673,
											"end": 14740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 14740,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 14673,
											"end": 14740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14667,
											"end": 14670,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14656,
											"end": 14671,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14656,
											"end": 14671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14649,
											"end": 14741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14660,
											"end": 14665,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13489,
											"end": 14771,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13489,
											"end": 14771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15543,
											"end": 15671,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 15543,
											"end": 15671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15619,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15619,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15619,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15631,
											"end": 15642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15631,
											"end": 15642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15631,
											"end": 15642,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15628,
											"end": 15665,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15628,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 15628,
											"end": 15665,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15645,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 15645,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 15645,
											"end": 15663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16085,
											"end": 16269,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 16085,
											"end": 16269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16208,
											"end": 16210,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16196,
											"end": 16205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16187,
											"end": 16194,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16183,
											"end": 16206,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16179,
											"end": 16211,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16228,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 16176,
											"end": 16228,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16224,
											"end": 16225,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16221,
											"end": 16222,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16214,
											"end": 16226,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16228,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 16176,
											"end": 16228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16247,
											"end": 16263,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16247,
											"end": 16263,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16085,
											"end": 16269,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16085,
											"end": 16269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16629,
											"end": 16880,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 16629,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16699,
											"end": 16705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16752,
											"end": 16754,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16740,
											"end": 16749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16731,
											"end": 16738,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16727,
											"end": 16750,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16723,
											"end": 16755,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 16720,
											"end": 16772,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16720,
											"end": 16772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 16720,
											"end": 16772,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16768,
											"end": 16769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16765,
											"end": 16766,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16758,
											"end": 16770,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16720,
											"end": 16772,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 16720,
											"end": 16772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16800,
											"end": 16809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16794,
											"end": 16810,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16819,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 16844,
											"end": 16849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16819,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 16819,
											"end": 16850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17164,
											"end": 17441,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 17164,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17231,
											"end": 17237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17284,
											"end": 17286,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17272,
											"end": 17281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17263,
											"end": 17270,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17259,
											"end": 17282,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17255,
											"end": 17287,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17252,
											"end": 17304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17252,
											"end": 17304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 17252,
											"end": 17304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17300,
											"end": 17301,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17297,
											"end": 17298,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17290,
											"end": 17302,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17252,
											"end": 17304,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 17252,
											"end": 17304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17332,
											"end": 17341,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17326,
											"end": 17342,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17385,
											"end": 17390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17378,
											"end": 17391,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17371,
											"end": 17392,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17364,
											"end": 17369,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17361,
											"end": 17393,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 17351,
											"end": 17411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 17351,
											"end": 17411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17407,
											"end": 17408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17404,
											"end": 17405,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17397,
											"end": 17409,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17446,
											"end": 18375,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 17446,
											"end": 18375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17515,
											"end": 17520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17563,
											"end": 17567,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 17551,
											"end": 17560,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17546,
											"end": 17549,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17542,
											"end": 17561,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17538,
											"end": 17568,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17535,
											"end": 17585,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17535,
											"end": 17585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 17535,
											"end": 17585,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17581,
											"end": 17582,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17578,
											"end": 17579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17571,
											"end": 17583,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17535,
											"end": 17585,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 17535,
											"end": 17585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 17603,
											"end": 17625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 17603,
											"end": 17625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17625,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 17603,
											"end": 17625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17594,
											"end": 17625,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17594,
											"end": 17625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17654,
											"end": 17663,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17648,
											"end": 17664,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17641,
											"end": 17646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17634,
											"end": 17665,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17718,
											"end": 17720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17707,
											"end": 17716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17703,
											"end": 17721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17697,
											"end": 17722,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17692,
											"end": 17694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17685,
											"end": 17690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17681,
											"end": 17695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17674,
											"end": 17723,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17768,
											"end": 17770,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17757,
											"end": 17766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17753,
											"end": 17771,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17747,
											"end": 17772,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 17814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 17806,
											"end": 17813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 17814,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 17781,
											"end": 17814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17781,
											"end": 17814,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 17781,
											"end": 17814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17841,
											"end": 17843,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17830,
											"end": 17844,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17830,
											"end": 17844,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17823,
											"end": 17854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17898,
											"end": 17900,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17883,
											"end": 17901,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17883,
											"end": 17901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17877,
											"end": 17902,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17951,
											"end": 17965,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17951,
											"end": 17965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17951,
											"end": 17965,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 17948,
											"end": 17982,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17948,
											"end": 17982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 17948,
											"end": 17982,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17978,
											"end": 17979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17975,
											"end": 17976,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17968,
											"end": 17980,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17948,
											"end": 17982,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 17948,
											"end": 17982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18001,
											"end": 18023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18001,
											"end": 18023,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18001,
											"end": 18023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18001,
											"end": 18023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18053,
											"end": 18055,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18039,
											"end": 18051,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18039,
											"end": 18051,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 18039,
											"end": 18051,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18035,
											"end": 18056,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 18032,
											"end": 18073,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18032,
											"end": 18073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 18032,
											"end": 18073,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18069,
											"end": 18070,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18066,
											"end": 18067,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18059,
											"end": 18071,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18032,
											"end": 18073,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 18032,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18097,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 18097,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 18097,
											"end": 18119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18097,
											"end": 18119,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 18097,
											"end": 18119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18150,
											"end": 18152,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18144,
											"end": 18153,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18135,
											"end": 18142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18128,
											"end": 18154,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18193,
											"end": 18195,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18189,
											"end": 18191,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18185,
											"end": 18196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18179,
											"end": 18197,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18222,
											"end": 18224,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18212,
											"end": 18220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18209,
											"end": 18225,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18238,
											"end": 18239,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18235,
											"end": 18236,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18228,
											"end": 18240,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 18206,
											"end": 18242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18276,
											"end": 18328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 18324,
											"end": 18327,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 18313,
											"end": 18321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18309,
											"end": 18311,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 18305,
											"end": 18322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18276,
											"end": 18328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 18276,
											"end": 18328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18276,
											"end": 18328,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 18276,
											"end": 18328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18271,
											"end": 18273,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18258,
											"end": 18274,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18258,
											"end": 18274,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18251,
											"end": 18329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18356,
											"end": 18358,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 18345,
											"end": 18359,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18345,
											"end": 18359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18338,
											"end": 18369,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18349,
											"end": 18354,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18349,
											"end": 18354,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17446,
											"end": 18375,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17446,
											"end": 18375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18380,
											"end": 20503,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 18380,
											"end": 20503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18509,
											"end": 18515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18540,
											"end": 18542,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18583,
											"end": 18585,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18571,
											"end": 18580,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18562,
											"end": 18569,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18558,
											"end": 18581,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18554,
											"end": 18586,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 18551,
											"end": 18603,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18551,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 18551,
											"end": 18603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18599,
											"end": 18600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18596,
											"end": 18597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18551,
											"end": 18603,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 18551,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18632,
											"end": 18641,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18626,
											"end": 18642,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18702,
											"end": 18704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18694,
											"end": 18700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18691,
											"end": 18705,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 18688,
											"end": 18722,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18688,
											"end": 18722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 18688,
											"end": 18722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18718,
											"end": 18719,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18715,
											"end": 18716,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18708,
											"end": 18720,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18688,
											"end": 18722,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 18688,
											"end": 18722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18756,
											"end": 18762,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18745,
											"end": 18754,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18741,
											"end": 18763,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18731,
											"end": 18763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18731,
											"end": 18763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18801,
											"end": 18808,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18794,
											"end": 18798,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 18790,
											"end": 18792,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18786,
											"end": 18799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18782,
											"end": 18809,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 18772,
											"end": 18827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 18772,
											"end": 18827,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18823,
											"end": 18824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18820,
											"end": 18821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18813,
											"end": 18825,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18772,
											"end": 18827,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 18772,
											"end": 18827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18852,
											"end": 18854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18846,
											"end": 18855,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18875,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 18891,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 18931,
											"end": 18933,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18891,
											"end": 18934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 18891,
											"end": 18934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18875,
											"end": 18935,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 18875,
											"end": 18935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18969,
											"end": 18984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18969,
											"end": 18984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18969,
											"end": 18984,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19051,
											"end": 19052,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 19047,
											"end": 19057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19057,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19057,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 19039,
											"end": 19058,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19039,
											"end": 19058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19035,
											"end": 19063,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19035,
											"end": 19063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19035,
											"end": 19063,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19000,
											"end": 19012,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19000,
											"end": 19012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19000,
											"end": 19012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19000,
											"end": 19012,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19075,
											"end": 19094,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 19075,
											"end": 19094,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19075,
											"end": 19094,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19072,
											"end": 19111,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19072,
											"end": 19111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 19072,
											"end": 19111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19107,
											"end": 19108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19104,
											"end": 19105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19097,
											"end": 19109,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19072,
											"end": 19111,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 19072,
											"end": 19111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19139,
											"end": 19141,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19135,
											"end": 19137,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19131,
											"end": 19142,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19167,
											"end": 19173,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19162,
											"end": 19165,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19159,
											"end": 19174,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19246,
											"end": 19249,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19240,
											"end": 19250,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19282,
											"end": 19284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19269,
											"end": 19280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19266,
											"end": 19285,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19263,
											"end": 19372,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19263,
											"end": 19372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 19263,
											"end": 19372,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19326,
											"end": 19327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19355,
											"end": 19357,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19351,
											"end": 19353,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19344,
											"end": 19358,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19263,
											"end": 19372,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 19263,
											"end": 19372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19395,
											"end": 19415,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19395,
											"end": 19415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19438,
											"end": 19442,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 19466,
											"end": 19482,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19466,
											"end": 19482,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 19466,
											"end": 19482,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19462,
											"end": 19492,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19458,
											"end": 19497,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 19455,
											"end": 19584,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19455,
											"end": 19584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 19455,
											"end": 19584,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19538,
											"end": 19539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19567,
											"end": 19569,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19563,
											"end": 19565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19556,
											"end": 19570,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19455,
											"end": 19584,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 19455,
											"end": 19584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19610,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 19610,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 19610,
											"end": 19632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19610,
											"end": 19632,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 19610,
											"end": 19632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19673,
											"end": 19675,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 19669,
											"end": 19671,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19665,
											"end": 19676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19659,
											"end": 19677,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19652,
											"end": 19657,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19645,
											"end": 19678,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19701,
											"end": 19703,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19746,
											"end": 19748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19742,
											"end": 19744,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19738,
											"end": 19749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19732,
											"end": 19750,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19779,
											"end": 19781,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 19769,
											"end": 19777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19766,
											"end": 19782,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19763,
											"end": 19872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19763,
											"end": 19872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 19763,
											"end": 19872,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19824,
											"end": 19825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19854,
											"end": 19857,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19849,
											"end": 19852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19842,
											"end": 19858,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19763,
											"end": 19872,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 19763,
											"end": 19872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19908,
											"end": 19985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 19977,
											"end": 19984,
											"name": "DUP16",
											"source": 13
										},
										{
											"begin": 19972,
											"end": 19974,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 19961,
											"end": 19969,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19957,
											"end": 19959,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 19953,
											"end": 19970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19949,
											"end": 19975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19908,
											"end": 19985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 19908,
											"end": 19985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19908,
											"end": 19985,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 19908,
											"end": 19985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19903,
											"end": 19905,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 19896,
											"end": 19901,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19892,
											"end": 19906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19885,
											"end": 19986,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19885,
											"end": 19986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20010,
											"end": 20012,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 20062,
											"end": 20065,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20058,
											"end": 20060,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20054,
											"end": 20066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20048,
											"end": 20067,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20043,
											"end": 20045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20036,
											"end": 20041,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20032,
											"end": 20046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20025,
											"end": 20068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20092,
											"end": 20095,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 20081,
											"end": 20095,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20081,
											"end": 20095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20146,
											"end": 20149,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20142,
											"end": 20144,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20138,
											"end": 20150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20132,
											"end": 20151,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20126,
											"end": 20129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20119,
											"end": 20124,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20115,
											"end": 20130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20108,
											"end": 20152,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20108,
											"end": 20152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20176,
											"end": 20179,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 20230,
											"end": 20233,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20226,
											"end": 20228,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20222,
											"end": 20234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20216,
											"end": 20235,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20210,
											"end": 20213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20203,
											"end": 20208,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20199,
											"end": 20214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20192,
											"end": 20236,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20260,
											"end": 20263,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 20249,
											"end": 20263,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20249,
											"end": 20263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20314,
											"end": 20317,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20310,
											"end": 20312,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20306,
											"end": 20318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20300,
											"end": 20319,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20294,
											"end": 20297,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20287,
											"end": 20292,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20283,
											"end": 20298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20276,
											"end": 20320,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20276,
											"end": 20320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20357,
											"end": 20399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 20395,
											"end": 20397,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20391,
											"end": 20393,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20387,
											"end": 20398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20357,
											"end": 20399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 20357,
											"end": 20399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20357,
											"end": 20399,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 20357,
											"end": 20399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20340,
											"end": 20355,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20340,
											"end": 20355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20340,
											"end": 20355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20333,
											"end": 20400,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20413,
											"end": 20431,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20413,
											"end": 20431,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20451,
											"end": 20463,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20451,
											"end": 20463,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 20451,
											"end": 20463,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20451,
											"end": 20463,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19184,
											"end": 19196,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19184,
											"end": 19196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 19151,
											"end": 20473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20492,
											"end": 20497,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 18380,
											"end": 20503,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18380,
											"end": 20503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21117,
											"end": 21540,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 21117,
											"end": 21540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21222,
											"end": 21228,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21275,
											"end": 21277,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21263,
											"end": 21272,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21254,
											"end": 21261,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21250,
											"end": 21273,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21246,
											"end": 21278,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21243,
											"end": 21295,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21243,
											"end": 21295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 21243,
											"end": 21295,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21291,
											"end": 21292,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21288,
											"end": 21289,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21281,
											"end": 21293,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 21243,
											"end": 21295,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 21243,
											"end": 21295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21317,
											"end": 21339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 21317,
											"end": 21339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21317,
											"end": 21339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21317,
											"end": 21339,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 21317,
											"end": 21339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21369,
											"end": 21378,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21363,
											"end": 21379,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 21413,
											"end": 21420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 21388,
											"end": 21421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21388,
											"end": 21421,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 21388,
											"end": 21421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21430,
											"end": 21452,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21430,
											"end": 21452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21505,
											"end": 21507,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21490,
											"end": 21508,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21490,
											"end": 21508,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21490,
											"end": 21508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21484,
											"end": 21509,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21468,
											"end": 21482,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21468,
											"end": 21482,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21468,
											"end": 21482,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21461,
											"end": 21510,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21461,
											"end": 21510,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21461,
											"end": 21510,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21461,
											"end": 21510,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21437,
											"end": 21442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21117,
											"end": 21540,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21117,
											"end": 21540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22973,
											"end": 23292,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 22973,
											"end": 23292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23162,
											"end": 23187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23162,
											"end": 23187,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23162,
											"end": 23187,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23150,
											"end": 23152,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23135,
											"end": 23153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23135,
											"end": 23153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23217,
											"end": 23218,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 23206,
											"end": 23219,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23206,
											"end": 23219,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 23196,
											"end": 23243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 23196,
											"end": 23243,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23223,
											"end": 23241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 23223,
											"end": 23241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 23223,
											"end": 23241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23223,
											"end": 23241,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 23223,
											"end": 23241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23279,
											"end": 23285,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23274,
											"end": 23276,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23263,
											"end": 23272,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23259,
											"end": 23277,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23252,
											"end": 23286,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22973,
											"end": 23292,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22973,
											"end": 23292,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22973,
											"end": 23292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22973,
											"end": 23292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22973,
											"end": 23292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22973,
											"end": 23292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23297,
											"end": 23677,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 23297,
											"end": 23677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23376,
											"end": 23377,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 23372,
											"end": 23384,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23372,
											"end": 23384,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23372,
											"end": 23384,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 23372,
											"end": 23384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23419,
											"end": 23431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23419,
											"end": 23431,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23419,
											"end": 23431,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23440,
											"end": 23501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 23440,
											"end": 23501,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23494,
											"end": 23498,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 23486,
											"end": 23492,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23482,
											"end": 23499,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23472,
											"end": 23499,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23472,
											"end": 23499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23440,
											"end": 23501,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 23440,
											"end": 23501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23547,
											"end": 23549,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23539,
											"end": 23545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23536,
											"end": 23550,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 23516,
											"end": 23534,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23513,
											"end": 23551,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23510,
											"end": 23671,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 23510,
											"end": 23671,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23593,
											"end": 23603,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 23588,
											"end": 23591,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 23584,
											"end": 23604,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 23581,
											"end": 23582,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23574,
											"end": 23605,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23628,
											"end": 23632,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 23625,
											"end": 23626,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 23618,
											"end": 23633,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23656,
											"end": 23660,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 23653,
											"end": 23654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23646,
											"end": 23661,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 23510,
											"end": 23671,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 23510,
											"end": 23671,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23510,
											"end": 23671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23297,
											"end": 23677,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23297,
											"end": 23677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23297,
											"end": 23677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23297,
											"end": 23677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23808,
											"end": 24351,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 23808,
											"end": 24351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23910,
											"end": 23912,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 23905,
											"end": 23908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23902,
											"end": 23913,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 23899,
											"end": 24345,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 23899,
											"end": 24345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 23899,
											"end": 24345,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23946,
											"end": 23947,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23970,
											"end": 23975,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23967,
											"end": 23968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23960,
											"end": 23976,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24014,
											"end": 24018,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24011,
											"end": 24012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24001,
											"end": 24019,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 24084,
											"end": 24086,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24072,
											"end": 24082,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24068,
											"end": 24087,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24065,
											"end": 24066,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 24061,
											"end": 24088,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 24055,
											"end": 24059,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24051,
											"end": 24089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24120,
											"end": 24124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24108,
											"end": 24118,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24105,
											"end": 24125,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 24102,
											"end": 24149,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24102,
											"end": 24149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 24102,
											"end": 24149,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24143,
											"end": 24147,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 24102,
											"end": 24149,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 24102,
											"end": 24149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24198,
											"end": 24200,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24193,
											"end": 24196,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24189,
											"end": 24201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24186,
											"end": 24187,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 24182,
											"end": 24202,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 24176,
											"end": 24180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24172,
											"end": 24203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24162,
											"end": 24203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24162,
											"end": 24203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24271,
											"end": 24273,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24264,
											"end": 24269,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24261,
											"end": 24274,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24316,
											"end": 24333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24316,
											"end": 24333,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24316,
											"end": 24333,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 24297,
											"end": 24298,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24286,
											"end": 24299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 24253,
											"end": 24335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24257,
											"end": 24260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24257,
											"end": 24260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24257,
											"end": 24260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23808,
											"end": 24351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23808,
											"end": 24351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23808,
											"end": 24351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23808,
											"end": 24351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24527,
											"end": 25872,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 24527,
											"end": 25872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24653,
											"end": 24656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24647,
											"end": 24657,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24672,
											"end": 24678,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24669,
											"end": 24699,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 24666,
											"end": 24722,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24666,
											"end": 24722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 24666,
											"end": 24722,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24702,
											"end": 24720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 24702,
											"end": 24720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 24702,
											"end": 24720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24702,
											"end": 24720,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 24702,
											"end": 24720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 24821,
											"end": 24827,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 24813,
											"end": 24817,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24807,
											"end": 24818,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 24781,
											"end": 24819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 24781,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24775,
											"end": 24779,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 24731,
											"end": 24828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24731,
											"end": 24828,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 24731,
											"end": 24828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24883,
											"end": 24887,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24883,
											"end": 24887,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 24940,
											"end": 24942,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24929,
											"end": 24943,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24929,
											"end": 24943,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 24957,
											"end": 24958,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24952,
											"end": 25615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24952,
											"end": 25615,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 24952,
											"end": 25615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 24952,
											"end": 25615,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25659,
											"end": 25660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25676,
											"end": 25682,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 25762,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 25762,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 25673,
											"end": 25762,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25728,
											"end": 25747,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25728,
											"end": 25747,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25728,
											"end": 25747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25722,
											"end": 25748,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 25673,
											"end": 25762,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 25673,
											"end": 25762,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24484,
											"end": 24485,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 24480,
											"end": 24491,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24480,
											"end": 24491,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24480,
											"end": 24491,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 24476,
											"end": 24500,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 24472,
											"end": 24501,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 24462,
											"end": 24502,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 24508,
											"end": 24509,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24504,
											"end": 24515,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24504,
											"end": 24515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24504,
											"end": 24515,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 24459,
											"end": 24516,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 25775,
											"end": 25856,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25775,
											"end": 25856,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 24922,
											"end": 25866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 24922,
											"end": 25866,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24952,
											"end": 25615,
											"name": "tag",
											"source": 13,
											"value": "618"
										},
										{
											"begin": 24952,
											"end": 25615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23755,
											"end": 23756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23748,
											"end": 23762,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23748,
											"end": 23762,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23748,
											"end": 23762,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23792,
											"end": 23796,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23779,
											"end": 23797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23779,
											"end": 23797,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24988,
											"end": 25008,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24988,
											"end": 25008,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 24988,
											"end": 25008,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25120,
											"end": 25127,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25117,
											"end": 25118,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25114,
											"end": 25128,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25209,
											"end": 25228,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 25209,
											"end": 25228,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 25209,
											"end": 25228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25203,
											"end": 25229,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 25188,
											"end": 25230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25188,
											"end": 25230,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 25301,
											"end": 25328,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 25301,
											"end": 25328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25301,
											"end": 25328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25301,
											"end": 25328,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 25269,
											"end": 25270,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 25257,
											"end": 25271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25257,
											"end": 25271,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25257,
											"end": 25271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25257,
											"end": 25271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25136,
											"end": 25155,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25136,
											"end": 25155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "tag",
											"source": 13,
											"value": "624"
										},
										{
											"begin": 25106,
											"end": 25342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25110,
											"end": 25113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25370,
											"end": 25376,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25361,
											"end": 25368,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25358,
											"end": 25377,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 25355,
											"end": 25556,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25355,
											"end": 25556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 25355,
											"end": 25556,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25431,
											"end": 25450,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 25431,
											"end": 25450,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25431,
											"end": 25450,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25425,
											"end": 25451,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25514,
											"end": 25515,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 25510,
											"end": 25524,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 25510,
											"end": 25524,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25510,
											"end": 25524,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 25526,
											"end": 25529,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 25506,
											"end": 25530,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 25502,
											"end": 25539,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 25498,
											"end": 25540,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 25483,
											"end": 25541,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 25468,
											"end": 25542,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25468,
											"end": 25542,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 25355,
											"end": 25556,
											"name": "tag",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 25355,
											"end": 25556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25602,
											"end": 25603,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 25586,
											"end": 25600,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25586,
											"end": 25600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25586,
											"end": 25600,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 25582,
											"end": 25604,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25569,
											"end": 25605,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25569,
											"end": 25605,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24527,
											"end": 25872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25877,
											"end": 26012,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 25877,
											"end": 26012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25916,
											"end": 25919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25937,
											"end": 25954,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 25937,
											"end": 25954,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25937,
											"end": 25954,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25934,
											"end": 25977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 25934,
											"end": 25977,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25957,
											"end": 25975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 25957,
											"end": 25975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 25957,
											"end": 25975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25957,
											"end": 25975,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 25957,
											"end": 25975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26004,
											"end": 26005,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 25993,
											"end": 26006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25993,
											"end": 26006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25877,
											"end": 26012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/core/MADeliveryStrategy.sol",
								"contracts/core/MBaseStrategy.sol",
								"contracts/interfaces/IMProject.sol",
								"contracts/interfaces/IMRegister.sol",
								"contracts/interfaces/IMStructs.sol",
								"contracts/interfaces/IMVersion.sol",
								"contracts/interfaces/IMargari.sol",
								"contracts/interfaces/IMargariAlloStrategy.sol",
								"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol",
								"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol",
								"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol",
								"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAllocator(address)": "41f44125",
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getName()": "17d7de7c",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getProjects()": "dcc60128",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"getVersion()": "0d8e6e2c",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_register\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_allo\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"addAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_added\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjects\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_projects\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to get the payout summary for the recipients\",\"_recipientIds\":\"The IDs of the recipients\"},\"returns\":{\"_0\":\"The payout summary for the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Gets the payout summary for recipients.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/MADeliveryStrategy.sol\":\"MADeliveryStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/core/MADeliveryStrategy.sol\":{\"keccak256\":\"0xcdfa214593223bb726ac951533d46801da978eb78a36b228887a879c81f2984b\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://abcf8c7ae49b6914fbd5180dad68de55aa6b2bbe94404afd1866c7a03845a9dc\",\"dweb:/ipfs/QmcxhNyoZnnrgH8RJ2DboFTcQKSjiMjUrp5PoTgSLDnWpU\"]},\"contracts/core/MBaseStrategy.sol\":{\"keccak256\":\"0xbb4e1ed7dfd300d85f94aab8b0cfb36c33eaaf7bb08e19611a2f3afccfd8d6d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://35b49b9e40206776d2f1912709f7637e0e4d37e3a7fd16b52642fe6a867b5286\",\"dweb:/ipfs/QmaP39Rcm4Kv6SUvTs2Gu4ZWuvJ1wxT3jUSRuLuiNcvd8D\"]},\"contracts/interfaces/IMProject.sol\":{\"keccak256\":\"0xcdb6c282023b61d7d517262405bece16512fef6761686323819e1ff83f0f417a\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://84d68959cfa5bdee89c2d2718d3a04683b7cb722be37700028a3e8c6a4a6727f\",\"dweb:/ipfs/QmNeSawG529AypTfZ88HEH3YTtPL9e494j7RB5EwuQUYDq\"]},\"contracts/interfaces/IMRegister.sol\":{\"keccak256\":\"0xb2364f73159afc2d717b844ba80a4af54d36c0b3142c7cd540c939f595803714\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://a4ee87280b6bff80c38fead8a4b32f2851e2db85f88ef4fa8875c31b35a76df9\",\"dweb:/ipfs/QmbgtNAAMUp73yrtPJHvaCtz5XDRDUL9zmbijy3tK4x5rP\"]},\"contracts/interfaces/IMStructs.sol\":{\"keccak256\":\"0x6aab2b60204ec059c66fd8dd0d9324b01d45ef2243eb827abdd538caf758e51d\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://89355a76386c051d95338ebe189cac9d8b76d24980a5c31d25360ff744954f54\",\"dweb:/ipfs/QmbtvWefb3V4sZ7bp99hT5PwR2zaEGiCktQrwVyrbHYpEY\"]},\"contracts/interfaces/IMVersion.sol\":{\"keccak256\":\"0x313fc3f323f506bf67d81eae3962374edc282ea508cd2e6a0db7b09846e8e2bd\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://52208146c43535fac38a262eb7c808e3b25ef20432f9a945b24f1c9ad8c9ceea\",\"dweb:/ipfs/QmTbjtZSJDUhQnPVSigpii2GsbxqdPD1iWQ9f6vhbtqFN9\"]},\"contracts/interfaces/IMargari.sol\":{\"keccak256\":\"0x37011a68224d2b2924fc6f01caea0434a987e833d2febc873ec6673d20f9b4a4\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://699b7eaa0c598f337ed78c002befd6e691214e344d3bd6c5dc4ea88f1090acc2\",\"dweb:/ipfs/QmV5bF9edxQSDzQVmyHNK1umNEdoZTmxRy34xfpknHzapw\"]},\"contracts/interfaces/IMargariAlloStrategy.sol\":{\"keccak256\":\"0x373abb06e0064efcc0032121785da1f906bc1ae7cd7e843f142853ed77131731\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://3fca385e1ed1c9f19fa5bc6952ba913efda89166ec2706fb02779d3dadc7a53b\",\"dweb:/ipfs/QmbvWCie23ME3Ke2jkrsunvZZDUs1s7DRdnt4EhvQ2N96m\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xe1ccd35e03787b4a5beb138c336f5fc617f4885726bfdf3c82a642499e21f785\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7369418f7c7a3a16c38ed506ceb4e873f0806e6d68db2f682fa46b0e6070a74a\",\"dweb:/ipfs/Qmc4MiHqKdPdd7H7me8h5LsjHMt7KgAdUg5phGUTHMVsdc\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x96444e1b6b4adf69d76debd36a792d618e50a7902248ed84b6f07ccdab946893\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eee957068fb48e486d8186d61e8a002a85a0e0004763c88ba03552afb47f3bf5\",\"dweb:/ipfs/QmWawMnwBMj8tyUoL6RMJtXbeSZUqLUN7iFieQqgUnFYro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 837,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "poolActive",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 839,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "poolId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 841,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "poolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 119,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "register",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IMRegister)1546"
							},
							{
								"astId": 122,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "projects",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 126,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "allocationByProject",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 130,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "remainingAllocationByProject",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "totalPaidoutByProject",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 138,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "isValidAllocatorByAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 143,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "paymentDirectiveBySendId",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(PaymentDirective)1674_storage)"
							},
							{
								"astId": 148,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "sendIdsByRecipient",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 152,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "totalPaidByRecipient",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 721,
								"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
								"label": "index",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMRegister)1546": {
								"encoding": "inplace",
								"label": "contract IMRegister",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(PaymentDirective)1674_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct PaymentDirective)",
								"numberOfBytes": "32",
								"value": "t_struct(PaymentDirective)1674_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Contributor)1634_storage": {
								"encoding": "inplace",
								"label": "struct Contributor",
								"members": [
									{
										"astId": 1626,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1628,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "homeChain",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1630,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "wallet",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1633,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "metadata",
										"offset": 0,
										"slot": "3",
										"type": "t_struct(Metadata)2461_storage"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(Metadata)2461_storage": {
								"encoding": "inplace",
								"label": "struct Metadata",
								"members": [
									{
										"astId": 2457,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "protocol",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2460,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "pointer",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PaymentDirective)1674_storage": {
								"encoding": "inplace",
								"label": "struct PaymentDirective",
								"members": [
									{
										"astId": 1660,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1663,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "contributor",
										"offset": 0,
										"slot": "1",
										"type": "t_struct(Contributor)1634_storage"
									},
									{
										"astId": 1665,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "projectId",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1667,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "alloProfileId",
										"offset": 0,
										"slot": "7",
										"type": "t_bytes32"
									},
									{
										"astId": 1669,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "deliverableId",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 1671,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "amount",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 1673,
										"contract": "contracts/core/MADeliveryStrategy.sol:MADeliveryStrategy",
										"label": "erc20",
										"offset": 0,
										"slot": "10",
										"type": "t_address"
									}
								],
								"numberOfBytes": "352"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"allocate(bytes,address)": {
								"notice": "Allocates to a recipient."
							},
							"distribute(address[],bytes,address)": {
								"notice": "Distributes funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the 'Allo' contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Gets the payout summary for recipients."
							},
							"getPoolAmount()": {
								"notice": "Getter for the 'poolAmount'."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId'."
							},
							"getRecipientStatus(address)": {
								"notice": "Getter for the status of a recipient."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'strategyId'."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the pool amount."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "Getter for whether or not the pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks if the '_allocator' is a valid allocator."
							},
							"registerRecipient(bytes,address)": {
								"notice": "Registers a recipient."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/core/MBaseStrategy.sol": {
				"MBaseStrategy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"details": "This contract is implemented by all strategies.",
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"constructor": {
								"params": {
									"_allo": "Address of the Allo contract.",
									"_name": "Name of the strategy"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.",
								"params": {
									"_data": "The data to use to distribute to the recipients",
									"_recipientIds": "The IDs of the recipients",
									"_sender": "The address of the sender"
								}
							},
							"getAllo()": {
								"returns": {
									"_0": "The Allo contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to get the payout summary for the recipients",
									"_recipientIds": "The IDs of the recipients"
								},
								"returns": {
									"_0": "The payout summary for the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"details": "Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.",
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "'true' if the pool is active, otherwise 'false'"
								}
							},
							"isValidAllocator(address)": {
								"details": "How the allocator is determined is up to the strategy implementation.",
								"params": {
									"_allocator": "The address to check if it is a valid allocator for the strategy."
								},
								"returns": {
									"_0": "'true' if the address is a valid allocator, 'false' otherwise"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"recipientId": "The recipientId"
								}
							}
						},
						"title": "BaseStrategy Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"This contract is implemented by all strategies.\",\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"constructor\":{\"params\":{\"_allo\":\"Address of the Allo contract.\",\"_name\":\"Name of the strategy\"}},\"distribute(address[],bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can      call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to distribute to the recipients\",\"_recipientIds\":\"The IDs of the recipients\",\"_sender\":\"The address of the sender\"}},\"getAllo()\":{\"returns\":{\"_0\":\"The Allo contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to get the payout summary for the recipients\",\"_recipientIds\":\"The IDs of the recipients\"},\"returns\":{\"_0\":\"The payout summary for the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"details\":\"Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\",\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"'true' if the pool is active, otherwise 'false'\"}},\"isValidAllocator(address)\":{\"details\":\"How the allocator is determined is up to the strategy implementation.\",\"params\":{\"_allocator\":\"The address to check if it is a valid allocator for the strategy.\"},\"returns\":{\"_0\":\"'true' if the address is a valid allocator, 'false' otherwise\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the      strategy implementation. Only 'Allo' contract can call this when it is initialized.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"recipientId\":\"The recipientId\"}}},\"title\":\"BaseStrategy Contract\",\"version\":1},\"userdoc\":{\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"allocate(bytes,address)\":{\"notice\":\"Allocates to a recipient.\"},\"constructor\":{\"notice\":\"Constructor to set the Allo contract and \\\"strategyId'.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"Distributes funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the 'Allo' contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Gets the payout summary for recipients.\"},\"getPoolAmount()\":{\"notice\":\"Getter for the 'poolAmount'.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId'.\"},\"getRecipientStatus(address)\":{\"notice\":\"Getter for the status of a recipient.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'strategyId'.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the pool amount.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"Getter for whether or not the pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks if the '_allocator' is a valid allocator.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"Registers a recipient.\"}},\"notice\":\"This contract is the base contract for all strategies\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/MBaseStrategy.sol\":\"MBaseStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/MBaseStrategy.sol\":{\"keccak256\":\"0xbb4e1ed7dfd300d85f94aab8b0cfb36c33eaaf7bb08e19611a2f3afccfd8d6d8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://35b49b9e40206776d2f1912709f7637e0e4d37e3a7fd16b52642fe6a867b5286\",\"dweb:/ipfs/QmaP39Rcm4Kv6SUvTs2Gu4ZWuvJ1wxT3jUSRuLuiNcvd8D\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xe1ccd35e03787b4a5beb138c336f5fc617f4885726bfdf3c82a642499e21f785\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7369418f7c7a3a16c38ed506ceb4e873f0806e6d68db2f682fa46b0e6070a74a\",\"dweb:/ipfs/Qmc4MiHqKdPdd7H7me8h5LsjHMt7KgAdUg5phGUTHMVsdc\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x96444e1b6b4adf69d76debd36a792d618e50a7902248ed84b6f07ccdab946893\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eee957068fb48e486d8186d61e8a002a85a0e0004763c88ba03552afb47f3bf5\",\"dweb:/ipfs/QmWawMnwBMj8tyUoL6RMJtXbeSZUqLUN7iFieQqgUnFYro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 837,
								"contract": "contracts/core/MBaseStrategy.sol:MBaseStrategy",
								"label": "poolActive",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 839,
								"contract": "contracts/core/MBaseStrategy.sol:MBaseStrategy",
								"label": "poolId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 841,
								"contract": "contracts/core/MBaseStrategy.sol:MBaseStrategy",
								"label": "poolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"allocate(bytes,address)": {
								"notice": "Allocates to a recipient."
							},
							"constructor": {
								"notice": "Constructor to set the Allo contract and \"strategyId'."
							},
							"distribute(address[],bytes,address)": {
								"notice": "Distributes funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the 'Allo' contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Gets the payout summary for recipients."
							},
							"getPoolAmount()": {
								"notice": "Getter for the 'poolAmount'."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId'."
							},
							"getRecipientStatus(address)": {
								"notice": "Getter for the status of a recipient."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'strategyId'."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the pool amount."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "Getter for whether or not the pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks if the '_allocator' is a valid allocator."
							},
							"registerRecipient(bytes,address)": {
								"notice": "Registers a recipient."
							}
						},
						"notice": "This contract is the base contract for all strategies",
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMProject.sol": {
				"IMProject": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newBudget",
									"type": "uint256"
								}
							],
							"name": "amendBudget",
							"outputs": [
								{
									"internalType": "int256",
									"name": "_amendmentAmount",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_contributorWallet",
									"type": "address"
								}
							],
							"name": "getContributorByAddress",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "homeChain",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "wallet",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										}
									],
									"internalType": "struct Contributor",
									"name": "_contributor",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_contributorId",
									"type": "uint256"
								}
							],
							"name": "getContributorById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "homeChain",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "wallet",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										}
									],
									"internalType": "struct Contributor",
									"name": "_contributor",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContributorIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_contributorIds",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_deliverableId",
									"type": "uint256"
								}
							],
							"name": "getDeliverableById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "projectId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "payoutAmount",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "enum DeliverableStatus",
											"name": "deliverableStatus",
											"type": "uint8"
										},
										{
											"internalType": "enum PayoutStatus",
											"name": "payoutStatus",
											"type": "uint8"
										}
									],
									"internalType": "struct Deliverable",
									"name": "_deliverable",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPaymentDirectives",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "id",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "homeChain",
													"type": "uint256"
												},
												{
													"internalType": "address",
													"name": "wallet",
													"type": "address"
												},
												{
													"components": [
														{
															"internalType": "uint256",
															"name": "protocol",
															"type": "uint256"
														},
														{
															"internalType": "string",
															"name": "pointer",
															"type": "string"
														}
													],
													"internalType": "struct Metadata",
													"name": "metadata",
													"type": "tuple"
												}
											],
											"internalType": "struct Contributor",
											"name": "contributor",
											"type": "tuple"
										},
										{
											"internalType": "uint256",
											"name": "projectId",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "alloProfileId",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "deliverableId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										}
									],
									"internalType": "struct PaymentDirective[]",
									"name": "_directives",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getProjectDescriptor",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "projectId",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "alloPoolId",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "alloProfileId",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "payoutCurrency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "budget",
											"type": "uint256"
										},
										{
											"internalType": "uint256[]",
											"name": "deliverableIds",
											"type": "uint256[]"
										},
										{
											"internalType": "address[]",
											"name": "contributors",
											"type": "address[]"
										}
									],
									"internalType": "struct Project",
									"name": "_project",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_deliverableId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_newContributorId",
									"type": "uint256"
								}
							],
							"name": "reAssignDeliverable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_updated",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_deliverableId",
									"type": "uint256"
								}
							],
							"name": "submitDeliverable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_submitted",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_deliverableId",
									"type": "uint256"
								},
								{
									"internalType": "enum PayoutStatus",
									"name": "_status",
									"type": "uint8"
								}
							],
							"name": "updatePayoutStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "_updated",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"amendBudget(uint256)": "caffe061",
							"getContributorByAddress(address)": "779a5a7f",
							"getContributorById(uint256)": "2890ee5c",
							"getContributorIds()": "8e2c093d",
							"getDeliverableById(uint256)": "190fdcbd",
							"getPaymentDirectives()": "1fae35d4",
							"getProjectDescriptor()": "3ba94ed8",
							"reAssignDeliverable(uint256,uint256)": "f3cda72c",
							"submitDeliverable(uint256)": "3280c215",
							"updatePayoutStatus(uint256,uint8)": "04c325be"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newBudget\",\"type\":\"uint256\"}],\"name\":\"amendBudget\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"_amendmentAmount\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributorWallet\",\"type\":\"address\"}],\"name\":\"getContributorByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"homeChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Contributor\",\"name\":\"_contributor\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contributorId\",\"type\":\"uint256\"}],\"name\":\"getContributorById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"homeChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Contributor\",\"name\":\"_contributor\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContributorIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_contributorIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deliverableId\",\"type\":\"uint256\"}],\"name\":\"getDeliverableById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payoutAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"enum DeliverableStatus\",\"name\":\"deliverableStatus\",\"type\":\"uint8\"},{\"internalType\":\"enum PayoutStatus\",\"name\":\"payoutStatus\",\"type\":\"uint8\"}],\"internalType\":\"struct Deliverable\",\"name\":\"_deliverable\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaymentDirectives\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"homeChain\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"internalType\":\"struct Contributor\",\"name\":\"contributor\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"alloProfileId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deliverableId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"}],\"internalType\":\"struct PaymentDirective[]\",\"name\":\"_directives\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectDescriptor\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"alloPoolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"alloProfileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"payoutCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"deliverableIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"contributors\",\"type\":\"address[]\"}],\"internalType\":\"struct Project\",\"name\":\"_project\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deliverableId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newContributorId\",\"type\":\"uint256\"}],\"name\":\"reAssignDeliverable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_updated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deliverableId\",\"type\":\"uint256\"}],\"name\":\"submitDeliverable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_submitted\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deliverableId\",\"type\":\"uint256\"},{\"internalType\":\"enum PayoutStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"updatePayoutStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_updated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMProject.sol\":\"IMProject\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMProject.sol\":{\"keccak256\":\"0xcdb6c282023b61d7d517262405bece16512fef6761686323819e1ff83f0f417a\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://84d68959cfa5bdee89c2d2718d3a04683b7cb722be37700028a3e8c6a4a6727f\",\"dweb:/ipfs/QmNeSawG529AypTfZ88HEH3YTtPL9e494j7RB5EwuQUYDq\"]},\"contracts/interfaces/IMStructs.sol\":{\"keccak256\":\"0x6aab2b60204ec059c66fd8dd0d9324b01d45ef2243eb827abdd538caf758e51d\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://89355a76386c051d95338ebe189cac9d8b76d24980a5c31d25360ff744954f54\",\"dweb:/ipfs/QmbtvWefb3V4sZ7bp99hT5PwR2zaEGiCktQrwVyrbHYpEY\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x96444e1b6b4adf69d76debd36a792d618e50a7902248ed84b6f07ccdab946893\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eee957068fb48e486d8186d61e8a002a85a0e0004763c88ba03552afb47f3bf5\",\"dweb:/ipfs/QmWawMnwBMj8tyUoL6RMJtXbeSZUqLUN7iFieQqgUnFYro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMRegister.sol": {
				"IMRegister": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getChainId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_chainId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_chainId",
									"type": "uint256"
								}
							],
							"name": "getDestinationConfig",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "chainId",
											"type": "uint256"
										},
										{
											"internalType": "uint64",
											"name": "ccipChainSelector",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "routerAddress",
											"type": "address"
										},
										{
											"internalType": "address[]",
											"name": "feeTokens",
											"type": "address[]"
										},
										{
											"internalType": "address",
											"name": "giltReciever",
											"type": "address"
										}
									],
									"internalType": "struct DestinationConfig",
									"name": "_dConfig",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAddress(string)": "bf40fac1",
							"getChainId()": "3408e470",
							"getDestinationConfig(uint256)": "cea27c36",
							"getName(address)": "5fd4b08a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"}],\"name\":\"getDestinationConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"ccipChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"feeTokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"giltReciever\",\"type\":\"address\"}],\"internalType\":\"struct DestinationConfig\",\"name\":\"_dConfig\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMRegister.sol\":\"IMRegister\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMRegister.sol\":{\"keccak256\":\"0xb2364f73159afc2d717b844ba80a4af54d36c0b3142c7cd540c939f595803714\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://a4ee87280b6bff80c38fead8a4b32f2851e2db85f88ef4fa8875c31b35a76df9\",\"dweb:/ipfs/QmbgtNAAMUp73yrtPJHvaCtz5XDRDUL9zmbijy3tK4x5rP\"]},\"contracts/interfaces/IMStructs.sol\":{\"keccak256\":\"0x6aab2b60204ec059c66fd8dd0d9324b01d45ef2243eb827abdd538caf758e51d\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://89355a76386c051d95338ebe189cac9d8b76d24980a5c31d25360ff744954f54\",\"dweb:/ipfs/QmbtvWefb3V4sZ7bp99hT5PwR2zaEGiCktQrwVyrbHYpEY\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x96444e1b6b4adf69d76debd36a792d618e50a7902248ed84b6f07ccdab946893\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eee957068fb48e486d8186d61e8a002a85a0e0004763c88ba03552afb47f3bf5\",\"dweb:/ipfs/QmWawMnwBMj8tyUoL6RMJtXbeSZUqLUN7iFieQqgUnFYro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMVersion.sol": {
				"IMVersion": {
					"abi": [
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_version",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getName()": "17d7de7c",
							"getVersion()": "0d8e6e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMVersion.sol\":\"IMVersion\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMVersion.sol\":{\"keccak256\":\"0x313fc3f323f506bf67d81eae3962374edc282ea508cd2e6a0db7b09846e8e2bd\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://52208146c43535fac38a262eb7c808e3b25ef20432f9a945b24f1c9ad8c9ceea\",\"dweb:/ipfs/QmTbjtZSJDUhQnPVSigpii2GsbxqdPD1iWQ9f6vhbtqFN9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMargari.sol": {
				"IMargari": {
					"abi": [
						{
							"inputs": [],
							"name": "claimGilts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "projectId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "giltId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "chainId",
											"type": "uint256"
										}
									],
									"internalType": "struct GiltClaim[]",
									"name": "_giltClaims",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_erc20",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_remoteRecipient",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_alloProfileId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_projectId",
									"type": "uint256"
								}
							],
							"name": "sendFunds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_sendId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "erc20",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "creationDate",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "chainId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "giltContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "id",
											"type": "uint256"
										}
									],
									"internalType": "struct Gilt",
									"name": "_gilt",
									"type": "tuple"
								},
								{
									"internalType": "bytes32",
									"name": "_alloProfileId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_projectId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_destinationChainId",
									"type": "uint256"
								}
							],
							"name": "sendGilt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_sendId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimGilts()": "351cd8b2",
							"sendFunds(uint256,address,uint256,address,bytes32,uint256)": "c1ee37e2",
							"sendGilt((address,uint256,uint256,uint256,address,uint256),bytes32,uint256,uint256)": "352ae5dc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimGilts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"giltId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct GiltClaim[]\",\"name\":\"_giltClaims\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_remoteRecipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_alloProfileId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"sendFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_sendId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"giltContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct Gilt\",\"name\":\"_gilt\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_alloProfileId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_destinationChainId\",\"type\":\"uint256\"}],\"name\":\"sendGilt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_sendId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMargari.sol\":\"IMargari\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMStructs.sol\":{\"keccak256\":\"0x6aab2b60204ec059c66fd8dd0d9324b01d45ef2243eb827abdd538caf758e51d\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://89355a76386c051d95338ebe189cac9d8b76d24980a5c31d25360ff744954f54\",\"dweb:/ipfs/QmbtvWefb3V4sZ7bp99hT5PwR2zaEGiCktQrwVyrbHYpEY\"]},\"contracts/interfaces/IMargari.sol\":{\"keccak256\":\"0x37011a68224d2b2924fc6f01caea0434a987e833d2febc873ec6673d20f9b4a4\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://699b7eaa0c598f337ed78c002befd6e691214e344d3bd6c5dc4ea88f1090acc2\",\"dweb:/ipfs/QmV5bF9edxQSDzQVmyHNK1umNEdoZTmxRy34xfpknHzapw\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x96444e1b6b4adf69d76debd36a792d618e50a7902248ed84b6f07ccdab946893\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eee957068fb48e486d8186d61e8a002a85a0e0004763c88ba03552afb47f3bf5\",\"dweb:/ipfs/QmWawMnwBMj8tyUoL6RMJtXbeSZUqLUN7iFieQqgUnFYro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IMargariAlloStrategy.sol": {
				"IMargariAlloStrategy": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMargariAlloStrategy.sol\":\"IMargariAlloStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMargariAlloStrategy.sol\":{\"keccak256\":\"0x373abb06e0064efcc0032121785da1f906bc1ae7cd7e843f142853ed77131731\",\"license\":\"APACHE 2.0\",\"urls\":[\"bzz-raw://3fca385e1ed1c9f19fa5bc6952ba913efda89166ec2706fb02779d3dadc7a53b\",\"dweb:/ipfs/QmbvWCie23ME3Ke2jkrsunvZZDUs1s7DRdnt4EhvQ2N96m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol": {
				"IAllo": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BaseFeePaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFee",
									"type": "uint256"
								}
							],
							"name": "BaseFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "percentFee",
									"type": "uint256"
								}
							],
							"name": "PercentFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IStrategy",
									"name": "strategy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "PoolFunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "PoolMetadataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "registry",
									"type": "address"
								}
							],
							"name": "RegistryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "StrategyApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "strategy",
									"type": "address"
								}
							],
							"name": "StrategyRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "treasury",
									"type": "address"
								}
							],
							"name": "TreasuryUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "addPoolManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "addToCloneableStrategies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_poolIds",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_datas",
									"type": "bytes[]"
								}
							],
							"name": "batchAllocate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_poolIds",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "batchRegisterRecipient",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_initStrategyData",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								},
								{
									"internalType": "address[]",
									"name": "_managers",
									"type": "address[]"
								}
							],
							"name": "createPoolWithCustomStrategy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fundPool",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBaseFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPercentFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "profileId",
											"type": "bytes32"
										},
										{
											"internalType": "contract IStrategy",
											"name": "strategy",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token",
											"type": "address"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "bytes32",
											"name": "managerRole",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "adminRole",
											"type": "bytes32"
										}
									],
									"internalType": "struct IAllo.Pool",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRegistry",
							"outputs": [
								{
									"internalType": "contract IRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								}
							],
							"name": "getStrategy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTreasury",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_percentFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "isCloneableStrategy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isPoolAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isPoolManager",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "recoverFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_strategy",
									"type": "address"
								}
							],
							"name": "removeFromCloneableStrategies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_manager",
									"type": "address"
								}
							],
							"name": "removePoolManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_baseFee",
									"type": "uint256"
								}
							],
							"name": "updateBaseFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentFee",
									"type": "uint256"
								}
							],
							"name": "updatePercentFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								}
							],
							"name": "updatePoolMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_registry",
									"type": "address"
								}
							],
							"name": "updateRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_treasury",
									"type": "address"
								}
							],
							"name": "updateTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"events": {
							"BaseFeePaid(uint256,uint256)": {
								"params": {
									"amount": "Amount of the base fee paid",
									"poolId": "ID of the pool the base fee was paid for"
								}
							},
							"BaseFeeUpdated(uint256)": {
								"params": {
									"baseFee": "New base fee amount"
								}
							},
							"PercentFeeUpdated(uint256)": {
								"params": {
									"percentFee": "New percentage for the fee"
								}
							},
							"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))": {
								"params": {
									"amount": "Amount pool was funded with when created",
									"metadata": "Pool metadata",
									"poolId": "ID of the pool created",
									"profileId": "ID of the profile the pool is associated with",
									"strategy": "Address of the strategy contract",
									"token": "Address of the token pool was funded with when created"
								}
							},
							"PoolFunded(uint256,uint256,uint256)": {
								"params": {
									"amount": "Amount funded to the pool",
									"fee": "Amount of the fee paid to the treasury",
									"poolId": "ID of the pool funded"
								}
							},
							"PoolMetadataUpdated(uint256,(uint256,string))": {
								"params": {
									"metadata": "Pool metadata that was updated",
									"poolId": "ID of the pool updated"
								}
							},
							"RegistryUpdated(address)": {
								"params": {
									"registry": "Address of the new registry"
								}
							},
							"StrategyApproved(address)": {
								"params": {
									"strategy": "Address of the strategy approved"
								}
							},
							"StrategyRemoved(address)": {
								"params": {
									"strategy": "Address of the strategy removed"
								}
							},
							"TreasuryUpdated(address)": {
								"params": {
									"treasury": "Address of the new treasury"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"addPoolManager(uint256,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_manager": "The address of the manager to add",
									"_poolId": "The ID of the pool to add the manager to"
								}
							},
							"addToCloneableStrategies(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_strategy": "The address of the strategy to add"
								}
							},
							"allocate(uint256,bytes)": {
								"details": "Each strategy will handle the allocation of funds differently.",
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy.",
									"_poolId": "The ID of the pool to allocate funds from"
								}
							},
							"batchAllocate(uint256[],bytes[])": {
								"details": "Each strategy will handle the allocation of funds differently"
							},
							"batchRegisterRecipient(uint256[],bytes[])": {
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy",
									"_poolIds": "The pool ID's to register the recipients for"
								}
							},
							"distribute(uint256,address[],bytes)": {
								"details": "Each strategy will handle the distribution of funds differently",
								"params": {
									"_data": "The data to pass to the strategy and may be handled differently by each strategy",
									"_poolId": "The ID of the pool to distribute from",
									"_recipientIds": "The recipient ids to distribute to"
								}
							},
							"fundPool(uint256,uint256)": {
								"details": "'msg.value' must be greater than 0 if the token is the native token       or '_amount' must be greater than 0 if the token is not the native token.",
								"params": {
									"_amount": "The amount to fund the pool with",
									"_poolId": "The ID of the pool to fund"
								}
							},
							"getBaseFee()": {
								"returns": {
									"_0": "baseFee The current base fee"
								}
							},
							"getFeeDenominator()": {
								"details": "1e18 represents 100%",
								"returns": {
									"_0": "feeDenominator The current fee denominator"
								}
							},
							"getPercentFee()": {
								"returns": {
									"_0": "percentFee The current percentage for the fee"
								}
							},
							"getPool(uint256)": {
								"params": {
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "pool The 'Pool' struct for the ID of the pool passed in"
								}
							},
							"getRegistry()": {
								"returns": {
									"_0": "registry The current registry address"
								}
							},
							"getStrategy(uint256)": {
								"params": {
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "strategy The address of the strategy for the ID of the pool passed in"
								}
							},
							"getTreasury()": {
								"returns": {
									"_0": "treasury The current treasury address"
								}
							},
							"initialize(address,address,address,uint256,uint256)": {
								"params": {
									"_baseFee": "Base fee amount",
									"_owner": "Address of the owner",
									"_percentFee": "Percentage for the fee",
									"_registry": "Address of the registry contract",
									"_treasury": "Address of the treasury"
								}
							},
							"isCloneableStrategy(address)": {
								"params": {
									"_strategy": "The address of the strategy to check"
								},
								"returns": {
									"_0": "'true' if the '_strategy' is cloneable, otherwise 'false'"
								}
							},
							"isPoolAdmin(uint256,address)": {
								"params": {
									"_address": "The address to check",
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "'true' if the '_address' is a pool admin, otherwise 'false'"
								}
							},
							"isPoolManager(uint256,address)": {
								"params": {
									"_address": "The address to check",
									"_poolId": "The ID of the pool to check"
								},
								"returns": {
									"_0": "'true' if the '_address' is a pool manager, otherwise 'false'"
								}
							},
							"recoverFunds(address,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_recipient": "The address to send the recovered funds to",
									"_token": "The token to recover"
								}
							},
							"registerRecipient(uint256,bytes)": {
								"params": {
									"_poolId": "The ID of the pool to register the recipient for"
								}
							},
							"removeFromCloneableStrategies(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_strategy": "The address of the strategy to remove"
								}
							},
							"removePoolManager(uint256,address)": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_manager": "The address of the manager to remove",
									"_poolId": "The ID of the pool to remove the manager from"
								}
							},
							"updateBaseFee(uint256)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_baseFee": "The new base fee"
								}
							},
							"updatePercentFee(uint256)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_percentFee": "The new percentage for the fee"
								}
							},
							"updatePoolMetadata(uint256,(uint256,string))": {
								"details": "'msg.sender' must be a pool admin.",
								"params": {
									"_metadata": "The new metadata to set",
									"_poolId": "The ID of the pool to update"
								}
							},
							"updateRegistry(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_registry": "The new registry address"
								}
							},
							"updateTreasury(address)": {
								"details": "'msg.sender' must be the Allo contract owner.",
								"params": {
									"_treasury": "The new treasury address"
								}
							}
						},
						"title": "Allo Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addPoolManager(uint256,address)": "2cf682b0",
							"addToCloneableStrategies(address)": "41bba0b4",
							"allocate(uint256,bytes)": "2ec38188",
							"batchAllocate(uint256[],bytes[])": "c6dff1cf",
							"batchRegisterRecipient(uint256[],bytes[])": "1a20bd88",
							"createPoolWithCustomStrategy(bytes32,address,bytes,address,uint256,(uint256,string),address[])": "e1007d4a",
							"distribute(uint256,address[],bytes)": "3a5fbd92",
							"fundPool(uint256,uint256)": "5acd6fac",
							"getBaseFee()": "15e812ad",
							"getFeeDenominator()": "f4e1fc41",
							"getPercentFee()": "4edbaadc",
							"getPool(uint256)": "068bcd8d",
							"getRegistry()": "5ab1bd53",
							"getStrategy(uint256)": "cfc0cc34",
							"getTreasury()": "3b19e84a",
							"initialize(address,address,address,uint256,uint256)": "a6b63eb8",
							"isCloneableStrategy(address)": "ab2ec589",
							"isPoolAdmin(uint256,address)": "ab3febc6",
							"isPoolManager(uint256,address)": "29e40d4b",
							"recoverFunds(address,address)": "24ae6a27",
							"registerRecipient(uint256,bytes)": "075c0e9c",
							"removeFromCloneableStrategies(address)": "031e2fa1",
							"removePoolManager(uint256,address)": "7f5a70bd",
							"updateBaseFee(uint256)": "8e690186",
							"updatePercentFee(uint256)": "f54fc4a0",
							"updatePoolMetadata(uint256,(uint256,string))": "5f9ca138",
							"updateRegistry(address)": "1a5da6c8",
							"updateTreasury(address)": "7f51bb1f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BaseFeePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFee\",\"type\":\"uint256\"}],\"name\":\"BaseFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"percentFee\",\"type\":\"uint256\"}],\"name\":\"PercentFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"PoolFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"PoolMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registry\",\"type\":\"address\"}],\"name\":\"RegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"}],\"name\":\"TreasuryUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"addPoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"addToCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_datas\",\"type\":\"bytes[]\"}],\"name\":\"batchAllocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_poolIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"batchRegisterRecipient\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_initStrategyData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address[]\",\"name\":\"_managers\",\"type\":\"address[]\"}],\"name\":\"createPoolWithCustomStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPercentFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"managerRole\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"adminRole\",\"type\":\"bytes32\"}],\"internalType\":\"struct IAllo.Pool\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"}],\"name\":\"getStrategy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"isCloneableStrategy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isPoolManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"removeFromCloneableStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"removePoolManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseFee\",\"type\":\"uint256\"}],\"name\":\"updateBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentFee\",\"type\":\"uint256\"}],\"name\":\"updatePercentFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"updatePoolMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"updateRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"updateTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"params\":{\"amount\":\"Amount of the base fee paid\",\"poolId\":\"ID of the pool the base fee was paid for\"}},\"BaseFeeUpdated(uint256)\":{\"params\":{\"baseFee\":\"New base fee amount\"}},\"PercentFeeUpdated(uint256)\":{\"params\":{\"percentFee\":\"New percentage for the fee\"}},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"params\":{\"amount\":\"Amount pool was funded with when created\",\"metadata\":\"Pool metadata\",\"poolId\":\"ID of the pool created\",\"profileId\":\"ID of the profile the pool is associated with\",\"strategy\":\"Address of the strategy contract\",\"token\":\"Address of the token pool was funded with when created\"}},\"PoolFunded(uint256,uint256,uint256)\":{\"params\":{\"amount\":\"Amount funded to the pool\",\"fee\":\"Amount of the fee paid to the treasury\",\"poolId\":\"ID of the pool funded\"}},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"params\":{\"metadata\":\"Pool metadata that was updated\",\"poolId\":\"ID of the pool updated\"}},\"RegistryUpdated(address)\":{\"params\":{\"registry\":\"Address of the new registry\"}},\"StrategyApproved(address)\":{\"params\":{\"strategy\":\"Address of the strategy approved\"}},\"StrategyRemoved(address)\":{\"params\":{\"strategy\":\"Address of the strategy removed\"}},\"TreasuryUpdated(address)\":{\"params\":{\"treasury\":\"Address of the new treasury\"}}},\"kind\":\"dev\",\"methods\":{\"addPoolManager(uint256,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address of the manager to add\",\"_poolId\":\"The ID of the pool to add the manager to\"}},\"addToCloneableStrategies(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_strategy\":\"The address of the strategy to add\"}},\"allocate(uint256,bytes)\":{\"details\":\"Each strategy will handle the allocation of funds differently.\",\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy.\",\"_poolId\":\"The ID of the pool to allocate funds from\"}},\"batchAllocate(uint256[],bytes[])\":{\"details\":\"Each strategy will handle the allocation of funds differently\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy\",\"_poolIds\":\"The pool ID's to register the recipients for\"}},\"distribute(uint256,address[],bytes)\":{\"details\":\"Each strategy will handle the distribution of funds differently\",\"params\":{\"_data\":\"The data to pass to the strategy and may be handled differently by each strategy\",\"_poolId\":\"The ID of the pool to distribute from\",\"_recipientIds\":\"The recipient ids to distribute to\"}},\"fundPool(uint256,uint256)\":{\"details\":\"'msg.value' must be greater than 0 if the token is the native token       or '_amount' must be greater than 0 if the token is not the native token.\",\"params\":{\"_amount\":\"The amount to fund the pool with\",\"_poolId\":\"The ID of the pool to fund\"}},\"getBaseFee()\":{\"returns\":{\"_0\":\"baseFee The current base fee\"}},\"getFeeDenominator()\":{\"details\":\"1e18 represents 100%\",\"returns\":{\"_0\":\"feeDenominator The current fee denominator\"}},\"getPercentFee()\":{\"returns\":{\"_0\":\"percentFee The current percentage for the fee\"}},\"getPool(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"pool The 'Pool' struct for the ID of the pool passed in\"}},\"getRegistry()\":{\"returns\":{\"_0\":\"registry The current registry address\"}},\"getStrategy(uint256)\":{\"params\":{\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"strategy The address of the strategy for the ID of the pool passed in\"}},\"getTreasury()\":{\"returns\":{\"_0\":\"treasury The current treasury address\"}},\"initialize(address,address,address,uint256,uint256)\":{\"params\":{\"_baseFee\":\"Base fee amount\",\"_owner\":\"Address of the owner\",\"_percentFee\":\"Percentage for the fee\",\"_registry\":\"Address of the registry contract\",\"_treasury\":\"Address of the treasury\"}},\"isCloneableStrategy(address)\":{\"params\":{\"_strategy\":\"The address of the strategy to check\"},\"returns\":{\"_0\":\"'true' if the '_strategy' is cloneable, otherwise 'false'\"}},\"isPoolAdmin(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"'true' if the '_address' is a pool admin, otherwise 'false'\"}},\"isPoolManager(uint256,address)\":{\"params\":{\"_address\":\"The address to check\",\"_poolId\":\"The ID of the pool to check\"},\"returns\":{\"_0\":\"'true' if the '_address' is a pool manager, otherwise 'false'\"}},\"recoverFunds(address,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_recipient\":\"The address to send the recovered funds to\",\"_token\":\"The token to recover\"}},\"registerRecipient(uint256,bytes)\":{\"params\":{\"_poolId\":\"The ID of the pool to register the recipient for\"}},\"removeFromCloneableStrategies(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_strategy\":\"The address of the strategy to remove\"}},\"removePoolManager(uint256,address)\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_manager\":\"The address of the manager to remove\",\"_poolId\":\"The ID of the pool to remove the manager from\"}},\"updateBaseFee(uint256)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_baseFee\":\"The new base fee\"}},\"updatePercentFee(uint256)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_percentFee\":\"The new percentage for the fee\"}},\"updatePoolMetadata(uint256,(uint256,string))\":{\"details\":\"'msg.sender' must be a pool admin.\",\"params\":{\"_metadata\":\"The new metadata to set\",\"_poolId\":\"The ID of the pool to update\"}},\"updateRegistry(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_registry\":\"The new registry address\"}},\"updateTreasury(address)\":{\"details\":\"'msg.sender' must be the Allo contract owner.\",\"params\":{\"_treasury\":\"The new treasury address\"}}},\"title\":\"Allo Interface\",\"version\":1},\"userdoc\":{\"events\":{\"BaseFeePaid(uint256,uint256)\":{\"notice\":\"Emitted when the base fee is paid\"},\"BaseFeeUpdated(uint256)\":{\"notice\":\"Emitted when the base fee is updated\"},\"PercentFeeUpdated(uint256)\":{\"notice\":\"Emitted when the percent fee is updated\"},\"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))\":{\"notice\":\"Event emitted when a new pool is created\"},\"PoolFunded(uint256,uint256,uint256)\":{\"notice\":\"Emitted when a pool is funded\"},\"PoolMetadataUpdated(uint256,(uint256,string))\":{\"notice\":\"Emitted when a pools metadata is updated\"},\"RegistryUpdated(address)\":{\"notice\":\"Emitted when the registry address is updated\"},\"StrategyApproved(address)\":{\"notice\":\"Emitted when a strategy is approved and added to the cloneable strategies\"},\"StrategyRemoved(address)\":{\"notice\":\"Emitted when a strategy is removed from the cloneable strategies\"},\"TreasuryUpdated(address)\":{\"notice\":\"Emitted when the treasury address is updated\"}},\"kind\":\"user\",\"methods\":{\"addPoolManager(uint256,address)\":{\"notice\":\"Adds a pool manager to the pool.\"},\"addToCloneableStrategies(address)\":{\"notice\":\"Adds a strategy to the cloneable strategies.\"},\"allocate(uint256,bytes)\":{\"notice\":\"Allocates funds to a recipient.\"},\"batchAllocate(uint256[],bytes[])\":{\"notice\":\"Allocates funds to multiple recipients.\"},\"batchRegisterRecipient(uint256[],bytes[])\":{\"notice\":\"Registers a batch of recipients.\"},\"distribute(uint256,address[],bytes)\":{\"notice\":\"Distributes funds to recipients and emits {Distributed} event if successful\"},\"fundPool(uint256,uint256)\":{\"notice\":\"Funds a pool.\"},\"getBaseFee()\":{\"notice\":\"Returns the current base fee\"},\"getFeeDenominator()\":{\"notice\":\"Returns the current fee denominator\"},\"getPercentFee()\":{\"notice\":\"Returns the current percent fee\"},\"getPool(uint256)\":{\"notice\":\"Returns the 'Pool' struct for a given 'poolId'\"},\"getRegistry()\":{\"notice\":\"Returns the current registry address\"},\"getStrategy(uint256)\":{\"notice\":\"Returns the address of the strategy for a given 'poolId'\"},\"getTreasury()\":{\"notice\":\"Returns the current treasury address\"},\"initialize(address,address,address,uint256,uint256)\":{\"notice\":\"Initialize the Allo contract\"},\"isCloneableStrategy(address)\":{\"notice\":\"Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\"},\"isPoolAdmin(uint256,address)\":{\"notice\":\"Checks if an address is a pool admin.\"},\"isPoolManager(uint256,address)\":{\"notice\":\"Checks if an address is a pool manager.\"},\"recoverFunds(address,address)\":{\"notice\":\"Recovers funds from a pool.\"},\"registerRecipient(uint256,bytes)\":{\"notice\":\"Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\"},\"removeFromCloneableStrategies(address)\":{\"notice\":\"Removes a strategy from the cloneable strategies.\"},\"removePoolManager(uint256,address)\":{\"notice\":\"Removes a pool manager from the pool.\"},\"updateBaseFee(uint256)\":{\"notice\":\"Updates the base fee.\"},\"updatePercentFee(uint256)\":{\"notice\":\"Updates the percentage for the fee.\"},\"updatePoolMetadata(uint256,(uint256,string))\":{\"notice\":\"Updates a pools metadata.\"},\"updateRegistry(address)\":{\"notice\":\"Update the registry address.\"},\"updateTreasury(address)\":{\"notice\":\"Updates the treasury address.\"}},\"notice\":\"Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol\":\"IAllo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xe1ccd35e03787b4a5beb138c336f5fc617f4885726bfdf3c82a642499e21f785\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7369418f7c7a3a16c38ed506ceb4e873f0806e6d68db2f682fa46b0e6070a74a\",\"dweb:/ipfs/Qmc4MiHqKdPdd7H7me8h5LsjHMt7KgAdUg5phGUTHMVsdc\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x96444e1b6b4adf69d76debd36a792d618e50a7902248ed84b6f07ccdab946893\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eee957068fb48e486d8186d61e8a002a85a0e0004763c88ba03552afb47f3bf5\",\"dweb:/ipfs/QmWawMnwBMj8tyUoL6RMJtXbeSZUqLUN7iFieQqgUnFYro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"BaseFeePaid(uint256,uint256)": {
								"notice": "Emitted when the base fee is paid"
							},
							"BaseFeeUpdated(uint256)": {
								"notice": "Emitted when the base fee is updated"
							},
							"PercentFeeUpdated(uint256)": {
								"notice": "Emitted when the percent fee is updated"
							},
							"PoolCreated(uint256,bytes32,address,address,uint256,(uint256,string))": {
								"notice": "Event emitted when a new pool is created"
							},
							"PoolFunded(uint256,uint256,uint256)": {
								"notice": "Emitted when a pool is funded"
							},
							"PoolMetadataUpdated(uint256,(uint256,string))": {
								"notice": "Emitted when a pools metadata is updated"
							},
							"RegistryUpdated(address)": {
								"notice": "Emitted when the registry address is updated"
							},
							"StrategyApproved(address)": {
								"notice": "Emitted when a strategy is approved and added to the cloneable strategies"
							},
							"StrategyRemoved(address)": {
								"notice": "Emitted when a strategy is removed from the cloneable strategies"
							},
							"TreasuryUpdated(address)": {
								"notice": "Emitted when the treasury address is updated"
							}
						},
						"kind": "user",
						"methods": {
							"addPoolManager(uint256,address)": {
								"notice": "Adds a pool manager to the pool."
							},
							"addToCloneableStrategies(address)": {
								"notice": "Adds a strategy to the cloneable strategies."
							},
							"allocate(uint256,bytes)": {
								"notice": "Allocates funds to a recipient."
							},
							"batchAllocate(uint256[],bytes[])": {
								"notice": "Allocates funds to multiple recipients."
							},
							"batchRegisterRecipient(uint256[],bytes[])": {
								"notice": "Registers a batch of recipients."
							},
							"distribute(uint256,address[],bytes)": {
								"notice": "Distributes funds to recipients and emits {Distributed} event if successful"
							},
							"fundPool(uint256,uint256)": {
								"notice": "Funds a pool."
							},
							"getBaseFee()": {
								"notice": "Returns the current base fee"
							},
							"getFeeDenominator()": {
								"notice": "Returns the current fee denominator"
							},
							"getPercentFee()": {
								"notice": "Returns the current percent fee"
							},
							"getPool(uint256)": {
								"notice": "Returns the 'Pool' struct for a given 'poolId'"
							},
							"getRegistry()": {
								"notice": "Returns the current registry address"
							},
							"getStrategy(uint256)": {
								"notice": "Returns the address of the strategy for a given 'poolId'"
							},
							"getTreasury()": {
								"notice": "Returns the current treasury address"
							},
							"initialize(address,address,address,uint256,uint256)": {
								"notice": "Initialize the Allo contract"
							},
							"isCloneableStrategy(address)": {
								"notice": "Checks if a strategy is cloneable (is in the cloneableStrategies mapping)."
							},
							"isPoolAdmin(uint256,address)": {
								"notice": "Checks if an address is a pool admin."
							},
							"isPoolManager(uint256,address)": {
								"notice": "Checks if an address is a pool manager."
							},
							"recoverFunds(address,address)": {
								"notice": "Recovers funds from a pool."
							},
							"registerRecipient(uint256,bytes)": {
								"notice": "Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy."
							},
							"removeFromCloneableStrategies(address)": {
								"notice": "Removes a strategy from the cloneable strategies."
							},
							"removePoolManager(uint256,address)": {
								"notice": "Removes a pool manager from the pool."
							},
							"updateBaseFee(uint256)": {
								"notice": "Updates the base fee."
							},
							"updatePercentFee(uint256)": {
								"notice": "Updates the percentage for the fee."
							},
							"updatePoolMetadata(uint256,(uint256,string))": {
								"notice": "Updates a pools metadata."
							},
							"updateRegistry(address)": {
								"notice": "Update the registry address."
							},
							"updateTreasury(address)": {
								"notice": "Updates the treasury address."
							}
						},
						"notice": "Interface for the Allo contract. It exposes all functions needed to use the Allo protocol.",
						"version": 1
					}
				}
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol": {
				"IRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"name": "ProfileCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"indexed": false,
									"internalType": "struct Metadata",
									"name": "metadata",
									"type": "tuple"
								}
							],
							"name": "ProfileMetadataUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"name": "ProfileNameUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ProfileOwnerUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "ProfilePendingOwnerUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								}
							],
							"name": "acceptProfileOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "addMembers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "createProfile",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "profileId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_anchor",
									"type": "address"
								}
							],
							"name": "getProfileByAnchor",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "anchor",
											"type": "address"
										}
									],
									"internalType": "struct IRegistry.Profile",
									"name": "profile",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								}
							],
							"name": "getProfileById",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "id",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "nonce",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "protocol",
													"type": "uint256"
												},
												{
													"internalType": "string",
													"name": "pointer",
													"type": "string"
												}
											],
											"internalType": "struct Metadata",
											"name": "metadata",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "anchor",
											"type": "address"
										}
									],
									"internalType": "struct IRegistry.Profile",
									"name": "profile",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_member",
									"type": "address"
								}
							],
							"name": "isMemberOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isMemberOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "isOwnerOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOwnerOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "isOwnerOrMemberOfProfile",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOwnerOrMemberOfProfile",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								}
							],
							"name": "recoverFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address[]",
									"name": "_members",
									"type": "address[]"
								}
							],
							"name": "removeMembers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "protocol",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "pointer",
											"type": "string"
										}
									],
									"internalType": "struct Metadata",
									"name": "_metadata",
									"type": "tuple"
								}
							],
							"name": "updateProfileMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "updateProfileName",
							"outputs": [
								{
									"internalType": "address",
									"name": "anchor",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_profileId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_pendingOwner",
									"type": "address"
								}
							],
							"name": "updateProfilePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"details": "The Registry Interface is used to interact with the Allo protocol and create profiles      that can be used to interact with the Allo protocol. The Registry is the main contract      that all other contracts interact with to get the 'Profile' information needed to      interact with the Allo protocol. The Registry is also used to create new profiles      and update existing profiles. The Registry is also used to add and remove members      from a profile. The Registry will not always be used in a strategy and will depend on      the strategy being used.",
						"events": {
							"ProfileCreated(bytes32,uint256,string,(uint256,string),address,address)": {
								"details": "Emitted when a profile is created. This will return your anchor address."
							},
							"ProfileMetadataUpdated(bytes32,(uint256,string))": {
								"details": "Emitted when a profile's metadata is updated."
							},
							"ProfileNameUpdated(bytes32,string,address)": {
								"details": "Emitted when a profile name is updated. This will update the anchor when the name is updated and return it."
							},
							"ProfileOwnerUpdated(bytes32,address)": {
								"details": "Emitted when a profile owner is updated."
							},
							"ProfilePendingOwnerUpdated(bytes32,address)": {
								"details": "Emitted when a profile pending owner is updated."
							}
						},
						"kind": "dev",
						"methods": {
							"acceptProfileOwnership(bytes32)": {
								"details": "Accepts the pending 'owner' of the '_profileId' passed in Requirements: Only the pending owner can accept the ownership",
								"params": {
									"_profileId": "The 'profileId' to accept the ownership for"
								}
							},
							"addMembers(bytes32,address[])": {
								"details": "Adds members to the '_profileId' passed in Requirements: Only the 'Profile' owner can add members",
								"params": {
									"_members": "The members to add to the '_profileId' passed in",
									"_profileId": "The 'profileId' to add members to"
								}
							},
							"createProfile(uint256,string,(uint256,string),address,address[])": {
								"details": "Creates a new 'Profile' and returns the 'profileId' of the new profile Note: The 'name' and 'nonce' are used to generate the 'anchor' address Requirements: None, anyone can create a new profile",
								"params": {
									"_members": "The 'members' to use to generate the 'anchor' address",
									"_metadata": "The 'Metadata' to use to generate the 'anchor' address",
									"_name": "The name to use to generate the 'anchor' address",
									"_nonce": "The nonce to use to generate the 'anchor' address",
									"_owner": "The 'owner' to use to generate the 'anchor' address"
								},
								"returns": {
									"profileId": "The 'profileId' of the new profile"
								}
							},
							"getProfileByAnchor(address)": {
								"details": "Returns the 'Profile' for an '_anchor' passed",
								"params": {
									"_anchor": "The 'anchor' to return the 'Profile' for"
								},
								"returns": {
									"profile": "The 'Profile' for the '_anchor' passed"
								}
							},
							"getProfileById(bytes32)": {
								"details": "Returns the 'Profile' for a '_profileId' passed",
								"params": {
									"_profileId": "The 'profileId' to return the 'Profile' for"
								},
								"returns": {
									"profile": "The 'Profile' for the '_profileId' passed"
								}
							},
							"isMemberOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is a member of the '_profileId' passed in",
								"params": {
									"_member": "The 'member' to check if they are a member of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is a member of"
								},
								"returns": {
									"isMemberOfProfile": "A boolean if the '_account' is a member of the '_profileId' passed in"
								}
							},
							"isOwnerOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is an owner of the '_profileId' passed in",
								"params": {
									"_owner": "The 'owner' to check if they are an owner of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is an owner of"
								},
								"returns": {
									"isOwnerOfProfile": "A boolean if the '_account' is an owner of the '_profileId' passed in"
								}
							},
							"isOwnerOrMemberOfProfile(bytes32,address)": {
								"details": "Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in",
								"params": {
									"_account": "The 'account' to check if they are a member or owner of the '_profileId' passed in",
									"_profileId": "The 'profileId' to check if the '_account' is a member or owner of"
								},
								"returns": {
									"isOwnerOrMemberOfProfile": "A boolean if the '_account' is a member or owner of the '_profileId' passed in"
								}
							},
							"recoverFunds(address,address)": {
								"details": "Recovers funds from the contract Requirements: Must be the Allo owner",
								"params": {
									"_recipient": "The recipient of the recovered funds",
									"_token": "The token you want to use to recover funds"
								}
							},
							"removeMembers(bytes32,address[])": {
								"details": "Removes members from the '_profileId' passed in Requirements: Only the 'Profile' owner can remove members",
								"params": {
									"_members": "The members to remove from the '_profileId' passed in",
									"_profileId": "The 'profileId' to remove members from"
								}
							},
							"updateProfileMetadata(bytes32,(uint256,string))": {
								"details": "Updates the 'Metadata' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the metadata",
								"params": {
									"_metadata": "The new 'Metadata' value",
									"_profileId": "The 'profileId' to update the metadata for"
								}
							},
							"updateProfileName(bytes32,string)": {
								"details": "Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address Requirements: Only the 'Profile' owner can update the name Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'       so please use caution. You can always recreate your 'anchor' address by updating the name back       to the original name used to create the profile.",
								"params": {
									"_name": "The new 'name' value",
									"_profileId": "The 'profileId' to update the name for"
								},
								"returns": {
									"anchor": "The new 'anchor' address"
								}
							},
							"updateProfilePendingOwner(bytes32,address)": {
								"details": "Updates the pending 'owner' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the pending owner",
								"params": {
									"_pendingOwner": "The new pending 'owner' value",
									"_profileId": "The 'profileId' to update the pending owner for"
								}
							}
						},
						"title": "IRegistry Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptProfileOwnership(bytes32)": "2497f3c6",
							"addMembers(bytes32,address[])": "5063f361",
							"createProfile(uint256,string,(uint256,string),address,address[])": "3a92f65f",
							"getProfileByAnchor(address)": "dd93da43",
							"getProfileById(bytes32)": "0114cf0a",
							"isMemberOfProfile(bytes32,address)": "0ec1fbac",
							"isOwnerOfProfile(bytes32,address)": "39b86b8c",
							"isOwnerOrMemberOfProfile(bytes32,address)": "5e8a7915",
							"recoverFunds(address,address)": "24ae6a27",
							"removeMembers(bytes32,address[])": "e0cf1e4c",
							"updateProfileMetadata(bytes32,(uint256,string))": "ac402839",
							"updateProfileName(bytes32,string)": "cf189ff2",
							"updateProfilePendingOwner(bytes32,address)": "3b66dacd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"name\":\"ProfileCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"name\":\"ProfileMetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"name\":\"ProfileNameUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ProfileOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"ProfilePendingOwnerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"}],\"name\":\"acceptProfileOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"addMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"createProfile\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"profileId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_anchor\",\"type\":\"address\"}],\"name\":\"getProfileByAnchor\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"internalType\":\"struct IRegistry.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"}],\"name\":\"getProfileById\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"metadata\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"internalType\":\"struct IRegistry.Profile\",\"name\":\"profile\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"isMemberOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isMemberOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isOwnerOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOwnerOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isOwnerOrMemberOfProfile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOwnerOrMemberOfProfile\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"_members\",\"type\":\"address[]\"}],\"name\":\"removeMembers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocol\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"pointer\",\"type\":\"string\"}],\"internalType\":\"struct Metadata\",\"name\":\"_metadata\",\"type\":\"tuple\"}],\"name\":\"updateProfileMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateProfileName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"anchor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_profileId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_pendingOwner\",\"type\":\"address\"}],\"name\":\"updateProfilePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"details\":\"The Registry Interface is used to interact with the Allo protocol and create profiles      that can be used to interact with the Allo protocol. The Registry is the main contract      that all other contracts interact with to get the 'Profile' information needed to      interact with the Allo protocol. The Registry is also used to create new profiles      and update existing profiles. The Registry is also used to add and remove members      from a profile. The Registry will not always be used in a strategy and will depend on      the strategy being used.\",\"events\":{\"ProfileCreated(bytes32,uint256,string,(uint256,string),address,address)\":{\"details\":\"Emitted when a profile is created. This will return your anchor address.\"},\"ProfileMetadataUpdated(bytes32,(uint256,string))\":{\"details\":\"Emitted when a profile's metadata is updated.\"},\"ProfileNameUpdated(bytes32,string,address)\":{\"details\":\"Emitted when a profile name is updated. This will update the anchor when the name is updated and return it.\"},\"ProfileOwnerUpdated(bytes32,address)\":{\"details\":\"Emitted when a profile owner is updated.\"},\"ProfilePendingOwnerUpdated(bytes32,address)\":{\"details\":\"Emitted when a profile pending owner is updated.\"}},\"kind\":\"dev\",\"methods\":{\"acceptProfileOwnership(bytes32)\":{\"details\":\"Accepts the pending 'owner' of the '_profileId' passed in Requirements: Only the pending owner can accept the ownership\",\"params\":{\"_profileId\":\"The 'profileId' to accept the ownership for\"}},\"addMembers(bytes32,address[])\":{\"details\":\"Adds members to the '_profileId' passed in Requirements: Only the 'Profile' owner can add members\",\"params\":{\"_members\":\"The members to add to the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to add members to\"}},\"createProfile(uint256,string,(uint256,string),address,address[])\":{\"details\":\"Creates a new 'Profile' and returns the 'profileId' of the new profile Note: The 'name' and 'nonce' are used to generate the 'anchor' address Requirements: None, anyone can create a new profile\",\"params\":{\"_members\":\"The 'members' to use to generate the 'anchor' address\",\"_metadata\":\"The 'Metadata' to use to generate the 'anchor' address\",\"_name\":\"The name to use to generate the 'anchor' address\",\"_nonce\":\"The nonce to use to generate the 'anchor' address\",\"_owner\":\"The 'owner' to use to generate the 'anchor' address\"},\"returns\":{\"profileId\":\"The 'profileId' of the new profile\"}},\"getProfileByAnchor(address)\":{\"details\":\"Returns the 'Profile' for an '_anchor' passed\",\"params\":{\"_anchor\":\"The 'anchor' to return the 'Profile' for\"},\"returns\":{\"profile\":\"The 'Profile' for the '_anchor' passed\"}},\"getProfileById(bytes32)\":{\"details\":\"Returns the 'Profile' for a '_profileId' passed\",\"params\":{\"_profileId\":\"The 'profileId' to return the 'Profile' for\"},\"returns\":{\"profile\":\"The 'Profile' for the '_profileId' passed\"}},\"isMemberOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is a member of the '_profileId' passed in\",\"params\":{\"_member\":\"The 'member' to check if they are a member of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is a member of\"},\"returns\":{\"isMemberOfProfile\":\"A boolean if the '_account' is a member of the '_profileId' passed in\"}},\"isOwnerOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is an owner of the '_profileId' passed in\",\"params\":{\"_owner\":\"The 'owner' to check if they are an owner of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is an owner of\"},\"returns\":{\"isOwnerOfProfile\":\"A boolean if the '_account' is an owner of the '_profileId' passed in\"}},\"isOwnerOrMemberOfProfile(bytes32,address)\":{\"details\":\"Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\",\"params\":{\"_account\":\"The 'account' to check if they are a member or owner of the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to check if the '_account' is a member or owner of\"},\"returns\":{\"isOwnerOrMemberOfProfile\":\"A boolean if the '_account' is a member or owner of the '_profileId' passed in\"}},\"recoverFunds(address,address)\":{\"details\":\"Recovers funds from the contract Requirements: Must be the Allo owner\",\"params\":{\"_recipient\":\"The recipient of the recovered funds\",\"_token\":\"The token you want to use to recover funds\"}},\"removeMembers(bytes32,address[])\":{\"details\":\"Removes members from the '_profileId' passed in Requirements: Only the 'Profile' owner can remove members\",\"params\":{\"_members\":\"The members to remove from the '_profileId' passed in\",\"_profileId\":\"The 'profileId' to remove members from\"}},\"updateProfileMetadata(bytes32,(uint256,string))\":{\"details\":\"Updates the 'Metadata' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the metadata\",\"params\":{\"_metadata\":\"The new 'Metadata' value\",\"_profileId\":\"The 'profileId' to update the metadata for\"}},\"updateProfileName(bytes32,string)\":{\"details\":\"Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address Requirements: Only the 'Profile' owner can update the name Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'       so please use caution. You can always recreate your 'anchor' address by updating the name back       to the original name used to create the profile.\",\"params\":{\"_name\":\"The new 'name' value\",\"_profileId\":\"The 'profileId' to update the name for\"},\"returns\":{\"anchor\":\"The new 'anchor' address\"}},\"updateProfilePendingOwner(bytes32,address)\":{\"details\":\"Updates the pending 'owner' of the '_profileId' passed in Requirements: Only the 'Profile' owner can update the pending owner\",\"params\":{\"_pendingOwner\":\"The new pending 'owner' value\",\"_profileId\":\"The 'profileId' to update the pending owner for\"}}},\"title\":\"IRegistry Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for the Registry contract and exposes all functions needed to use the Registry         within the Allo protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x96444e1b6b4adf69d76debd36a792d618e50a7902248ed84b6f07ccdab946893\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eee957068fb48e486d8186d61e8a002a85a0e0004763c88ba03552afb47f3bf5\",\"dweb:/ipfs/QmWawMnwBMj8tyUoL6RMJtXbeSZUqLUN7iFieQqgUnFYro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface for the Registry contract and exposes all functions needed to use the Registry         within the Allo protocol.",
						"version": 1
					}
				}
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol": {
				"IStrategy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Allocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipientAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Distributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "poolId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"name": "PoolActive",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientId",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "Registered",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "allocate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllo",
							"outputs": [
								{
									"internalType": "contract IAllo",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_recipientIds",
									"type": "address[]"
								},
								{
									"internalType": "bytes[]",
									"name": "_data",
									"type": "bytes[]"
								}
							],
							"name": "getPayouts",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "recipientAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct IStrategy.PayoutSummary[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPoolId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipientId",
									"type": "address"
								}
							],
							"name": "getRecipientStatus",
							"outputs": [
								{
									"internalType": "enum IStrategy.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStrategyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "increasePoolAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_poolId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isPoolActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_allocator",
									"type": "address"
								}
							],
							"name": "isValidAllocator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								}
							],
							"name": "registerRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>",
						"events": {
							"Allocated(address,uint256,address,address)": {
								"params": {
									"amount": "The amount allocated",
									"recipientId": "The ID of the recipient",
									"token": "The token allocated"
								}
							},
							"Distributed(address,address,uint256,address)": {
								"params": {
									"amount": "The amount distributed",
									"recipientAddress": "The recipient",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							},
							"Initialized(uint256,bytes)": {
								"params": {
									"data": "The data passed to the 'initialize' function",
									"poolId": "The ID of the pool"
								}
							},
							"PoolActive(bool)": {
								"params": {
									"active": "The status of the pool"
								}
							},
							"Registered(address,bytes,address)": {
								"params": {
									"data": "The data passed to the 'registerRecipient' function",
									"recipientId": "The ID of the recipient",
									"sender": "The sender"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allocate(bytes,address)": {
								"details": "The encoded '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to allocate to the recipient",
									"_sender": "The address of the sender"
								}
							},
							"distribute(address[],bytes,address)": {
								"details": "most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference this contract will need to track the amount paid already, so that it doesn't double pay."
							},
							"getAllo()": {
								"returns": {
									"_0": "The 'Allo' contract"
								}
							},
							"getPayouts(address[],bytes[])": {
								"details": "Input the values you would send to distribute(), get the amounts each recipient in the array would receive.      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.",
								"params": {
									"_data": "The encoded data",
									"_recipientIds": "The IDs of the recipients"
								}
							},
							"getPoolAmount()": {
								"returns": {
									"_0": "The balance of the pool"
								}
							},
							"getPoolId()": {
								"returns": {
									"_0": "The ID of the pool"
								}
							},
							"getRecipientStatus(address)": {
								"params": {
									"_recipientId": "The ID of the recipient"
								},
								"returns": {
									"_0": "The status of the recipient"
								}
							},
							"getStrategyId()": {
								"returns": {
									"_0": "The ID of the strategy"
								}
							},
							"increasePoolAmount(uint256)": {
								"params": {
									"_amount": "The amount to increase the pool by"
								}
							},
							"initialize(uint256,bytes)": {
								"params": {
									"_data": "The encoded data",
									"_poolId": "The ID of the pool"
								}
							},
							"isPoolActive()": {
								"returns": {
									"_0": "Whether the pool is active or not"
								}
							},
							"isValidAllocator(address)": {
								"params": {
									"_allocator": "The allocator to check"
								},
								"returns": {
									"_0": "Whether the allocator is valid or not"
								}
							},
							"registerRecipient(bytes,address)": {
								"details": "Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional      functions should be added to allow the owner to check this. The owner could also check attestations directly      and then accept for instance. The '_data' will be determined by the strategy implementation.",
								"params": {
									"_data": "The data to use to register the recipient",
									"_sender": "The address of the sender"
								},
								"returns": {
									"_0": "The ID of the recipient"
								}
							}
						},
						"title": "IStrategy Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allocate(bytes,address)": "ef2920fc",
							"distribute(address[],bytes,address)": "0a6f0ee9",
							"getAllo()": "15cc481e",
							"getPayouts(address[],bytes[])": "b2b878d0",
							"getPoolAmount()": "4ab4ba42",
							"getPoolId()": "38fff2d0",
							"getRecipientStatus(address)": "eb11af93",
							"getStrategyId()": "42fda9c7",
							"increasePoolAmount(uint256)": "f5b0dfb7",
							"initialize(uint256,bytes)": "edd146cc",
							"isPoolActive()": "df868ed3",
							"isValidAllocator(address)": "4d31d087",
							"registerRecipient(bytes,address)": "2bbe0cae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Allocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"PoolActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"allocate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllo\",\"outputs\":[{\"internalType\":\"contract IAllo\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_recipientIds\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_data\",\"type\":\"bytes[]\"}],\"name\":\"getPayouts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IStrategy.PayoutSummary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipientId\",\"type\":\"address\"}],\"name\":\"getRecipientStatus\",\"outputs\":[{\"internalType\":\"enum IStrategy.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStrategyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increasePoolAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPoolActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocator\",\"type\":\"address\"}],\"name\":\"isValidAllocator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"registerRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\",\"events\":{\"Allocated(address,uint256,address,address)\":{\"params\":{\"amount\":\"The amount allocated\",\"recipientId\":\"The ID of the recipient\",\"token\":\"The token allocated\"}},\"Distributed(address,address,uint256,address)\":{\"params\":{\"amount\":\"The amount distributed\",\"recipientAddress\":\"The recipient\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}},\"Initialized(uint256,bytes)\":{\"params\":{\"data\":\"The data passed to the 'initialize' function\",\"poolId\":\"The ID of the pool\"}},\"PoolActive(bool)\":{\"params\":{\"active\":\"The status of the pool\"}},\"Registered(address,bytes,address)\":{\"params\":{\"data\":\"The data passed to the 'registerRecipient' function\",\"recipientId\":\"The ID of the recipient\",\"sender\":\"The sender\"}}},\"kind\":\"dev\",\"methods\":{\"allocate(bytes,address)\":{\"details\":\"The encoded '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to allocate to the recipient\",\"_sender\":\"The address of the sender\"}},\"distribute(address[],bytes,address)\":{\"details\":\"most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference this contract will need to track the amount paid already, so that it doesn't double pay.\"},\"getAllo()\":{\"returns\":{\"_0\":\"The 'Allo' contract\"}},\"getPayouts(address[],bytes[])\":{\"details\":\"Input the values you would send to distribute(), get the amounts each recipient in the array would receive.      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\",\"params\":{\"_data\":\"The encoded data\",\"_recipientIds\":\"The IDs of the recipients\"}},\"getPoolAmount()\":{\"returns\":{\"_0\":\"The balance of the pool\"}},\"getPoolId()\":{\"returns\":{\"_0\":\"The ID of the pool\"}},\"getRecipientStatus(address)\":{\"params\":{\"_recipientId\":\"The ID of the recipient\"},\"returns\":{\"_0\":\"The status of the recipient\"}},\"getStrategyId()\":{\"returns\":{\"_0\":\"The ID of the strategy\"}},\"increasePoolAmount(uint256)\":{\"params\":{\"_amount\":\"The amount to increase the pool by\"}},\"initialize(uint256,bytes)\":{\"params\":{\"_data\":\"The encoded data\",\"_poolId\":\"The ID of the pool\"}},\"isPoolActive()\":{\"returns\":{\"_0\":\"Whether the pool is active or not\"}},\"isValidAllocator(address)\":{\"params\":{\"_allocator\":\"The allocator to check\"},\"returns\":{\"_0\":\"Whether the allocator is valid or not\"}},\"registerRecipient(bytes,address)\":{\"details\":\"Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional      functions should be added to allow the owner to check this. The owner could also check attestations directly      and then accept for instance. The '_data' will be determined by the strategy implementation.\",\"params\":{\"_data\":\"The data to use to register the recipient\",\"_sender\":\"The address of the sender\"},\"returns\":{\"_0\":\"The ID of the recipient\"}}},\"title\":\"IStrategy Interface\",\"version\":1},\"userdoc\":{\"events\":{\"Allocated(address,uint256,address,address)\":{\"notice\":\"Emitted when a recipient is allocated to.\"},\"Distributed(address,address,uint256,address)\":{\"notice\":\"Emitted when tokens are distributed.\"},\"Initialized(uint256,bytes)\":{\"notice\":\"Emitted when strategy is initialized.\"},\"PoolActive(bool)\":{\"notice\":\"Emitted when pool is set to active status.\"},\"Registered(address,bytes,address)\":{\"notice\":\"Emitted when a recipient is registered.\"}},\"kind\":\"user\",\"methods\":{\"allocate(bytes,address)\":{\"notice\":\"This will allocate to a recipient.\"},\"distribute(address[],bytes,address)\":{\"notice\":\"This will distribute funds (tokens) to recipients.\"},\"getAllo()\":{\"notice\":\"Getter for the address of the Allo contract.\"},\"getPayouts(address[],bytes[])\":{\"notice\":\"Checks the amount allocated to a recipient for distribution.\"},\"getPoolAmount()\":{\"notice\":\"Checks the amount of tokens in the pool.\"},\"getPoolId()\":{\"notice\":\"Getter for the 'poolId' for this strategy.\"},\"getRecipientStatus(address)\":{\"notice\":\"Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those      since there is no need for Pending or Rejected.\"},\"getStrategyId()\":{\"notice\":\"Getter for the 'id' of the strategy.\"},\"increasePoolAmount(uint256)\":{\"notice\":\"Increases the balance of the pool.\"},\"initialize(uint256,bytes)\":{\"notice\":\"@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize().\"},\"isPoolActive()\":{\"notice\":\"whether pool is active.\"},\"isValidAllocator(address)\":{\"notice\":\"Checks whether a allocator is valid or not, will usually be true for all strategies      and will depend on the strategy implementation.\"},\"registerRecipient(bytes,address)\":{\"notice\":\"This will register a recipient, set their status (and any other strategy specific values), and         return the ID of the recipient.\"}},\"notice\":\"BaseStrategy is the base contract that all strategies should inherit from and uses this interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol\":{\"keccak256\":\"0xe1ccd35e03787b4a5beb138c336f5fc617f4885726bfdf3c82a642499e21f785\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7369418f7c7a3a16c38ed506ceb4e873f0806e6d68db2f682fa46b0e6070a74a\",\"dweb:/ipfs/Qmc4MiHqKdPdd7H7me8h5LsjHMt7KgAdUg5phGUTHMVsdc\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol\":{\"keccak256\":\"0x3a2edcea094551fc86612932d42bd6b4682d20fb7b46cfdbeee39ba85367749f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c922d497fdfdd2f43a009959429c761d1fb61501ca5d91abf9ae873ac58d437e\",\"dweb:/ipfs/QmaiUx4uVajytmFJQJdGh2mJK2RKn4xNVrARurJdF3iwzA\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol\":{\"keccak256\":\"0xebd143a6729d7fe650ffd83a2dc1941e19ce9285526e5cb4d6c32adba3f3cf23\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://994ed7ab48860e92ffd369e6741149760a725c5ddf4fc55e33c31f408bd25487\",\"dweb:/ipfs/QmV6bzxJQo5T13Kynv7mqGJQSbNyZ4ZJfTEjWUymxmpfpH\"]},\"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol\":{\"keccak256\":\"0x96444e1b6b4adf69d76debd36a792d618e50a7902248ed84b6f07ccdab946893\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://eee957068fb48e486d8186d61e8a002a85a0e0004763c88ba03552afb47f3bf5\",\"dweb:/ipfs/QmWawMnwBMj8tyUoL6RMJtXbeSZUqLUN7iFieQqgUnFYro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Allocated(address,uint256,address,address)": {
								"notice": "Emitted when a recipient is allocated to."
							},
							"Distributed(address,address,uint256,address)": {
								"notice": "Emitted when tokens are distributed."
							},
							"Initialized(uint256,bytes)": {
								"notice": "Emitted when strategy is initialized."
							},
							"PoolActive(bool)": {
								"notice": "Emitted when pool is set to active status."
							},
							"Registered(address,bytes,address)": {
								"notice": "Emitted when a recipient is registered."
							}
						},
						"kind": "user",
						"methods": {
							"allocate(bytes,address)": {
								"notice": "This will allocate to a recipient."
							},
							"distribute(address[],bytes,address)": {
								"notice": "This will distribute funds (tokens) to recipients."
							},
							"getAllo()": {
								"notice": "Getter for the address of the Allo contract."
							},
							"getPayouts(address[],bytes[])": {
								"notice": "Checks the amount allocated to a recipient for distribution."
							},
							"getPoolAmount()": {
								"notice": "Checks the amount of tokens in the pool."
							},
							"getPoolId()": {
								"notice": "Getter for the 'poolId' for this strategy."
							},
							"getRecipientStatus(address)": {
								"notice": "Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those      since there is no need for Pending or Rejected."
							},
							"getStrategyId()": {
								"notice": "Getter for the 'id' of the strategy."
							},
							"increasePoolAmount(uint256)": {
								"notice": "Increases the balance of the pool."
							},
							"initialize(uint256,bytes)": {
								"notice": "@dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,      use it, and then call super.initialize()."
							},
							"isPoolActive()": {
								"notice": "whether pool is active."
							},
							"isValidAllocator(address)": {
								"notice": "Checks whether a allocator is valid or not, will usually be true for all strategies      and will depend on the strategy implementation."
							},
							"registerRecipient(bytes,address)": {
								"notice": "This will register a recipient, set their status (and any other strategy specific values), and         return the ID of the recipient."
							}
						},
						"notice": "BaseStrategy is the base contract that all strategies should inherit from and uses this interface.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/core/MADeliveryStrategy.sol:49:42:\n   |\n49 |     function initialize(uint256 _poolId, bytes memory _data) external{\n   |                                          ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1894,
					"file": "contracts/core/MADeliveryStrategy.sol",
					"start": 1876
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/core/MADeliveryStrategy.sol:68:32:\n   |\n68 |     function _isValidAllocator(address _allocator) internal pure override returns (bool){\n   |                                ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2487,
					"file": "contracts/core/MADeliveryStrategy.sol",
					"start": 2469
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/core/MADeliveryStrategy.sol:115:58:\n    |\n115 |     function _distribute(address[] memory _recipientIds, bytes memory _data, address _sender) internal override {\n    |                                                          ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5295,
					"file": "contracts/core/MADeliveryStrategy.sol",
					"start": 5277
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/core/MADeliveryStrategy.sol:137:14:\n    |\n137 |             (uint256 [] memory sendIds_, uint256 totalPaid_) = payoutDirectives(paymentDirectives_, projectAddress_);\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6540,
					"file": "contracts/core/MADeliveryStrategy.sol",
					"start": 6514
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/core/MADeliveryStrategy.sol:191:47:\n    |\n191 |     function _getPayout(address _recipientId, bytes memory _data)\n    |                                               ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9326,
					"file": "contracts/core/MADeliveryStrategy.sol",
					"start": 9308
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"contracts/core/MADeliveryStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/core/MADeliveryStrategy.sol",
					"exportedSymbols": {
						"Contributor": [
							1634
						],
						"ContributorAssignment": [
							1624
						],
						"Deliverable": [
							1692
						],
						"DeliverableStatus": [
							1609
						],
						"DestinationConfig": [
							1592
						],
						"Gilt": [
							1563
						],
						"GiltClaim": [
							1580
						],
						"IAllo": [
							2089
						],
						"IERC20": [
							77
						],
						"IMProject": [
							1514
						],
						"IMRegister": [
							1546
						],
						"IMVersion": [
							1705
						],
						"IMargari": [
							1749
						],
						"IMargariAlloStrategy": [
							1752
						],
						"IRegistry": [
							2282
						],
						"IStrategy": [
							2451
						],
						"MADeliveryStrategy": [
							820
						],
						"MBaseStrategy": [
							1429
						],
						"Metadata": [
							2461
						],
						"PaymentDirective": [
							1674
						],
						"PayoutStatus": [
							1615
						],
						"Project": [
							1653
						],
						"ProjectAllocation": [
							1658
						],
						"SendStatement": [
							1603
						],
						"TransmittedGilt": [
							1573
						]
					},
					"id": 821,
					"license": "APACHE 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:1"
						},
						{
							"absolutePath": "contracts/interfaces/IMVersion.sol",
							"file": "../interfaces/IMVersion.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1706,
							"src": "68:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMRegister.sol",
							"file": "../interfaces/IMRegister.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1547,
							"src": "107:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMargariAlloStrategy.sol",
							"file": "../interfaces/IMargariAlloStrategy.sol",
							"id": 82,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1753,
							"src": "147:48:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMStructs.sol",
							"file": "../interfaces/IMStructs.sol",
							"id": 83,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1693,
							"src": "197:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMProject.sol",
							"file": "../interfaces/IMProject.sol",
							"id": 84,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1515,
							"src": "236:37:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IMargari.sol",
							"file": "../interfaces/IMargari.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1750,
							"src": "275:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/core/MBaseStrategy.sol",
							"file": "./MBaseStrategy.sol",
							"id": 86,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 1430,
							"src": "315:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol",
							"file": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol",
							"id": 88,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 2090,
							"src": "363:109:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 87,
										"name": "IAllo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2089,
										"src": "371:5:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol",
							"file": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol",
							"id": 90,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 2283,
							"src": "474:117:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 89,
										"name": "IRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2282,
										"src": "482:9:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol",
							"file": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol",
							"id": 92,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 2462,
							"src": "595:114:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 91,
										"name": "Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2461,
										"src": "603:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 93,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 78,
							"src": "713:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 94,
										"name": "IMargariAlloStrategy",
										"nameLocations": [
											"804:20:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1752,
										"src": "804:20:1"
									},
									"id": 95,
									"nodeType": "InheritanceSpecifier",
									"src": "804:20:1"
								},
								{
									"baseName": {
										"id": 96,
										"name": "IMVersion",
										"nameLocations": [
											"826:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "826:9:1"
									},
									"id": 97,
									"nodeType": "InheritanceSpecifier",
									"src": "826:9:1"
								},
								{
									"baseName": {
										"id": 98,
										"name": "MBaseStrategy",
										"nameLocations": [
											"837:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1429,
										"src": "837:13:1"
									},
									"id": 99,
									"nodeType": "InheritanceSpecifier",
									"src": "837:13:1"
								}
							],
							"canonicalName": "MADeliveryStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 820,
							"linearizedBaseContracts": [
								820,
								1429,
								2451,
								1705,
								1752
							],
							"name": "MADeliveryStrategy",
							"nameLocation": "782:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 102,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "877:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "861:55:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 100,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "861:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "52455345525645445f4d5f415f44454c49564552595f5354524154454759",
										"id": 101,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "884:32:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_a6759a4965837e0b6f19a75eb248ec564ee1647baef3ef458e2b4f74b8c756d5",
											"typeString": "literal_string \"RESERVED_M_A_DELIVERY_STRATEGY\""
										},
										"value": "RESERVED_M_A_DELIVERY_STRATEGY"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 105,
									"mutability": "constant",
									"name": "version",
									"nameLocation": "940:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "923:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "923:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 104,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "950:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 108,
									"mutability": "constant",
									"name": "ALLO_CA",
									"nameLocation": "977:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "961:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 106,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "961:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "52455345525645445f414c4c4f5f434f5245",
										"id": 107,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "987:20:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_117770f7529b0dfdf2ce9d1e14918e804c6f4460d96b5c222edbbdf173b21578",
											"typeString": "literal_string \"RESERVED_ALLO_CORE\""
										},
										"value": "RESERVED_ALLO_CORE"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 111,
									"mutability": "constant",
									"name": "ALLO_PROFILE_REGISTER_CA",
									"nameLocation": "1030:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1014:75:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 109,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1014:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "52455345525645445f414c4c4f5f50524f46494c455f5245474953544552",
										"id": 110,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1057:32:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2933f00bd9784ac29b0562792f26907b0d046dd587fb76719a3f523f6baa5175",
											"typeString": "literal_string \"RESERVED_ALLO_PROFILE_REGISTER\""
										},
										"value": "RESERVED_ALLO_PROFILE_REGISTER"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 114,
									"mutability": "constant",
									"name": "MARGARI_CA",
									"nameLocation": "1112:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1096:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 112,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1096:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "52455345525645445f4d4152474152495f434f5245",
										"id": 113,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1125:23:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_b8b7478a2dcc7a5f78507627c073b623d78a71646f2e3e0ace19f5a4fdf14499",
											"typeString": "literal_string \"RESERVED_MARGARI_CORE\""
										},
										"value": "RESERVED_MARGARI_CORE"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 116,
									"mutability": "immutable",
									"name": "self",
									"nameLocation": "1175:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1157:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 115,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1157:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 119,
									"mutability": "mutable",
									"name": "register",
									"nameLocation": "1200:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1189:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMRegister_$1546",
										"typeString": "contract IMRegister"
									},
									"typeName": {
										"id": 118,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 117,
											"name": "IMRegister",
											"nameLocations": [
												"1189:10:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1546,
											"src": "1189:10:1"
										},
										"referencedDeclaration": 1546,
										"src": "1189:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMRegister_$1546",
											"typeString": "contract IMRegister"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "projects",
									"nameLocation": "1227:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1216:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 120,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1216:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 121,
										"nodeType": "ArrayTypeName",
										"src": "1216:10:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "allocationByProject",
									"nameLocation": "1270:19:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1244:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 125,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 123,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1252:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1244:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 124,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1261:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "remainingAllocationByProject",
									"nameLocation": "1322:28:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1296:54:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 129,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 127,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1304:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1296:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 128,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1313:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "totalPaidoutByProject",
									"nameLocation": "1383:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1357:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 133,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 131,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1365:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1357:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 132,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1374:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "isValidAllocatorByAddress",
									"nameLocation": "1435:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1412:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 137,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 135,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1420:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1412:22:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 136,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1429:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "paymentDirectiveBySendId",
									"nameLocation": "1503:24:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1468:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PaymentDirective_$1674_storage_$",
										"typeString": "mapping(uint256 => struct PaymentDirective)"
									},
									"typeName": {
										"id": 142,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 139,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1476:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1468:34:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PaymentDirective_$1674_storage_$",
											"typeString": "mapping(uint256 => struct PaymentDirective)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 141,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 140,
												"name": "PaymentDirective",
												"nameLocations": [
													"1485:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1674,
												"src": "1485:16:1"
											},
											"referencedDeclaration": 1674,
											"src": "1485:16:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PaymentDirective_$1674_storage_ptr",
												"typeString": "struct PaymentDirective"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "sendIdsByRecipient",
									"nameLocation": "1563:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1535:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 147,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 144,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1543:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1535:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 145,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1552:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 146,
											"nodeType": "ArrayTypeName",
											"src": "1552:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "totalPaidByRecipient",
									"nameLocation": "1615:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "1589:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 151,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 149,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1597:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1589:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 150,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1606:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1739:92:1",
										"statements": [
											{
												"expression": {
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "register",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "1750:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMRegister_$1546",
															"typeString": "contract IMRegister"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 167,
																"name": "_register",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "1772:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 166,
															"name": "IMRegister",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "1761:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMRegister_$1546_$",
																"typeString": "type(contract IMRegister)"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1761:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMRegister_$1546",
															"typeString": "contract IMRegister"
														}
													},
													"src": "1750:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMRegister_$1546",
														"typeString": "contract IMRegister"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1750:32:1"
											},
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 171,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1803:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 174,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1818:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MADeliveryStrategy_$820",
																	"typeString": "contract MADeliveryStrategy"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MADeliveryStrategy_$820",
																	"typeString": "contract MADeliveryStrategy"
																}
															],
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1810:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 172,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1810:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1810:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1803:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1803:20:1"
											}
										]
									},
									"id": 179,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 161,
													"name": "_allo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 156,
													"src": "1726:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 162,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 158,
													"src": "1733:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 163,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 160,
												"name": "MBaseStrategy",
												"nameLocations": [
													"1712:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1429,
												"src": "1712:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:27:1"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "_register",
												"nameLocation": "1665:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1657:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "_allo",
												"nameLocation": "1684:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1676:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1705:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1691:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1691:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:55:1"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1739:0:1"
									},
									"scope": 820,
									"src": "1645:186:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2421
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1904:36:1",
										"statements": [
											{
												"expression": {
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 186,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "1915:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 187,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "1924:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1915:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1915:16:1"
											}
										]
									},
									"functionSelector": "edd146cc",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1848:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "1867:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1859:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1889:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1876:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1876:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:37:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:0:1"
									},
									"scope": 820,
									"src": "1839:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1699
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "2011:31:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 102,
													"src": "2029:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "2022:11:1"
											}
										]
									},
									"functionSelector": "17d7de7c",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "1957:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1964:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "2004:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1990:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:21:1"
									},
									"scope": 820,
									"src": "1948:94:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1704
									],
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "2113:34:1",
										"statements": [
											{
												"expression": {
													"id": 204,
													"name": "version",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 105,
													"src": "2131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 203,
												"id": 205,
												"nodeType": "Return",
												"src": "2124:14:1"
											}
										]
									},
									"functionSelector": "0d8e6e2c",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nameLocation": "2059:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:2:1"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_version",
												"nameLocation": "2103:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2095:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:18:1"
									},
									"scope": 820,
									"src": "2050:97:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2230:35:1",
										"statements": [
											{
												"expression": {
													"id": 213,
													"name": "projects",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "2248:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 212,
												"id": 214,
												"nodeType": "Return",
												"src": "2241:15:1"
											}
										]
									},
									"functionSelector": "dcc60128",
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getProjects",
									"nameLocation": "2164:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2175:2:1"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_projects",
												"nameLocation": "2219:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2201:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 209,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2201:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 210,
													"nodeType": "ArrayTypeName",
													"src": "2201:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:29:1"
									},
									"scope": 820,
									"src": "2155:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1305
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "2526:31:1",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2544:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 224,
												"id": 226,
												"nodeType": "Return",
												"src": "2537:11:1"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2274:162:1",
										"text": "@notice Checks if the allocator is valid\n @param _allocator The allocator address\n @return 'true' if the allocator is valid, otherwise 'false'"
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidAllocator",
									"nameLocation": "2451:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 221,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2503:8:1"
									},
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "2477:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2469:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:20:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "2521:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2521:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2520:6:1"
									},
									"scope": 820,
									"src": "2442:115:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "2639:87:1",
										"statements": [
											{
												"expression": {
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 235,
															"name": "isValidAllocatorByAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "2650:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 237,
														"indexExpression": {
															"id": 236,
															"name": "_allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "2676:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2650:37:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2690:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2650:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "2650:44:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2713:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 234,
												"id": 242,
												"nodeType": "Return",
												"src": "2706:11:1"
											}
										]
									},
									"functionSelector": "41f44125",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addAllocator",
									"nameLocation": "2574:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "2595:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2587:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:21:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "_added",
												"nameLocation": "2631:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2626:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:13:1"
									},
									"scope": 820,
									"src": "2565:161:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1315
									],
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "3435:387:1",
										"statements": [
											{
												"assignments": [
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "projectAddress_",
														"nameLocation": "3454:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "3446:23:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 255,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3446:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 264,
												"initialValue": {
													"arguments": [
														{
															"id": 259,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3483:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3491:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 260,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3491:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 262,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3490:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														],
														"expression": {
															"id": 257,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3472:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3476:6:1",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "3472:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3472:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3446:54:1"
											},
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "project_",
														"nameLocation": "3522:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "3512:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMProject_$1514",
															"typeString": "contract IMProject"
														},
														"typeName": {
															"id": 266,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 265,
																"name": "IMProject",
																"nameLocations": [
																	"3512:9:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1514,
																"src": "3512:9:1"
															},
															"referencedDeclaration": 1514,
															"src": "3512:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMProject_$1514",
																"typeString": "contract IMProject"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"arguments": [
														{
															"id": 269,
															"name": "projectAddress_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "3543:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 268,
														"name": "IMProject",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "3533:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMProject_$1514_$",
															"typeString": "type(contract IMProject)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3533:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMProject_$1514",
														"typeString": "contract IMProject"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3512:47:1"
											},
											{
												"assignments": [
													274
												],
												"declarations": [
													{
														"constant": false,
														"id": 274,
														"mutability": "mutable",
														"name": "descriptor_",
														"nameLocation": "3585:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "3570:26:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
															"typeString": "struct Project"
														},
														"typeName": {
															"id": 273,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 272,
																"name": "Project",
																"nameLocations": [
																	"3570:7:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1653,
																"src": "3570:7:1"
															},
															"referencedDeclaration": 1653,
															"src": "3570:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Project_$1653_storage_ptr",
																"typeString": "struct Project"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 275,
															"name": "project_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "3599:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMProject_$1514",
																"typeString": "contract IMProject"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3608:20:1",
														"memberName": "getProjectDescriptor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1443,
														"src": "3599:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_struct$_Project_$1653_memory_ptr_$",
															"typeString": "function () view external returns (struct Project memory)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3599:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
														"typeString": "struct Project memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3570:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 281,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "3660:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 282,
																		"name": "descriptor_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "3669:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																			"typeString": "struct Project memory"
																		}
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3681:10:1",
																	"memberName": "alloPoolId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1640,
																	"src": "3669:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 284,
																		"name": "descriptor_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 274,
																		"src": "3693:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																			"typeString": "struct Project memory"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3705:13:1",
																	"memberName": "alloProfileId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1642,
																	"src": "3693:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 280,
																"name": "onlyAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "3650:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes32) view returns (bool)"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3650:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "206f72672061646d696e206f6e6c7920",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3721:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef1bb694c59caf41511e71fefbf8b79caf80d578a7846a1dc497f4d47758c0c0",
																"typeString": "literal_string \" org admin only \""
															},
															"value": " org admin only "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef1bb694c59caf41511e71fefbf8b79caf80d578a7846a1dc497f4d47758c0c0",
																"typeString": "literal_string \" org admin only \""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3642:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3642:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "3642:98:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "projectAddress_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "3765:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 290,
															"name": "projects",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "3751:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3760:4:1",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3751:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3751:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "3751:30:1"
											},
											{
												"expression": {
													"id": 296,
													"name": "projectAddress_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 256,
													"src": "3799:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 254,
												"id": 297,
												"nodeType": "Return",
												"src": "3792:22:1"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "2734:595:1",
										"text": "@notice This will register a recipient, set their status (and any other strategy specific values), and\n         return the ID of the recipient.\n @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\n      functions should be added to allow the owner to check this. The owner could also check attestations directly\n      and then Accept for instance.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return The ID of the recipient"
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerRecipient",
									"nameLocation": "3344:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 251,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3409:8:1"
									},
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3376:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3363:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3363:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "3391:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3383:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3362:37:1"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3427:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:9:1"
									},
									"scope": 820,
									"src": "3335:487:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1323
									],
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "4157:578:1",
										"statements": [
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "allocation_",
														"nameLocation": "4203:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "4178:36:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ProjectAllocation_$1658_memory_ptr",
															"typeString": "struct ProjectAllocation"
														},
														"typeName": {
															"id": 309,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 308,
																"name": "ProjectAllocation",
																"nameLocations": [
																	"4178:17:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1658,
																"src": "4178:17:1"
															},
															"referencedDeclaration": 1658,
															"src": "4178:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProjectAllocation_$1658_storage_ptr",
																"typeString": "struct ProjectAllocation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"arguments": [
														{
															"id": 313,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "4228:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 314,
																	"name": "ProjectAllocation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1658,
																	"src": "4236:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_ProjectAllocation_$1658_storage_ptr_$",
																		"typeString": "type(struct ProjectAllocation storage pointer)"
																	}
																}
															],
															"id": 315,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4235:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_ProjectAllocation_$1658_storage_ptr_$",
																"typeString": "type(struct ProjectAllocation storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_ProjectAllocation_$1658_storage_ptr_$",
																"typeString": "type(struct ProjectAllocation storage pointer)"
															}
														],
														"expression": {
															"id": 311,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4217:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4221:6:1",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "4217:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4217:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProjectAllocation_$1658_memory_ptr",
														"typeString": "struct ProjectAllocation memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4178:77:1"
											},
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "project_",
														"nameLocation": "4276:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "4266:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMProject_$1514",
															"typeString": "contract IMProject"
														},
														"typeName": {
															"id": 319,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 318,
																"name": "IMProject",
																"nameLocations": [
																	"4266:9:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1514,
																"src": "4266:9:1"
															},
															"referencedDeclaration": 1514,
															"src": "4266:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMProject_$1514",
																"typeString": "contract IMProject"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 322,
																"name": "allocation_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "4297:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProjectAllocation_$1658_memory_ptr",
																	"typeString": "struct ProjectAllocation memory"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4309:7:1",
															"memberName": "project",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1655,
															"src": "4297:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 321,
														"name": "IMProject",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "4287:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMProject_$1514_$",
															"typeString": "type(contract IMProject)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMProject_$1514",
														"typeString": "contract IMProject"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4266:51:1"
											},
											{
												"assignments": [
													328
												],
												"declarations": [
													{
														"constant": false,
														"id": 328,
														"mutability": "mutable",
														"name": "descriptor_",
														"nameLocation": "4343:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "4328:26:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
															"typeString": "struct Project"
														},
														"typeName": {
															"id": 327,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 326,
																"name": "Project",
																"nameLocations": [
																	"4328:7:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1653,
																"src": "4328:7:1"
															},
															"referencedDeclaration": 1653,
															"src": "4328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Project_$1653_storage_ptr",
																"typeString": "struct Project"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 332,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 329,
															"name": "project_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "4357:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMProject_$1514",
																"typeString": "contract IMProject"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4366:20:1",
														"memberName": "getProjectDescriptor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1443,
														"src": "4357:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_struct$_Project_$1653_memory_ptr_$",
															"typeString": "function () view external returns (struct Project memory)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4357:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
														"typeString": "struct Project memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4328:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 335,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "4419:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 336,
																		"name": "descriptor_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "4428:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																			"typeString": "struct Project memory"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4440:10:1",
																	"memberName": "alloPoolId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1640,
																	"src": "4428:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 338,
																		"name": "descriptor_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "4452:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																			"typeString": "struct Project memory"
																		}
																	},
																	"id": 339,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4464:13:1",
																	"memberName": "alloProfileId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1642,
																	"src": "4452:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 334,
																"name": "onlyAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "4409:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes32) view returns (bool)"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4409:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "206f72672061646d696e206f6e6c7920",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4480:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef1bb694c59caf41511e71fefbf8b79caf80d578a7846a1dc497f4d47758c0c0",
																"typeString": "literal_string \" org admin only \""
															},
															"value": " org admin only "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef1bb694c59caf41511e71fefbf8b79caf80d578a7846a1dc497f4d47758c0c0",
																"typeString": "literal_string \" org admin only \""
															}
														],
														"id": 333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4401:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4401:98:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "4401:98:1"
											},
											{
												"expression": {
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 344,
															"name": "allocationByProject",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4510:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 347,
														"indexExpression": {
															"expression": {
																"id": 345,
																"name": "allocation_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "4530:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProjectAllocation_$1658_memory_ptr",
																	"typeString": "struct ProjectAllocation memory"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4542:7:1",
															"memberName": "project",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1655,
															"src": "4530:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4510:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 348,
															"name": "allocation_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "4553:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProjectAllocation_$1658_memory_ptr",
																"typeString": "struct ProjectAllocation memory"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4565:13:1",
														"memberName": "newAllocation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1657,
														"src": "4553:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4510:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "4510:68:1"
											},
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 352,
															"name": "remainingAllocationByProject",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "4590:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 355,
														"indexExpression": {
															"expression": {
																"id": 353,
																"name": "allocation_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "4619:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProjectAllocation_$1658_memory_ptr",
																	"typeString": "struct ProjectAllocation memory"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4631:7:1",
															"memberName": "project",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1655,
															"src": "4619:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4590:49:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 356,
																"name": "allocationByProject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "4642:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 359,
															"indexExpression": {
																"expression": {
																	"id": 357,
																	"name": "allocation_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "4662:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProjectAllocation_$1658_memory_ptr",
																		"typeString": "struct ProjectAllocation memory"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4674:7:1",
																"memberName": "project",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1655,
																"src": "4662:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4642:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"baseExpression": {
																"id": 360,
																"name": "totalPaidoutByProject",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4685:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 363,
															"indexExpression": {
																"expression": {
																	"id": 361,
																	"name": "allocation_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "4707:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProjectAllocation_$1658_memory_ptr",
																		"typeString": "struct ProjectAllocation memory"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4719:7:1",
																"memberName": "project",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1655,
																"src": "4707:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4685:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4642:85:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4590:137:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "4590:137:1"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3830:248:1",
										"text": "@notice This will allocate to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_allocate",
									"nameLocation": "4093:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 306,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4149:8:1"
									},
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "4116:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4103:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 301,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4103:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "4131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:37:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4157:0:1"
									},
									"scope": 820,
									"src": "4084:651:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1334
									],
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "5332:1386:1",
										"statements": [
											{
												"body": {
													"id": 518,
													"nodeType": "Block",
													"src": "5402:1309:1",
													"statements": [
														{
															"assignments": [
																392
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 392,
																	"mutability": "mutable",
																	"name": "projectAddress_",
																	"nameLocation": "5425:15:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "5417:23:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 391,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5417:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 396,
															"initialValue": {
																"baseExpression": {
																	"id": 393,
																	"name": "_recipientIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "5443:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 395,
																"indexExpression": {
																	"id": 394,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "5457:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5443:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5417:42:1"
														},
														{
															"assignments": [
																399
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 399,
																	"mutability": "mutable",
																	"name": "project_",
																	"nameLocation": "5484:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "5474:18:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMProject_$1514",
																		"typeString": "contract IMProject"
																	},
																	"typeName": {
																		"id": 398,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 397,
																			"name": "IMProject",
																			"nameLocations": [
																				"5474:9:1"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1514,
																			"src": "5474:9:1"
																		},
																		"referencedDeclaration": 1514,
																		"src": "5474:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMProject_$1514",
																			"typeString": "contract IMProject"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 403,
															"initialValue": {
																"arguments": [
																	{
																		"id": 401,
																		"name": "projectAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5505:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 400,
																	"name": "IMProject",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "5495:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IMProject_$1514_$",
																		"typeString": "type(contract IMProject)"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5495:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IMProject_$1514",
																	"typeString": "contract IMProject"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5474:47:1"
														},
														{
															"assignments": [
																406
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 406,
																	"mutability": "mutable",
																	"name": "descriptor_",
																	"nameLocation": "5552:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "5537:26:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																		"typeString": "struct Project"
																	},
																	"typeName": {
																		"id": 405,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 404,
																			"name": "Project",
																			"nameLocations": [
																				"5537:7:1"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1653,
																			"src": "5537:7:1"
																		},
																		"referencedDeclaration": 1653,
																		"src": "5537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Project_$1653_storage_ptr",
																			"typeString": "struct Project"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 410,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 407,
																		"name": "project_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "5566:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMProject_$1514",
																			"typeString": "contract IMProject"
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5575:20:1",
																	"memberName": "getProjectDescriptor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1443,
																	"src": "5566:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_struct$_Project_$1653_memory_ptr_$",
																		"typeString": "function () view external returns (struct Project memory)"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5566:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																	"typeString": "struct Project memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 413,
																				"name": "_sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 376,
																				"src": "5630:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 414,
																					"name": "descriptor_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 406,
																					"src": "5639:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																						"typeString": "struct Project memory"
																					}
																				},
																				"id": 415,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5651:10:1",
																				"memberName": "alloPoolId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1640,
																				"src": "5639:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 416,
																					"name": "descriptor_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 406,
																					"src": "5663:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																						"typeString": "struct Project memory"
																					}
																				},
																				"id": 417,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5675:13:1",
																				"memberName": "alloProfileId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1642,
																				"src": "5663:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 412,
																			"name": "onlyAdmin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "5620:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_bytes32_$returns$_t_bool_$",
																				"typeString": "function (address,uint256,bytes32) view returns (bool)"
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5620:69:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "726563697069656e74203c3e2073656e646572206d69732d6d61746368",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5691:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e09022697c85a7a7440752a329f6477a74e3db5b046ff4459bbe8c9847e2790b",
																			"typeString": "literal_string \"recipient <> sender mis-match\""
																		},
																		"value": "recipient <> sender mis-match"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e09022697c85a7a7440752a329f6477a74e3db5b046ff4459bbe8c9847e2790b",
																			"typeString": "literal_string \"recipient <> sender mis-match\""
																		}
																	],
																	"id": 411,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5612:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5612:111:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 421,
															"nodeType": "ExpressionStatement",
															"src": "5612:111:1"
														},
														{
															"assignments": [
																424
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 424,
																	"mutability": "mutable",
																	"name": "erc20_",
																	"nameLocation": "5747:6:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "5740:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	"typeName": {
																		"id": 423,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 422,
																			"name": "IERC20",
																			"nameLocations": [
																				"5740:6:1"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 77,
																			"src": "5740:6:1"
																		},
																		"referencedDeclaration": 77,
																		"src": "5740:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 429,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 426,
																			"name": "descriptor_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 406,
																			"src": "5763:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																				"typeString": "struct Project memory"
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5775:14:1",
																		"memberName": "payoutCurrency",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1644,
																		"src": "5763:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 425,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 77,
																	"src": "5756:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5756:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5740:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 431,
																				"name": "remainingAllocationByProject",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 130,
																				"src": "5813:28:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 435,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 432,
																					"name": "_recipientIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 372,
																					"src": "5842:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 434,
																				"indexExpression": {
																					"id": 433,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 381,
																					"src": "5856:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5842:16:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5813:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"expression": {
																				"id": 436,
																				"name": "descriptor_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 406,
																				"src": "5863:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																					"typeString": "struct Project memory"
																				}
																			},
																			"id": 437,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5875:6:1",
																			"memberName": "budget",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1646,
																			"src": "5863:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5813:68:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "627564676574203c3e2072656d61696e696e6720616c6c6f636174696f6e206d69732d6d61746368",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5883:42:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d30e69c99980e9196594fc9e631f2a27d78e3e2bdb28ce5149b307d64a620f1b",
																			"typeString": "literal_string \"budget <> remaining allocation mis-match\""
																		},
																		"value": "budget <> remaining allocation mis-match"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_d30e69c99980e9196594fc9e631f2a27d78e3e2bdb28ce5149b307d64a620f1b",
																			"typeString": "literal_string \"budget <> remaining allocation mis-match\""
																		}
																	],
																	"id": 430,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5805:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5805:121:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 441,
															"nodeType": "ExpressionStatement",
															"src": "5805:121:1"
														},
														{
															"expression": {
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 442,
																		"name": "remainingAllocationByProject",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "5943:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 446,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 443,
																			"name": "_recipientIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "5972:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 445,
																		"indexExpression": {
																			"id": 444,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 381,
																			"src": "5986:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5972:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5943:46:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "descriptor_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "5993:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																			"typeString": "struct Project memory"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6005:6:1",
																	"memberName": "budget",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1646,
																	"src": "5993:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5943:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "5943:68:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 453,
																			"name": "erc20_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 424,
																			"src": "6039:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6031:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 451,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6031:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6031:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 455,
																	"name": "NATIVE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "6050:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6031:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 489,
																"nodeType": "Block",
																"src": "6198:204:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 474,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 470,
																								"name": "self",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 116,
																								"src": "6242:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 468,
																								"name": "erc20_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 424,
																								"src": "6225:6:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$77",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 469,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6232:9:1",
																							"memberName": "balanceOf",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 34,
																							"src": "6225:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view external returns (uint256)"
																							}
																						},
																						"id": 471,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6225:22:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 472,
																							"name": "descriptor_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 406,
																							"src": "6251:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																								"typeString": "struct Project memory"
																							}
																						},
																						"id": 473,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6263:6:1",
																						"memberName": "budget",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1646,
																						"src": "6251:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6225:44:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "696e73756666696369656e742066756e647320696e20706f6f6c",
																					"id": 475,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6271:28:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_a110f67727518ca7b3a14aca804c17f793c5bfe7f295e1afb41af41d4b4c568b",
																						"typeString": "literal_string \"insufficient funds in pool\""
																					},
																					"value": "insufficient funds in pool"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_a110f67727518ca7b3a14aca804c17f793c5bfe7f295e1afb41af41d4b4c568b",
																						"typeString": "literal_string \"insufficient funds in pool\""
																					}
																				],
																				"id": 467,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6217:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6217:83:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 477,
																		"nodeType": "ExpressionStatement",
																		"src": "6217:83:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 483,
																							"name": "MARGARI_CA",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 114,
																							"src": "6354:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"expression": {
																							"id": 481,
																							"name": "register",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 119,
																							"src": "6334:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IMRegister_$1546",
																								"typeString": "contract IMRegister"
																							}
																						},
																						"id": 482,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6343:10:1",
																						"memberName": "getAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1530,
																						"src": "6334:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																							"typeString": "function (string memory) view external returns (address)"
																						}
																					},
																					"id": 484,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6334:31:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 485,
																						"name": "descriptor_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 406,
																						"src": "6367:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																							"typeString": "struct Project memory"
																						}
																					},
																					"id": 486,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6379:6:1",
																					"memberName": "budget",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1646,
																					"src": "6367:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 478,
																					"name": "erc20_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 424,
																					"src": "6319:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6326:7:1",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "6319:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6319:67:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 488,
																		"nodeType": "ExpressionStatement",
																		"src": "6319:67:1"
																	}
																]
															},
															"id": 490,
															"nodeType": "IfStatement",
															"src": "6028:374:1",
															"trueBody": {
																"id": 466,
																"nodeType": "Block",
																"src": "6057:122:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 458,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 116,
																							"src": "6084:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"id": 459,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6089:7:1",
																						"memberName": "balance",
																						"nodeType": "MemberAccess",
																						"src": "6084:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"expression": {
																							"id": 460,
																							"name": "descriptor_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 406,
																							"src": "6100:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
																								"typeString": "struct Project memory"
																							}
																						},
																						"id": 461,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6112:6:1",
																						"memberName": "budget",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1646,
																						"src": "6100:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6084:34:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "696e73756666696369656e74206e617469766520746f6b656e2066756e647320696e20706f6f6c20",
																					"id": 463,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6120:42:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_0f639a352b68e6033960894fd239064f91f6227e67b30f35f71f3ed80642ad02",
																						"typeString": "literal_string \"insufficient native token funds in pool \""
																					},
																					"value": "insufficient native token funds in pool "
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_0f639a352b68e6033960894fd239064f91f6227e67b30f35f71f3ed80642ad02",
																						"typeString": "literal_string \"insufficient native token funds in pool \""
																					}
																				],
																				"id": 457,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6076:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6076:87:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 465,
																		"nodeType": "ExpressionStatement",
																		"src": "6076:87:1"
																	}
																]
															}
														},
														{
															"assignments": [
																495
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 495,
																	"mutability": "mutable",
																	"name": "paymentDirectives_",
																	"nameLocation": "6445:18:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "6418:45:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct PaymentDirective[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 493,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 492,
																				"name": "PaymentDirective",
																				"nameLocations": [
																					"6418:16:1"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1674,
																				"src": "6418:16:1"
																			},
																			"referencedDeclaration": 1674,
																			"src": "6418:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PaymentDirective_$1674_storage_ptr",
																				"typeString": "struct PaymentDirective"
																			}
																		},
																		"id": 494,
																		"nodeType": "ArrayTypeName",
																		"src": "6418:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_storage_$dyn_storage_ptr",
																			"typeString": "struct PaymentDirective[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 496,
																		"name": "project_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 399,
																		"src": "6466:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMProject_$1514",
																			"typeString": "contract IMProject"
																		}
																	},
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6475:20:1",
																	"memberName": "getPaymentDirectives",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1450,
																	"src": "6466:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function () view external returns (struct PaymentDirective memory[] memory)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6466:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct PaymentDirective memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6418:79:1"
														},
														{
															"assignments": [
																504,
																506
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 504,
																	"mutability": "mutable",
																	"name": "sendIds_",
																	"nameLocation": "6532:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "6514:26:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 502,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6514:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 503,
																		"nodeType": "ArrayTypeName",
																		"src": "6514:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 506,
																	"mutability": "mutable",
																	"name": "totalPaid_",
																	"nameLocation": "6550:10:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "6542:18:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 505,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6542:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 511,
															"initialValue": {
																"arguments": [
																	{
																		"id": 508,
																		"name": "paymentDirectives_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "6581:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct PaymentDirective memory[] memory"
																		}
																	},
																	{
																		"id": 509,
																		"name": "projectAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6601:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct PaymentDirective memory[] memory"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 507,
																	"name": "payoutDirectives",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "6564:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr_$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
																		"typeString": "function (struct PaymentDirective memory[] memory,address) returns (uint256[] memory,uint256)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6564:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
																	"typeString": "tuple(uint256[] memory,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6513:104:1"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 512,
																		"name": "totalPaidByRecipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "6646:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 514,
																	"indexExpression": {
																		"id": 513,
																		"name": "projectAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6667:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6646:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 515,
																	"name": "totalPaid_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "6687:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6646:51:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "6646:51:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5372:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 385,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5376:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5390:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5376:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5372:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"initializationExpression": {
													"assignments": [
														381
													],
													"declarations": [
														{
															"constant": false,
															"id": 381,
															"mutability": "mutable",
															"name": "x",
															"nameLocation": "5365:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 519,
															"src": "5357:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 380,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5357:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 383,
													"initialValue": {
														"hexValue": "30",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5369:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5357:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5398:3:1",
														"subExpression": {
															"id": 388,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "5398:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 390,
													"nodeType": "ExpressionStatement",
													"src": "5398:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5353:1358:1"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "4743:475:1",
										"text": "@notice This will distribute funds (tokens) to recipients.\n @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n this contract will need to track the amount paid already, so that it doesn't double pay.\n @param _recipientIds The ids of the recipients to distribute to\n @param _data Data required will depend on the strategy implementation\n @param _sender The address of the sender"
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distribute",
									"nameLocation": "5233:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 378,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5323:8:1"
									},
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "5262:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "5245:30:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 370,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5245:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 371,
													"nodeType": "ArrayTypeName",
													"src": "5245:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5290:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "5277:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 373,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5277:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "5305:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "5297:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5297:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:69:1"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:1"
									},
									"scope": 820,
									"src": "5224:1494:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6889:1857:1",
										"statements": [
											{
												"assignments": [
													537
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "margari",
														"nameLocation": "6910:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "6901:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMargari_$1749",
															"typeString": "contract IMargari"
														},
														"typeName": {
															"id": 536,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 535,
																"name": "IMargari",
																"nameLocations": [
																	"6901:8:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1749,
																"src": "6901:8:1"
															},
															"referencedDeclaration": 1749,
															"src": "6901:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMargari_$1749",
																"typeString": "contract IMargari"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 541,
																	"name": "MARGARI_CA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "6949:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 539,
																	"name": "register",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "6929:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMRegister_$1546",
																		"typeString": "contract IMRegister"
																	}
																},
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6938:10:1",
																"memberName": "getAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1530,
																"src": "6929:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view external returns (address)"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6929:31:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 538,
														"name": "IMargari",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "6920:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMargari_$1749_$",
															"typeString": "type(contract IMargari)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6920:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMargari_$1749",
														"typeString": "contract IMargari"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6901:60:1"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "project_",
														"nameLocation": "6983:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 717,
														"src": "6973:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMProject_$1514",
															"typeString": "contract IMProject"
														},
														"typeName": {
															"id": 546,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 545,
																"name": "IMProject",
																"nameLocations": [
																	"6973:9:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1514,
																"src": "6973:9:1"
															},
															"referencedDeclaration": 1514,
															"src": "6973:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMProject_$1514",
																"typeString": "contract IMProject"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"arguments": [
														{
															"id": 549,
															"name": "_projectAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "7004:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 548,
														"name": "IMProject",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "6994:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IMProject_$1514_$",
															"typeString": "type(contract IMProject)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6994:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMProject_$1514",
														"typeString": "contract IMProject"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6973:47:1"
											},
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 552,
														"name": "_sendIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "7033:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 556,
																	"name": "paymentDirectives_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "7058:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct PaymentDirective memory[] memory"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7077:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7058:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "7044:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 553,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7048:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 554,
																"nodeType": "ArrayTypeName",
																"src": "7048:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7044:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "7033:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "7033:51:1"
											},
											{
												"body": {
													"id": 711,
													"nodeType": "Block",
													"src": "7149:1549:1",
													"statements": [
														{
															"assignments": [
																574
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 574,
																	"mutability": "mutable",
																	"name": "paymentDirective_",
																	"nameLocation": "7188:17:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 711,
																	"src": "7164:41:1",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																		"typeString": "struct PaymentDirective"
																	},
																	"typeName": {
																		"id": 573,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 572,
																			"name": "PaymentDirective",
																			"nameLocations": [
																				"7164:16:1"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1674,
																			"src": "7164:16:1"
																		},
																		"referencedDeclaration": 1674,
																		"src": "7164:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PaymentDirective_$1674_storage_ptr",
																			"typeString": "struct PaymentDirective"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 578,
															"initialValue": {
																"baseExpression": {
																	"id": 575,
																	"name": "paymentDirectives_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "7208:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct PaymentDirective memory[] memory"
																	}
																},
																"id": 577,
																"indexExpression": {
																	"id": 576,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7227:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7208:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																	"typeString": "struct PaymentDirective memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7164:65:1"
														},
														{
															"expression": {
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 579,
																	"name": "_totalPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "7244:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 580,
																		"name": "paymentDirective_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7258:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																			"typeString": "struct PaymentDirective memory"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7276:6:1",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1671,
																	"src": "7258:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7244:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "7244:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 584,
																			"name": "paymentDirective_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "7301:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																				"typeString": "struct PaymentDirective memory"
																			}
																		},
																		"id": 585,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7319:11:1",
																		"memberName": "contributor",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1663,
																		"src": "7301:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
																			"typeString": "struct Contributor memory"
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7331:9:1",
																	"memberName": "homeChain",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1628,
																	"src": "7301:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 587,
																			"name": "register",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 119,
																			"src": "7344:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IMRegister_$1546",
																				"typeString": "contract IMRegister"
																			}
																		},
																		"id": 588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7353:10:1",
																		"memberName": "getChainId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1523,
																		"src": "7344:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7301:64:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 683,
																"nodeType": "Block",
																"src": "8043:407:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 646,
																					"name": "paymentDirective_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "8065:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																						"typeString": "struct PaymentDirective memory"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8083:5:1",
																				"memberName": "erc20",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1673,
																				"src": "8065:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 648,
																				"name": "NATIVE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "8092:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "8065:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 674,
																			"nodeType": "Block",
																			"src": "8245:147:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"expression": {
																										"id": 667,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "8309:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 668,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "8327:11:1",
																									"memberName": "contributor",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1663,
																									"src": "8309:29:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
																										"typeString": "struct Contributor memory"
																									}
																								},
																								"id": 669,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8339:6:1",
																								"memberName": "wallet",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1630,
																								"src": "8309:36:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"expression": {
																									"id": 670,
																									"name": "paymentDirective_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 574,
																									"src": "8346:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																										"typeString": "struct PaymentDirective memory"
																									}
																								},
																								"id": 671,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8364:6:1",
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1671,
																								"src": "8346:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 663,
																											"name": "paymentDirective_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 574,
																											"src": "8275:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																												"typeString": "struct PaymentDirective memory"
																											}
																										},
																										"id": 664,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8293:5:1",
																										"memberName": "erc20",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1673,
																										"src": "8275:23:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 662,
																									"name": "IERC20",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 77,
																									"src": "8268:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																										"typeString": "type(contract IERC20)"
																									}
																								},
																								"id": 665,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "8268:31:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC20_$77",
																									"typeString": "contract IERC20"
																								}
																							},
																							"id": 666,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8300:8:1",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 44,
																							"src": "8268:40:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) external returns (bool)"
																							}
																						},
																						"id": 672,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8268:104:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 673,
																					"nodeType": "ExpressionStatement",
																					"src": "8268:104:1"
																				}
																			]
																		},
																		"id": 675,
																		"nodeType": "IfStatement",
																		"src": "8062:330:1",
																		"trueBody": {
																			"id": 661,
																			"nodeType": "Block",
																			"src": "8099:123:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 657,
																									"name": "paymentDirective_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 574,
																									"src": "8177:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																										"typeString": "struct PaymentDirective memory"
																									}
																								},
																								"id": 658,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "8195:6:1",
																								"memberName": "amount",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1671,
																								"src": "8177:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"expression": {
																												"id": 652,
																												"name": "paymentDirective_",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 574,
																												"src": "8130:17:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																													"typeString": "struct PaymentDirective memory"
																												}
																											},
																											"id": 653,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "8148:11:1",
																											"memberName": "contributor",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1663,
																											"src": "8130:29:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
																												"typeString": "struct Contributor memory"
																											}
																										},
																										"id": 654,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "8160:6:1",
																										"memberName": "wallet",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1630,
																										"src": "8130:36:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 651,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "8122:8:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_payable_$",
																										"typeString": "type(address payable)"
																									},
																									"typeName": {
																										"id": 650,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "8122:8:1",
																										"stateMutability": "payable",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 655,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "8122:45:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"id": 656,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8168:8:1",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"src": "8122:54:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 659,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8122:80:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 660,
																					"nodeType": "ExpressionStatement",
																					"src": "8122:80:1"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 676,
																					"name": "_sendIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "8410:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 678,
																				"indexExpression": {
																					"id": 677,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 562,
																					"src": "8419:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8410:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 679,
																					"name": "getIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "8424:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
																						"typeString": "function () returns (uint256)"
																					}
																				},
																				"id": 680,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8424:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8410:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 682,
																		"nodeType": "ExpressionStatement",
																		"src": "8410:24:1"
																	}
																]
															},
															"id": 684,
															"nodeType": "IfStatement",
															"src": "7298:1152:1",
															"trueBody": {
																"id": 645,
																"nodeType": "Block",
																"src": "7366:658:1",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 591,
																					"name": "paymentDirective_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7388:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																						"typeString": "struct PaymentDirective memory"
																					}
																				},
																				"id": 592,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7406:5:1",
																				"memberName": "erc20",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1673,
																				"src": "7388:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 593,
																				"name": "NATIVE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "7415:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "7388:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 643,
																			"nodeType": "Block",
																			"src": "7744:265:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 621,
																								"name": "_sendIds",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 531,
																								"src": "7767:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 623,
																							"indexExpression": {
																								"id": 622,
																								"name": "y",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 562,
																								"src": "7776:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "7767:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"expression": {
																										"expression": {
																											"id": 626,
																											"name": "paymentDirective_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 574,
																											"src": "7799:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																												"typeString": "struct PaymentDirective memory"
																											}
																										},
																										"id": 627,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7817:11:1",
																										"memberName": "contributor",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1663,
																										"src": "7799:29:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
																											"typeString": "struct Contributor memory"
																										}
																									},
																									"id": 628,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7829:9:1",
																									"memberName": "homeChain",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1628,
																									"src": "7799:39:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"expression": {
																										"id": 629,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "7840:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 630,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7858:5:1",
																									"memberName": "erc20",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1673,
																									"src": "7840:23:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"expression": {
																										"id": 631,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "7865:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 632,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7883:6:1",
																									"memberName": "amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1671,
																									"src": "7865:24:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"expression": {
																										"expression": {
																											"id": 633,
																											"name": "paymentDirective_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 574,
																											"src": "7891:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																												"typeString": "struct PaymentDirective memory"
																											}
																										},
																										"id": 634,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7909:11:1",
																										"memberName": "contributor",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1663,
																										"src": "7891:29:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
																											"typeString": "struct Contributor memory"
																										}
																									},
																									"id": 635,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7921:6:1",
																									"memberName": "wallet",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1630,
																									"src": "7891:36:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"expression": {
																										"id": 636,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "7928:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 637,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7946:13:1",
																									"memberName": "alloProfileId",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1667,
																									"src": "7928:31:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"expression": {
																										"id": 638,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "7960:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 639,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7978:9:1",
																									"memberName": "projectId",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1665,
																									"src": "7960:27:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 624,
																									"name": "margari",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 537,
																									"src": "7781:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IMargari_$1749",
																										"typeString": "contract IMargari"
																									}
																								},
																								"id": 625,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7789:9:1",
																								"memberName": "sendFunds",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1741,
																								"src": "7781:17:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256,address,uint256,address,bytes32,uint256) payable external returns (uint256)"
																								}
																							},
																							"id": 640,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7781:208:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7767:222:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 642,
																					"nodeType": "ExpressionStatement",
																					"src": "7767:222:1"
																				}
																			]
																		},
																		"id": 644,
																		"nodeType": "IfStatement",
																		"src": "7385:624:1",
																		"trueBody": {
																			"id": 620,
																			"nodeType": "Block",
																			"src": "7422:299:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 618,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 595,
																								"name": "_sendIds",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 531,
																								"src": "7445:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 597,
																							"indexExpression": {
																								"id": 596,
																								"name": "y",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 562,
																								"src": "7454:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "7445:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"expression": {
																										"expression": {
																											"id": 603,
																											"name": "paymentDirective_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 574,
																											"src": "7511:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																												"typeString": "struct PaymentDirective memory"
																											}
																										},
																										"id": 604,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7529:11:1",
																										"memberName": "contributor",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1663,
																										"src": "7511:29:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
																											"typeString": "struct Contributor memory"
																										}
																									},
																									"id": 605,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7541:9:1",
																									"memberName": "homeChain",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1628,
																									"src": "7511:39:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"expression": {
																										"id": 606,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "7552:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 607,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7570:5:1",
																									"memberName": "erc20",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1673,
																									"src": "7552:23:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"expression": {
																										"id": 608,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "7577:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 609,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7595:6:1",
																									"memberName": "amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1671,
																									"src": "7577:24:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"expression": {
																										"expression": {
																											"id": 610,
																											"name": "paymentDirective_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 574,
																											"src": "7603:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																												"typeString": "struct PaymentDirective memory"
																											}
																										},
																										"id": 611,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7621:11:1",
																										"memberName": "contributor",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1663,
																										"src": "7603:29:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
																											"typeString": "struct Contributor memory"
																										}
																									},
																									"id": 612,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7633:6:1",
																									"memberName": "wallet",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1630,
																									"src": "7603:36:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"expression": {
																										"id": 613,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "7640:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 614,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7658:13:1",
																									"memberName": "alloProfileId",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1667,
																									"src": "7640:31:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								{
																									"expression": {
																										"id": 615,
																										"name": "paymentDirective_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 574,
																										"src": "7672:17:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																											"typeString": "struct PaymentDirective memory"
																										}
																									},
																									"id": 616,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7690:9:1",
																									"memberName": "projectId",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1665,
																									"src": "7672:27:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 598,
																										"name": "margari",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 537,
																										"src": "7459:7:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IMargari_$1749",
																											"typeString": "contract IMargari"
																										}
																									},
																									"id": 599,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "7467:9:1",
																									"memberName": "sendFunds",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1741,
																									"src": "7459:17:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$",
																										"typeString": "function (uint256,address,uint256,address,bytes32,uint256) payable external returns (uint256)"
																									}
																								},
																								"id": 602,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"names": [
																									"value"
																								],
																								"nodeType": "FunctionCallOptions",
																								"options": [
																									{
																										"expression": {
																											"id": 600,
																											"name": "paymentDirective_",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 574,
																											"src": "7485:17:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																												"typeString": "struct PaymentDirective memory"
																											}
																										},
																										"id": 601,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "7503:6:1",
																										"memberName": "amount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1671,
																										"src": "7485:24:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"src": "7459:51:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_uint256_$value",
																									"typeString": "function (uint256,address,uint256,address,bytes32,uint256) payable external returns (uint256)"
																								}
																							},
																							"id": 617,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "7459:242:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7445:256:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 619,
																					"nodeType": "ExpressionStatement",
																					"src": "7445:256:1"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 688,
																			"name": "paymentDirective_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "8493:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																				"typeString": "struct PaymentDirective memory"
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8511:13:1",
																		"memberName": "deliverableId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1669,
																		"src": "8493:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 690,
																			"name": "PayoutStatus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "8526:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_PayoutStatus_$1615_$",
																				"typeString": "type(enum PayoutStatus)"
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8539:4:1",
																		"memberName": "PAID",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1612,
																		"src": "8526:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_PayoutStatus_$1615",
																			"typeString": "enum PayoutStatus"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_enum$_PayoutStatus_$1615",
																			"typeString": "enum PayoutStatus"
																		}
																	],
																	"expression": {
																		"id": 685,
																		"name": "project_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "8465:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMProject_$1514",
																			"typeString": "contract IMProject"
																		}
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8474:18:1",
																	"memberName": "updatePayoutStatus",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1497,
																	"src": "8465:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_enum$_PayoutStatus_$1615_$returns$_t_bool_$",
																		"typeString": "function (uint256,enum PayoutStatus) external returns (bool)"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8465:79:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "8465:79:1"
														},
														{
															"expression": {
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 694,
																		"name": "paymentDirectiveBySendId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "8561:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PaymentDirective_$1674_storage_$",
																			"typeString": "mapping(uint256 => struct PaymentDirective storage ref)"
																		}
																	},
																	"id": 698,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 695,
																			"name": "_sendIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "8586:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 697,
																		"indexExpression": {
																			"id": 696,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 562,
																			"src": "8595:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8586:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8561:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PaymentDirective_$1674_storage",
																		"typeString": "struct PaymentDirective storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 699,
																	"name": "paymentDirective_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "8601:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PaymentDirective_$1674_memory_ptr",
																		"typeString": "struct PaymentDirective memory"
																	}
																},
																"src": "8561:57:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PaymentDirective_$1674_storage",
																	"typeString": "struct PaymentDirective storage ref"
																}
															},
															"id": 701,
															"nodeType": "ExpressionStatement",
															"src": "8561:57:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 706,
																			"name": "_sendIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "8674:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 708,
																		"indexExpression": {
																			"id": 707,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 562,
																			"src": "8683:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8674:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 702,
																			"name": "sendIdsByRecipient",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "8633:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 704,
																		"indexExpression": {
																			"id": 703,
																			"name": "_projectAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "8652:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8633:35:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8669:4:1",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8633:40:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8633:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 710,
															"nodeType": "ExpressionStatement",
															"src": "8633:53:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "7114:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 566,
															"name": "paymentDirectives_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "7118:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct PaymentDirective memory[] memory"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7137:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7118:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7114:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"initializationExpression": {
													"assignments": [
														562
													],
													"declarations": [
														{
															"constant": false,
															"id": 562,
															"mutability": "mutable",
															"name": "y",
															"nameLocation": "7107:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 712,
															"src": "7099:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 561,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7099:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 564,
													"initialValue": {
														"hexValue": "30",
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7111:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7099:13:1"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7145:3:1",
														"subExpression": {
															"id": 569,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "7145:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 571,
													"nodeType": "ExpressionStatement",
													"src": "7145:3:1"
												},
												"nodeType": "ForStatement",
												"src": "7095:1603:1"
											},
											{
												"expression": {
													"components": [
														{
															"id": 713,
															"name": "_sendIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8716:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 714,
															"name": "_totalPaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "8726:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 715,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8715:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$",
														"typeString": "tuple(uint256[] memory,uint256)"
													}
												},
												"functionReturnParameters": 534,
												"id": 716,
												"nodeType": "Return",
												"src": "8708:29:1"
											}
										]
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "payoutDirectives",
									"nameLocation": "6735:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "paymentDirectives_",
												"nameLocation": "6779:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6752:45:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PaymentDirective[]"
												},
												"typeName": {
													"baseType": {
														"id": 523,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 522,
															"name": "PaymentDirective",
															"nameLocations": [
																"6752:16:1"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1674,
															"src": "6752:16:1"
														},
														"referencedDeclaration": 1674,
														"src": "6752:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PaymentDirective_$1674_storage_ptr",
															"typeString": "struct PaymentDirective"
														}
													},
													"id": 524,
													"nodeType": "ArrayTypeName",
													"src": "6752:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_storage_$dyn_storage_ptr",
														"typeString": "struct PaymentDirective[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "_projectAddress",
												"nameLocation": "6807:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6799:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6799:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6751:72:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_sendIds",
												"nameLocation": "6860:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6842:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 529,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6842:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 530,
													"nodeType": "ArrayTypeName",
													"src": "6842:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "_totalPaid",
												"nameLocation": "6878:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6870:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6841:48:1"
									},
									"scope": 820,
									"src": "6726:2020:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 721,
									"mutability": "mutable",
									"name": "index",
									"nameLocation": "8762:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 820,
									"src": "8754:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 719,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8754:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 720,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8770:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "8838:77:1",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "8849:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 727,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "8858:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8849:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "8849:14:1"
											},
											{
												"expression": {
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "8875:7:1",
													"subExpression": {
														"id": 730,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "8875:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "8875:7:1"
											},
											{
												"expression": {
													"id": 733,
													"name": "_index",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 724,
													"src": "8900:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 725,
												"id": 734,
												"nodeType": "Return",
												"src": "8893:13:1"
											}
										]
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIndex",
									"nameLocation": "8793:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8801:2:1"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "8830:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "8822:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8821:16:1"
									},
									"scope": 820,
									"src": "8784:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1345
									],
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "9417:178:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "_recipientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "9494:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 750,
																"name": "totalPaidByRecipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "9535:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 752,
															"indexExpression": {
																"id": 751,
																"name": "_recipientId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "9556:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9535:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "PayoutSummary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "9441:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PayoutSummary_$2302_storage_ptr_$",
															"typeString": "type(struct IStrategy.PayoutSummary storage pointer)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"9475:16:1",
														"9526:6:1"
													],
													"names": [
														"recipientAddress",
														"amount"
													],
													"nodeType": "FunctionCall",
													"src": "9441:144:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutSummary_$2302_memory_ptr",
														"typeString": "struct IStrategy.PayoutSummary memory"
													}
												},
												"functionReturnParameters": 747,
												"id": 754,
												"nodeType": "Return",
												"src": "9434:151:1"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "8925:335:1",
										"text": "@notice This will get the payout summary for a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientId The ID of the recipient\n @param _data The data to use to get the payout summary for the recipient\n @return The payout summary for the recipient"
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPayout",
									"nameLocation": "9275:10:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 743,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9369:8:1"
									},
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "9294:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9286:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9321:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9308:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9308:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9285:42:1"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "9396:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PayoutSummary_$2302_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary"
												},
												"typeName": {
													"id": 745,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 744,
														"name": "PayoutSummary",
														"nameLocations": [
															"9396:13:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2302,
														"src": "9396:13:1"
													},
													"referencedDeclaration": 2302,
													"src": "9396:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutSummary_$2302_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9395:22:1"
									},
									"scope": 820,
									"src": "9266:329:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1354
									],
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "9849:10:1",
										"statements": []
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "9603:150:1",
										"text": "@notice This will get the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRecipientStatus",
									"nameLocation": "9768:19:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 761,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9824:8:1"
									},
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "9796:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9788:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9788:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9787:22:1"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "9842:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$2296",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 763,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 762,
														"name": "Status",
														"nameLocations": [
															"9842:6:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2296,
														"src": "9842:6:1"
													},
													"referencedDeclaration": 2296,
													"src": "9842:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$2296",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9841:8:1"
									},
									"scope": 820,
									"src": "9759:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "9982:361:1",
										"statements": [
											{
												"assignments": [
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "allo",
														"nameLocation": "9999:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "9993:10:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllo_$2089",
															"typeString": "contract IAllo"
														},
														"typeName": {
															"id": 779,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 778,
																"name": "IAllo",
																"nameLocations": [
																	"9993:5:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2089,
																"src": "9993:5:1"
															},
															"referencedDeclaration": 2089,
															"src": "9993:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAllo_$2089",
																"typeString": "contract IAllo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 784,
																	"name": "ALLO_CA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "10032:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 782,
																	"name": "register",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "10012:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMRegister_$1546",
																		"typeString": "contract IMRegister"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10021:10:1",
																"memberName": "getAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1530,
																"src": "10012:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view external returns (address)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10012:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 781,
														"name": "IAllo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2089,
														"src": "10006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IAllo_$2089_$",
															"typeString": "type(contract IAllo)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10006:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$2089",
														"typeString": "contract IAllo"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9993:48:1"
											},
											{
												"assignments": [
													790
												],
												"declarations": [
													{
														"constant": false,
														"id": 790,
														"mutability": "mutable",
														"name": "alloRegistry",
														"nameLocation": "10062:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "10052:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IRegistry_$2282",
															"typeString": "contract IRegistry"
														},
														"typeName": {
															"id": 789,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 788,
																"name": "IRegistry",
																"nameLocations": [
																	"10052:9:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2282,
																"src": "10052:9:1"
															},
															"referencedDeclaration": 2282,
															"src": "10052:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRegistry_$2282",
																"typeString": "contract IRegistry"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 791,
															"name": "allo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "10077:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IAllo_$2089",
																"typeString": "contract IAllo"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10082:11:1",
														"memberName": "getRegistry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2052,
														"src": "10077:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IRegistry_$2282_$",
															"typeString": "function () view external returns (contract IRegistry)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10077:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRegistry_$2282",
														"typeString": "contract IRegistry"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10052:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 797,
																	"name": "_poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "10129:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 798,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "10138:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 795,
																	"name": "allo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "10110:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAllo_$2089",
																		"typeString": "contract IAllo"
																	}
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10115:13:1",
																"memberName": "isPoolManager",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2011,
																"src": "10110:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (uint256,address) view external returns (bool)"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10110:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"arguments": [
																{
																	"id": 802,
																	"name": "_poolId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "10181:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 803,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "10190:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 800,
																	"name": "allo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "10164:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IAllo_$2089",
																		"typeString": "contract IAllo"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10169:11:1",
																"memberName": "isPoolAdmin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2001,
																"src": "10164:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (uint256,address) view external returns (bool)"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10164:34:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10110:88:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 808,
																"name": "_alloProfileId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 773,
																"src": "10246:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 809,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "10262:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 806,
																"name": "alloRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "10216:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IRegistry_$2282",
																	"typeString": "contract IRegistry"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10229:16:1",
															"memberName": "isOwnerOfProfile",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2194,
															"src": "10216:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view external returns (bool)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10216:54:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10110:160:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "10107:203:1",
												"trueBody": {
													"id": 814,
													"nodeType": "Block",
													"src": "10271:39:1",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10293:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 777,
															"id": 813,
															"nodeType": "Return",
															"src": "10286:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10327:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 777,
												"id": 817,
												"nodeType": "Return",
												"src": "10320:12:1"
											}
										]
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onlyAdmin",
									"nameLocation": "9876:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "9894:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9886:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9886:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "9911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "_alloProfileId",
												"nameLocation": "9928:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9920:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 772,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9885:58:1"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "_isAdmin",
												"nameLocation": "9972:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9967:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:15:1"
									},
									"scope": 820,
									"src": "9867:476:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 821,
							"src": "773:9575:1",
							"usedErrors": [],
							"usedEvents": [
								2309,
								2318,
								2329,
								2340,
								2345
							]
						}
					],
					"src": "40:10308:1"
				},
				"id": 1
			},
			"contracts/core/MBaseStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/core/MBaseStrategy.sol",
					"exportedSymbols": {
						"IAllo": [
							2089
						],
						"IStrategy": [
							2451
						],
						"MBaseStrategy": [
							1429
						]
					},
					"id": 1430,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 822,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "43:24:2"
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol",
							"file": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol",
							"id": 823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1430,
							"sourceUnit": 2452,
							"src": "86:100:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 825,
										"name": "IStrategy",
										"nameLocations": [
											"4561:9:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2451,
										"src": "4561:9:2"
									},
									"id": 826,
									"nodeType": "InheritanceSpecifier",
									"src": "4561:9:2"
								}
							],
							"canonicalName": "MBaseStrategy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 824,
								"nodeType": "StructuredDocumentation",
								"src": "4198:328:2",
								"text": "@title BaseStrategy Contract\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice This contract is the base contract for all strategies\n @dev This contract is implemented by all strategies."
							},
							"fullyImplemented": false,
							"id": 1429,
							"linearizedBaseContracts": [
								1429,
								2451
							],
							"name": "MBaseStrategy",
							"nameLocation": "4544:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "4578:102:2",
										"text": "==========================\n === Storage Variables ====\n =========================="
									},
									"id": 830,
									"mutability": "constant",
									"name": "NATIVE",
									"nameLocation": "4703:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "4686:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 828,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4686:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
										"id": 829,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4712:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 833,
									"mutability": "immutable",
									"name": "allo",
									"nameLocation": "4788:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "4763:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAllo_$2089",
										"typeString": "contract IAllo"
									},
									"typeName": {
										"id": 832,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 831,
											"name": "IAllo",
											"nameLocations": [
												"4763:5:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2089,
											"src": "4763:5:2"
										},
										"referencedDeclaration": 2089,
										"src": "4763:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAllo_$2089",
											"typeString": "contract IAllo"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 835,
									"mutability": "immutable",
									"name": "strategyId",
									"nameLocation": "4826:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "4799:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 834,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4799:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 837,
									"mutability": "mutable",
									"name": "poolActive",
									"nameLocation": "4857:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "4843:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 836,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4843:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 839,
									"mutability": "mutable",
									"name": "poolId",
									"nameLocation": "4891:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "4874:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 838,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4874:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 841,
									"mutability": "mutable",
									"name": "poolAmount",
									"nameLocation": "4921:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1429,
									"src": "4904:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 840,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4904:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "5295:90:2",
										"statements": [
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 849,
														"name": "allo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "5306:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllo_$2089",
															"typeString": "contract IAllo"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 851,
																"name": "_allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "5319:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 850,
															"name": "IAllo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "5313:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAllo_$2089_$",
																"typeString": "type(contract IAllo)"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5313:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAllo_$2089",
															"typeString": "contract IAllo"
														}
													},
													"src": "5306:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$2089",
														"typeString": "contract IAllo"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "5306:19:2"
											},
											{
												"expression": {
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 855,
														"name": "strategyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "5336:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 859,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "5370:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 857,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5359:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5363:6:2",
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "5359:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5359:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 856,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "5349:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5349:28:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5336:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "5336:41:2"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "5080:161:2",
										"text": "@notice Constructor to set the Allo contract and \"strategyId'.\n @param _allo Address of the Allo contract.\n @param _name Name of the strategy"
									},
									"id": 865,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_allo",
												"nameLocation": "5267:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5259:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5259:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "5288:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5274:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5274:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5258:36:2"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5295:0:2"
									},
									"scope": 1429,
									"src": "5247:138:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "5698:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 868,
														"name": "_checkOnlyAllo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "5709:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5709:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "5709:16:2"
											},
											{
												"id": 871,
												"nodeType": "PlaceholderStatement",
												"src": "5736:1:2"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "5533:139:2",
										"text": "@notice Modifier to check if the 'msg.sender' is the Allo contract.\n @dev Reverts if the 'msg.sender' is not the Allo contract."
									},
									"id": 873,
									"name": "onlyAllo",
									"nameLocation": "5687:8:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5695:2:2"
									},
									"src": "5678:67:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "6000:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 879,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "6033:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 878,
														"name": "_checkOnlyPoolManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "6011:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6011:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "6011:30:2"
											},
											{
												"id": 882,
												"nodeType": "PlaceholderStatement",
												"src": "6052:1:2"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "5753:199:2",
										"text": "@notice Modifier to check if the '_sender' is a pool manager.\n @dev Reverts if the '_sender' is not a pool manager.\n @param _sender The address to check if they are a pool manager"
									},
									"id": 884,
									"name": "onlyPoolManager",
									"nameLocation": "5967:15:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "5991:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5983:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5983:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5982:17:2"
									},
									"src": "5958:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "6202:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 887,
														"name": "_checkOnlyActivePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "6213:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6213:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "6213:22:2"
											},
											{
												"id": 890,
												"nodeType": "PlaceholderStatement",
												"src": "6246:1:2"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "6069:101:2",
										"text": "@notice Modifier to check if the pool is active.\n @dev Reverts if the pool is not active."
									},
									"id": 892,
									"name": "onlyActivePool",
									"nameLocation": "6185:14:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6199:2:2"
									},
									"src": "6176:79:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "6396:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 895,
														"name": "_checkInactivePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "6407:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "6407:20:2"
											},
											{
												"id": 898,
												"nodeType": "PlaceholderStatement",
												"src": "6438:1:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "6263:99:2",
										"text": "@notice Modifier to check if the pool is inactive.\n @dev Reverts if the pool is active."
									},
									"id": 900,
									"name": "onlyInactivePool",
									"nameLocation": "6377:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6393:2:2"
									},
									"src": "6368:79:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "6599:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 903,
														"name": "_checkOnlyInitialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "6610:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6610:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "6610:23:2"
											},
											{
												"id": 906,
												"nodeType": "PlaceholderStatement",
												"src": "6644:1:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "6455:111:2",
										"text": "@notice Modifier to check if the pool is initialized.\n @dev Reverts if the pool is not initialized."
									},
									"id": 908,
									"name": "onlyInitialized",
									"nameLocation": "6581:15:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6596:2:2"
									},
									"src": "6572:81:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2352
									],
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "6931:30:2",
										"statements": [
											{
												"expression": {
													"id": 916,
													"name": "allo",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 833,
													"src": "6949:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$2089",
														"typeString": "contract IAllo"
													}
												},
												"functionReturnParameters": 915,
												"id": 917,
												"nodeType": "Return",
												"src": "6942:11:2"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "6789:78:2",
										"text": "@notice Getter for the 'Allo' contract.\n @return The Allo contract"
									},
									"functionSelector": "15cc481e",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllo",
									"nameLocation": "6882:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 911,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6906:8:2"
									},
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6889:2:2"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "6924:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAllo_$2089",
													"typeString": "contract IAllo"
												},
												"typeName": {
													"id": 913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 912,
														"name": "IAllo",
														"nameLocations": [
															"6924:5:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2089,
														"src": "6924:5:2"
													},
													"referencedDeclaration": 2089,
													"src": "6924:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$2089",
														"typeString": "contract IAllo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6923:7:2"
									},
									"scope": 1429,
									"src": "6873:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2358
									],
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "7109:32:2",
										"statements": [
											{
												"expression": {
													"id": 926,
													"name": "poolId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 839,
													"src": "7127:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 925,
												"id": 927,
												"nodeType": "Return",
												"src": "7120:13:2"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "6969:72:2",
										"text": "@notice Getter for the 'poolId'.\n @return The ID of the pool"
									},
									"functionSelector": "38fff2d0",
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolId",
									"nameLocation": "7056:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 922,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7082:8:2"
									},
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7065:2:2"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "7100:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7099:9:2"
									},
									"scope": 1429,
									"src": "7047:94:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2364
									],
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "7301:36:2",
										"statements": [
											{
												"expression": {
													"id": 936,
													"name": "strategyId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 835,
													"src": "7319:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 935,
												"id": 937,
												"nodeType": "Return",
												"src": "7312:17:2"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "7149:80:2",
										"text": "@notice Getter for the 'strategyId'.\n @return The ID of the strategy"
									},
									"functionSelector": "42fda9c7",
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategyId",
									"nameLocation": "7244:13:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 932,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7274:8:2"
									},
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7257:2:2"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "7292:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7292:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7291:9:2"
									},
									"scope": 1429,
									"src": "7235:102:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2384
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "7506:36:2",
										"statements": [
											{
												"expression": {
													"id": 946,
													"name": "poolAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 841,
													"src": "7524:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 945,
												"id": 947,
												"nodeType": "Return",
												"src": "7517:17:2"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "7345:81:2",
										"text": "@notice Getter for the 'poolAmount'.\n @return The balance of the pool"
									},
									"functionSelector": "4ab4ba42",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAmount",
									"nameLocation": "7441:13:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 942,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7479:8:2"
									},
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7454:2:2"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7497:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7497:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7496:9:2"
									},
									"scope": 1429,
									"src": "7432:110:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2378
									],
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "7740:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 956,
														"name": "_isPoolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "7758:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7758:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 955,
												"id": 958,
												"nodeType": "Return",
												"src": "7751:22:2"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "7550:122:2",
										"text": "@notice Getter for whether or not the pool is active.\n @return 'true' if the pool is active, otherwise 'false'"
									},
									"functionSelector": "df868ed3",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolActive",
									"nameLocation": "7687:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 952,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7716:8:2"
									},
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7699:2:2"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7734:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7734:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7733:6:2"
									},
									"scope": 1429,
									"src": "7678:103:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2399
									],
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "8031:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "_recipientId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "8069:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 969,
														"name": "_getRecipientStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "8049:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_enum$_Status_$2296_$",
															"typeString": "function (address) view returns (enum IStrategy.Status)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8049:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$2296",
														"typeString": "enum IStrategy.Status"
													}
												},
												"functionReturnParameters": 968,
												"id": 972,
												"nodeType": "Return",
												"src": "8042:40:2"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "7789:147:2",
										"text": "@notice Getter for the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"functionSelector": "eb11af93",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecipientStatus",
									"nameLocation": "7951:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "7978:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "7970:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7970:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:22:2"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "8023:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$2296",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 965,
														"name": "Status",
														"nameLocations": [
															"8023:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2296,
														"src": "8023:6:2"
													},
													"referencedDeclaration": 2296,
													"src": "8023:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$2296",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8022:8:2"
									},
									"scope": 1429,
									"src": "7942:148:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1002,
										"nodeType": "Block",
										"src": "8471:288:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 982,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "8560:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8570:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8560:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 989,
												"nodeType": "IfStatement",
												"src": "8556:46:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "414c524541445920494e495449414c495a4544",
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8580:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_e1b8a905832292be113e59383f7d405b841482915799df05034d0acfef0942b8",
																	"typeString": "literal_string \"ALREADY INITIALIZED\""
																},
																"value": "ALREADY INITIALIZED"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_e1b8a905832292be113e59383f7d405b841482915799df05034d0acfef0942b8",
																	"typeString": "literal_string \"ALREADY INITIALIZED\""
																}
															],
															"id": 985,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "8573:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8573:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 988,
													"nodeType": "ExpressionStatement",
													"src": "8573:29:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 990,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "8693:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8704:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8693:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 997,
												"nodeType": "IfStatement",
												"src": "8689:35:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "494e56414c4944",
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8714:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																	"typeString": "literal_string \"INVALID\""
																},
																"value": "INVALID"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_05681e4e5ed3f758209aaff7c67ddc15f7304807a989db2335478a8c28a86879",
																	"typeString": "literal_string \"INVALID\""
																}
															],
															"id": 993,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "8707:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8707:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 996,
													"nodeType": "ExpressionStatement",
													"src": "8707:17:2"
												}
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 998,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "8735:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 999,
														"name": "_poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "8744:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "8735:16:2"
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "8238:155:2",
										"text": "@notice Initializes the 'Basetrategy'.\n @dev Will revert if the poolId is invalid or already initialized\n @param _poolId ID of the pool"
									},
									"id": 1003,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 980,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 979,
												"name": "onlyAllo",
												"nameLocations": [
													"8462:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 873,
												"src": "8462:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8462:8:2"
										}
									],
									"name": "__BaseStrategy_init",
									"nameLocation": "8408:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "8436:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "8428:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8428:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8427:17:2"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8471:0:2"
									},
									"scope": 1429,
									"src": "8399:360:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2390
									],
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "9033:129:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1013,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "9070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1012,
														"name": "_beforeIncreasePoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "9044:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9044:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "9044:34:2"
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1016,
														"name": "poolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "9089:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1017,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "9103:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9089:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "9089:21:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "9146:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"name": "_afterIncreasePoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "9121:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9121:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "9121:33:2"
											}
										]
									},
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "8767:188:2",
										"text": "@notice Increases the pool amount.\n @dev Increases the 'poolAmount' by '_amount'. Only 'Allo' contract can call this.\n @param _amount The amount to increase the pool by"
									},
									"functionSelector": "f5b0dfb7",
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1010,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1009,
												"name": "onlyAllo",
												"nameLocations": [
													"9024:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 873,
												"src": "9024:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "9024:8:2"
										}
									],
									"name": "increasePoolAmount",
									"nameLocation": "8970:18:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1008,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9015:8:2"
									},
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8997:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "8989:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8988:17:2"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9033:0:2"
									},
									"scope": 1429,
									"src": "8961:201:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2431
									],
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "9772:168:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "9808:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1041,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "9815:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1039,
														"name": "_beforeRegisterRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "9783:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9783:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "9783:40:2"
											},
											{
												"expression": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "recipientId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "9834:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1046,
																"name": "_data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "9867:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1047,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "9874:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1045,
															"name": "_registerRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "9848:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
																"typeString": "function (bytes memory,address) returns (address)"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9848:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9834:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "9834:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "9917:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1053,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "9924:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1051,
														"name": "_afterRegisterRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "9893:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9893:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "9893:39:2"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "9170:410:2",
										"text": "@notice Registers a recipient.\n @dev Registers a recipient and returns the ID of the recipient. The encoded '_data' will be determined by the\n      strategy implementation. Only 'Allo' contract can call this when it is initialized.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return recipientId The recipientId"
									},
									"functionSelector": "2bbe0cae",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1033,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1032,
												"name": "onlyAllo",
												"nameLocations": [
													"9694:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 873,
												"src": "9694:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "9694:8:2"
										},
										{
											"id": 1035,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1034,
												"name": "onlyInitialized",
												"nameLocations": [
													"9712:15:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 908,
												"src": "9712:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "9712:15:2"
										}
									],
									"name": "registerRecipient",
									"nameLocation": "9595:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9626:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "9613:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9613:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "9641:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "9633:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9633:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9612:37:2"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "9754:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "9746:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9746:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9745:21:2"
									},
									"scope": 1429,
									"src": "9586:354:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2439
									],
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "10363:127:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1070,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "10390:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1071,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "10397:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1069,
														"name": "_beforeAllocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "10374:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10374:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "10374:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "10426:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1076,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "10433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1074,
														"name": "_allocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "10416:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10416:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "10416:25:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1080,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "10467:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1081,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "10474:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1079,
														"name": "_afterAllocate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "10452:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (bytes memory,address)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10452:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "10452:30:2"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "9948:312:2",
										"text": "@notice Allocates to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n      call this when it is initialized.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"functionSelector": "ef2920fc",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1065,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1064,
												"name": "onlyAllo",
												"nameLocations": [
													"10338:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 873,
												"src": "10338:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "10338:8:2"
										},
										{
											"id": 1067,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1066,
												"name": "onlyInitialized",
												"nameLocations": [
													"10347:15:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 908,
												"src": "10347:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "10347:15:2"
										}
									],
									"name": "allocate",
									"nameLocation": "10275:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10297:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "10284:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10284:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10312:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "10304:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10304:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10283:37:2"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10363:0:2"
									},
									"scope": 1429,
									"src": "10266:224:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2450
									],
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "11046:178:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1101,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11075:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1102,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "11090:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1103,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "11097:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1100,
														"name": "_beforeDistribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "11057:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11057:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "11057:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1107,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11128:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1108,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "11143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1109,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "11150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1106,
														"name": "_distribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "11116:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11116:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "11116:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1113,
															"name": "_recipientIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "11186:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1114,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "11201:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1115,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "11208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1112,
														"name": "_afterDistribute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "11169:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (address[] memory,bytes memory,address)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11169:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "11169:47:2"
											}
										]
									},
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "10498:387:2",
										"text": "@notice Distributes funds (tokens) to recipients.\n @dev The encoded '_data' will be determined by the strategy implementation. Only 'Allo' contract can\n      call this when it is initialized.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"functionSelector": "0a6f0ee9",
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1096,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1095,
												"name": "onlyAllo",
												"nameLocations": [
													"11007:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 873,
												"src": "11007:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "11007:8:2"
										},
										{
											"id": 1098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1097,
												"name": "onlyInitialized",
												"nameLocations": [
													"11025:15:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 908,
												"src": "11025:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "11025:15:2"
										}
									],
									"name": "distribute",
									"nameLocation": "10900:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "10928:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10911:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1087,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10911:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1088,
													"nodeType": "ArrayTypeName",
													"src": "10911:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10956:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10943:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10943:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10971:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10963:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10963:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10910:69:2"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11046:0:2"
									},
									"scope": 1429,
									"src": "10891:333:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2413
									],
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "11756:536:2",
										"statements": [
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "recipientLength",
														"nameLocation": "11775:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "11767:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11767:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"expression": {
														"id": 1136,
														"name": "_recipientIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "11793:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "11807:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "11793:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11767:46:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1139,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "11932:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1140,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "11951:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11957:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11951:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11932:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"nodeType": "IfStatement",
												"src": "11928:61:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4152524159204d49534d41544348",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11972:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_061c27735e8d4de427c1d79927697f5893e7c1ed55f494a77889279330b06ae6",
																	"typeString": "literal_string \"ARRAY MISMATCH\""
																},
																"value": "ARRAY MISMATCH"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_061c27735e8d4de427c1d79927697f5893e7c1ed55f494a77889279330b06ae6",
																	"typeString": "literal_string \"ARRAY MISMATCH\""
																}
															],
															"id": 1143,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "11965:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11965:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1146,
													"nodeType": "ExpressionStatement",
													"src": "11965:24:2"
												}
											},
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "payouts",
														"nameLocation": "12025:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "12002:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IStrategy.PayoutSummary[]"
														},
														"typeName": {
															"baseType": {
																"id": 1150,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1149,
																	"name": "PayoutSummary",
																	"nameLocations": [
																		"12002:13:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2302,
																	"src": "12002:13:2"
																},
																"referencedDeclaration": 2302,
																"src": "12002:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$2302_storage_ptr",
																	"typeString": "struct IStrategy.PayoutSummary"
																}
															},
															"id": 1151,
															"nodeType": "ArrayTypeName",
															"src": "12002:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_storage_$dyn_storage_ptr",
																"typeString": "struct IStrategy.PayoutSummary[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"arguments": [
														{
															"id": 1157,
															"name": "recipientLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "12055:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "12035:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IStrategy.PayoutSummary memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1154,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1153,
																	"name": "PayoutSummary",
																	"nameLocations": [
																		"12039:13:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2302,
																	"src": "12039:13:2"
																},
																"referencedDeclaration": 2302,
																"src": "12039:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$2302_storage_ptr",
																	"typeString": "struct IStrategy.PayoutSummary"
																}
															},
															"id": 1155,
															"nodeType": "ArrayTypeName",
															"src": "12039:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_storage_$dyn_storage_ptr",
																"typeString": "struct IStrategy.PayoutSummary[]"
															}
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12035:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IStrategy.PayoutSummary memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12002:69:2"
											},
											{
												"body": {
													"id": 1183,
													"nodeType": "Block",
													"src": "12120:140:2",
													"statements": [
														{
															"expression": {
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1166,
																		"name": "payouts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "12135:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IStrategy.PayoutSummary memory[] memory"
																		}
																	},
																	"id": 1168,
																	"indexExpression": {
																		"id": 1167,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1161,
																		"src": "12143:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12135:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutSummary_$2302_memory_ptr",
																		"typeString": "struct IStrategy.PayoutSummary memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1170,
																				"name": "_recipientIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1123,
																				"src": "12159:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1172,
																			"indexExpression": {
																				"id": 1171,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "12173:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12159:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1173,
																				"name": "_data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1126,
																				"src": "12177:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																					"typeString": "bytes memory[] memory"
																				}
																			},
																			"id": 1175,
																			"indexExpression": {
																				"id": 1174,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "12183:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12177:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1169,
																		"name": "_getPayout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "12148:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_PayoutSummary_$2302_memory_ptr_$",
																			"typeString": "function (address,bytes memory) view returns (struct IStrategy.PayoutSummary memory)"
																		}
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12148:38:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PayoutSummary_$2302_memory_ptr",
																		"typeString": "struct IStrategy.PayoutSummary memory"
																	}
																},
																"src": "12135:51:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PayoutSummary_$2302_memory_ptr",
																	"typeString": "struct IStrategy.PayoutSummary memory"
																}
															},
															"id": 1178,
															"nodeType": "ExpressionStatement",
															"src": "12135:51:2"
														},
														{
															"id": 1182,
															"nodeType": "UncheckedBlock",
															"src": "12201:48:2",
															"statements": [
																{
																	"expression": {
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "12230:3:2",
																		"subExpression": {
																			"id": 1179,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1161,
																			"src": "12230:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1181,
																	"nodeType": "ExpressionStatement",
																	"src": "12230:3:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1163,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "12098:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1164,
														"name": "recipientLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "12102:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1184,
												"initializationExpression": {
													"assignments": [
														1161
													],
													"declarations": [
														{
															"constant": false,
															"id": 1161,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12095:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1184,
															"src": "12087:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1160,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12087:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1162,
													"nodeType": "VariableDeclarationStatement",
													"src": "12087:9:2"
												},
												"isSimpleCounterLoop": false,
												"nodeType": "ForStatement",
												"src": "12082:178:2"
											},
											{
												"expression": {
													"id": 1185,
													"name": "payouts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1152,
													"src": "12277:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IStrategy.PayoutSummary memory[] memory"
													}
												},
												"functionReturnParameters": 1133,
												"id": 1186,
												"nodeType": "Return",
												"src": "12270:14:2"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "11232:330:2",
										"text": "@notice Gets the payout summary for recipients.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to get the payout summary for the recipients\n @return The payout summary for the recipients"
									},
									"functionSelector": "b2b878d0",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPayouts",
									"nameLocation": "11577:10:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11700:8:2"
									},
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "11605:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "11588:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1121,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11588:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1122,
													"nodeType": "ArrayTypeName",
													"src": "11588:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11635:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "11620:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1124,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "11620:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1125,
													"nodeType": "ArrayTypeName",
													"src": "11620:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11587:54:2"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "11727:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary[]"
												},
												"typeName": {
													"baseType": {
														"id": 1130,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1129,
															"name": "PayoutSummary",
															"nameLocations": [
																"11727:13:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2302,
															"src": "11727:13:2"
														},
														"referencedDeclaration": 2302,
														"src": "11727:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutSummary_$2302_storage_ptr",
															"typeString": "struct IStrategy.PayoutSummary"
														}
													},
													"id": 1131,
													"nodeType": "ArrayTypeName",
													"src": "11727:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_storage_$dyn_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11726:24:2"
									},
									"scope": 1429,
									"src": "11568:724:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2372
									],
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "12714:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1198,
															"name": "_allocator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "12750:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1197,
														"name": "_isValidAllocator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "12732:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12732:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1196,
												"id": 1200,
												"nodeType": "Return",
												"src": "12725:36:2"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "12300:316:2",
										"text": "@notice Checks if the '_allocator' is a valid allocator.\n @dev How the allocator is determined is up to the strategy implementation.\n @param _allocator The address to check if it is a valid allocator for the strategy.\n @return 'true' if the address is a valid allocator, 'false' otherwise"
									},
									"functionSelector": "4d31d087",
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidAllocator",
									"nameLocation": "12631:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12690:8:2"
									},
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "12656:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "12648:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12647:20:2"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "12708:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12708:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12707:6:2"
									},
									"scope": 1429,
									"src": "12622:147:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "13091:74:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1206,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "13106:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13110:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "13106:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1210,
																"name": "allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "13128:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAllo_$2089",
																	"typeString": "contract IAllo"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IAllo_$2089",
																	"typeString": "contract IAllo"
																}
															],
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13120:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1208,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13120:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13120:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13106:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "13102:55:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "554e415554484f52495a4544",
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13142:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
																	"typeString": "literal_string \"UNAUTHORIZED\""
																},
																"value": "UNAUTHORIZED"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
																	"typeString": "literal_string \"UNAUTHORIZED\""
																}
															],
															"id": 1213,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "13135:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13135:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1216,
													"nodeType": "ExpressionStatement",
													"src": "13135:22:2"
												}
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "12917:128:2",
										"text": "@notice Checks if the 'msg.sender' is the Allo contract.\n @dev Reverts if the 'msg.sender' is not the Allo contract."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyAllo",
									"nameLocation": "13060:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13074:2:2"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13091:0:2"
									},
									"scope": 1429,
									"src": "13051:114:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "13429:83:2",
										"statements": [
											{
												"condition": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13444:36:2",
													"subExpression": {
														"arguments": [
															{
																"id": 1227,
																"name": "poolId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "13464:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1228,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "13472:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1225,
																"name": "allo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "13445:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IAllo_$2089",
																	"typeString": "contract IAllo"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13450:13:2",
															"memberName": "isPoolManager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2011,
															"src": "13445:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
																"typeString": "function (uint256,address) view external returns (bool)"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13445:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "13440:64:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "554e415554484f52495a4544",
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13489:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
																	"typeString": "literal_string \"UNAUTHORIZED\""
																},
																"value": "UNAUTHORIZED"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
																	"typeString": "literal_string \"UNAUTHORIZED\""
																}
															],
															"id": 1231,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "13482:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13482:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1234,
													"nodeType": "ExpressionStatement",
													"src": "13482:22:2"
												}
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "13173:188:2",
										"text": "@notice Checks if the '_sender' is a pool manager.\n @dev Reverts if the '_sender' is not a pool manager.\n @param _sender The address to check if they are a pool manager"
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyPoolManager",
									"nameLocation": "13376:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "13406:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13398:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13398:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13397:17:2"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13429:0:2"
									},
									"scope": 1429,
									"src": "13367:145:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "13662:59:2",
										"statements": [
											{
												"condition": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13677:11:2",
													"subExpression": {
														"id": 1241,
														"name": "poolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "13678:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1247,
												"nodeType": "IfStatement",
												"src": "13673:40:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "504f4f4c20494e414354495645",
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13697:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_2ab3952d416974c0959bfacd940dbd07d19d1909978ecbfc73b066fc4b04bb3d",
																	"typeString": "literal_string \"POOL INACTIVE\""
																},
																"value": "POOL INACTIVE"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_2ab3952d416974c0959bfacd940dbd07d19d1909978ecbfc73b066fc4b04bb3d",
																	"typeString": "literal_string \"POOL INACTIVE\""
																}
															],
															"id": 1243,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "13690:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13690:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1246,
													"nodeType": "ExpressionStatement",
													"src": "13690:23:2"
												}
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "13520:90:2",
										"text": "@notice Checks if the pool is active.\n @dev Reverts if the pool is not active."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyActivePool",
									"nameLocation": "13625:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13645:2:2"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13662:0:2"
									},
									"scope": 1429,
									"src": "13616:105:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "13867:58:2",
										"statements": [
											{
												"condition": {
													"id": 1253,
													"name": "poolActive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 837,
													"src": "13882:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1258,
												"nodeType": "IfStatement",
												"src": "13878:39:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "504f4f4c20494e414354495645",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13901:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_2ab3952d416974c0959bfacd940dbd07d19d1909978ecbfc73b066fc4b04bb3d",
																	"typeString": "literal_string \"POOL INACTIVE\""
																},
																"value": "POOL INACTIVE"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_2ab3952d416974c0959bfacd940dbd07d19d1909978ecbfc73b066fc4b04bb3d",
																	"typeString": "literal_string \"POOL INACTIVE\""
																}
															],
															"id": 1254,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "13894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13894:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1257,
													"nodeType": "ExpressionStatement",
													"src": "13894:23:2"
												}
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "13729:88:2",
										"text": "@notice Checks if the pool is inactive.\n @dev Reverts if the pool is active."
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInactivePool",
									"nameLocation": "13832:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13850:2:2"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13867:0:2"
									},
									"scope": 1429,
									"src": "13823:102:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "14086:62:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1264,
														"name": "poolId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "14101:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14111:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14101:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "IfStatement",
												"src": "14097:42:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "4e4f545f494e495449414c495a4544",
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14121:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_96a721d265006ec8b79a4f231d5b616559a7b3d181d752324c3a3c78630a14a8",
																	"typeString": "literal_string \"NOT_INITIALIZED\""
																},
																"value": "NOT_INITIALIZED"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_96a721d265006ec8b79a4f231d5b616559a7b3d181d752324c3a3c78630a14a8",
																	"typeString": "literal_string \"NOT_INITIALIZED\""
																}
															],
															"id": 1267,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "14114:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14114:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1270,
													"nodeType": "ExpressionStatement",
													"src": "14114:25:2"
												}
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "13933:100:2",
										"text": "@notice Checks if the pool is initialized.\n @dev Reverts if the pool is not initialized."
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnlyInitialized",
									"nameLocation": "14048:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14069:2:2"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14086:0:2"
									},
									"scope": 1429,
									"src": "14039:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "14440:74:2",
										"statements": [
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1279,
														"name": "poolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "14451:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1280,
														"name": "_active",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "14464:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14451:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "14451:20:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1284,
															"name": "_active",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "14498:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1283,
														"name": "PoolActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2345,
														"src": "14487:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14487:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "EmitStatement",
												"src": "14482:24:2"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "14156:231:2",
										"text": "@notice Set the pool to active or inactive status.\n @dev This will emit a 'PoolActive()' event. Used by the strategy implementation.\n @param _active The status to set, 'true' means active, 'false' means inactive"
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPoolActive",
									"nameLocation": "14402:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "_active",
												"nameLocation": "14422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14417:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14417:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14416:14:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14440:0:2"
									},
									"scope": 1429,
									"src": "14393:121:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "14747:36:2",
										"statements": [
											{
												"expression": {
													"id": 1294,
													"name": "poolActive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 837,
													"src": "14765:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1293,
												"id": 1295,
												"nodeType": "Return",
												"src": "14758:17:2"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "14522:157:2",
										"text": "@notice Checks if the pool is active.\n @dev Used by the strategy implementation.\n @return 'true' if the pool is active, otherwise 'false'"
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isPoolActive",
									"nameLocation": "14694:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14707:2:2"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "14741:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14741:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14740:6:2"
									},
									"scope": 1429,
									"src": "14685:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "14791:162:2",
										"text": "@notice Checks if the allocator is valid\n @param _allocator The allocator address\n @return 'true' if the allocator is valid, otherwise 'false'"
									},
									"id": 1305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_isValidAllocator",
									"nameLocation": "14968:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "14994:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "14986:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14986:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14985:20:2"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "15037:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15037:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15036:6:2"
									},
									"scope": 1429,
									"src": "14959:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "15051:595:2",
										"text": "@notice This will register a recipient, set their status (and any other strategy specific values), and\n         return the ID of the recipient.\n @dev Able to change status all the way up to Accepted, or to Pending and if there are more steps, additional\n      functions should be added to allow the owner to check this. The owner could also check attestations directly\n      and then Accept for instance.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return The ID of the recipient"
									},
									"id": 1315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_registerRecipient",
									"nameLocation": "15661:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "15693:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "15680:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1307,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15680:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "15708:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "15700:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15679:37:2"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "15743:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15743:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15742:9:2"
									},
									"scope": 1429,
									"src": "15652:100:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "15760:248:2",
										"text": "@notice This will allocate to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_allocate",
									"nameLocation": "16023:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "16046:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "16033:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16033:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "16061:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "16053:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16032:37:2"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16086:0:2"
									},
									"scope": 1429,
									"src": "16014:73:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "16095:475:2",
										"text": "@notice This will distribute funds (tokens) to recipients.\n @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n this contract will need to track the amount paid already, so that it doesn't double pay.\n @param _recipientIds The ids of the recipients to distribute to\n @param _data Data required will depend on the strategy implementation\n @param _sender The address of the sender"
									},
									"id": 1334,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_distribute",
									"nameLocation": "16585:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "16614:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16597:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "16597:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16597:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "16642:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16629:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16629:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "16657:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16649:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16649:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16596:69:2"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16682:0:2"
									},
									"scope": 1429,
									"src": "16576:107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "16691:335:2",
										"text": "@notice This will get the payout summary for a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _recipientId The ID of the recipient\n @param _data The data to use to get the payout summary for the recipient\n @return The payout summary for the recipient"
									},
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getPayout",
									"nameLocation": "17041:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "17060:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "17052:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17052:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "17087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "17074:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17074:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17051:42:2"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "17161:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PayoutSummary_$2302_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary"
												},
												"typeName": {
													"id": 1342,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1341,
														"name": "PayoutSummary",
														"nameLocations": [
															"17161:13:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2302,
														"src": "17161:13:2"
													},
													"referencedDeclaration": 2302,
													"src": "17161:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PayoutSummary_$2302_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17160:22:2"
									},
									"scope": 1429,
									"src": "17032:151:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "17191:150:2",
										"text": "@notice This will get the status of a recipient.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"id": 1354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getRecipientStatus",
									"nameLocation": "17356:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "17384:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "17376:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17376:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17375:22:2"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "17429:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$2296",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 1351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1350,
														"name": "Status",
														"nameLocations": [
															"17429:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2296,
														"src": "17429:6:2"
													},
													"referencedDeclaration": 2296,
													"src": "17429:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$2296",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17428:8:2"
									},
									"scope": 1429,
									"src": "17347:90:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "17774:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "17582:117:2",
										"text": "@notice Hook called before increasing the pool amount.\n @param _amount The amount to increase the pool by"
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeIncreasePoolAmount",
									"nameLocation": "17714:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "17740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17739:17:2"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17774:0:2"
									},
									"scope": 1429,
									"src": "17705:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "17974:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "17784:116:2",
										"text": "@notice Hook called after increasing the pool amount.\n @param _amount The amount to increase the pool by"
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterIncreasePoolAmount",
									"nameLocation": "17915:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17948:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "17940:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17940:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17939:17:2"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17974:0:2"
									},
									"scope": 1429,
									"src": "17906:70:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "18247:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "17984:169:2",
										"text": "@notice Hook called before registering a recipient.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender"
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeRegisterRecipient",
									"nameLocation": "18168:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18206:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "18193:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18193:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18221:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "18213:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18213:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18192:37:2"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18247:0:2"
									},
									"scope": 1429,
									"src": "18159:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "18518:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "18257:168:2",
										"text": "@notice Hook called after registering a recipient.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender"
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterRegisterRecipient",
									"nameLocation": "18440:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "18464:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18464:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18492:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "18484:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18484:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18463:37:2"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18518:0:2"
									},
									"scope": 1429,
									"src": "18431:89:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "18787:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "18528:174:2",
										"text": "@notice Hook called before allocating to a recipient.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeAllocate",
									"nameLocation": "18717:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "18746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "18733:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18733:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "18761:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "18753:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18732:37:2"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18787:0:2"
									},
									"scope": 1429,
									"src": "18708:81:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1403,
										"nodeType": "Block",
										"src": "19054:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "18797:173:2",
										"text": "@notice Hook called after allocating to a recipient.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"id": 1404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterAllocate",
									"nameLocation": "18985:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19013:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "19000:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19000:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "19028:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "19020:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18999:37:2"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19054:0:2"
									},
									"scope": 1429,
									"src": "18976:80:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "19432:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "19064:249:2",
										"text": "@notice Hook called before distributing funds (tokens) to recipients.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeDistribute",
									"nameLocation": "19328:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "19363:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "19346:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19346:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1407,
													"nodeType": "ArrayTypeName",
													"src": "19346:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19391:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "19378:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19378:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "19406:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "19398:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19398:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:69:2"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19432:0:2"
									},
									"scope": 1429,
									"src": "19319:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "19808:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "19442:248:2",
										"text": "@notice Hook called after distributing funds (tokens) to recipients.\n @param _recipientIds The IDs of the recipients\n @param _data The data to use to distribute to the recipients\n @param _sender The address of the sender"
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterDistribute",
									"nameLocation": "19705:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "19739:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "19722:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1418,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "19722:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1419,
													"nodeType": "ArrayTypeName",
													"src": "19722:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "19767:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "19754:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19754:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "19782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "19774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19774:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19721:69:2"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19808:0:2"
									},
									"scope": 1429,
									"src": "19696:114:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1430,
							"src": "4526:15287:2",
							"usedErrors": [],
							"usedEvents": [
								2309,
								2318,
								2329,
								2340,
								2345
							]
						}
					],
					"src": "43:19770:2"
				},
				"id": 2
			},
			"contracts/interfaces/IMProject.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMProject.sol",
					"exportedSymbols": {
						"Contributor": [
							1634
						],
						"Deliverable": [
							1692
						],
						"IMProject": [
							1514
						],
						"PaymentDirective": [
							1674
						],
						"PayoutStatus": [
							1615
						],
						"Project": [
							1653
						]
					},
					"id": 1515,
					"license": "APACHE 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:3"
						},
						{
							"absolutePath": "contracts/interfaces/IMStructs.sol",
							"file": "../interfaces/IMStructs.sol",
							"id": 1437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1515,
							"sourceUnit": 1693,
							"src": "68:110:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1432,
										"name": "Project",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1653,
										"src": "76:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1433,
										"name": "Contributor",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1634,
										"src": "85:11:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1434,
										"name": "Deliverable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1692,
										"src": "98:11:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1435,
										"name": "PaymentDirective",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1674,
										"src": "111:16:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1436,
										"name": "PayoutStatus",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1615,
										"src": "129:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMProject",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1514,
							"linearizedBaseContracts": [
								1514
							],
							"name": "IMProject",
							"nameLocation": "192:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3ba94ed8",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProjectDescriptor",
									"nameLocation": "221:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:2:3"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_project",
												"nameLocation": "282:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "267:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Project_$1653_memory_ptr",
													"typeString": "struct Project"
												},
												"typeName": {
													"id": 1440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1439,
														"name": "Project",
														"nameLocations": [
															"267:7:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1653,
														"src": "267:7:3"
													},
													"referencedDeclaration": 1653,
													"src": "267:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Project_$1653_storage_ptr",
														"typeString": "struct Project"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:25:3"
									},
									"scope": 1514,
									"src": "212:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1fae35d4",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPaymentDirectives",
									"nameLocation": "309:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "329:2:3"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "_directives",
												"nameLocation": "382:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "355:38:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PaymentDirective[]"
												},
												"typeName": {
													"baseType": {
														"id": 1446,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1445,
															"name": "PaymentDirective",
															"nameLocations": [
																"355:16:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1674,
															"src": "355:16:3"
														},
														"referencedDeclaration": 1674,
														"src": "355:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PaymentDirective_$1674_storage_ptr",
															"typeString": "struct PaymentDirective"
														}
													},
													"id": 1447,
													"nodeType": "ArrayTypeName",
													"src": "355:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PaymentDirective_$1674_storage_$dyn_storage_ptr",
														"typeString": "struct PaymentDirective[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "354:40:3"
									},
									"scope": 1514,
									"src": "300:95:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3280c215",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitDeliverable",
									"nameLocation": "412:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "_deliverableId",
												"nameLocation": "438:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "430:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:24:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "_submitted",
												"nameLocation": "477:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "472:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "472:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:17:3"
									},
									"scope": 1514,
									"src": "403:86:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8e2c093d",
									"id": 1463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContributorIds",
									"nameLocation": "508:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:2:3"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_contributorIds",
												"nameLocation": "569:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "551:33:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1459,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "551:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1460,
													"nodeType": "ArrayTypeName",
													"src": "551:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:35:3"
									},
									"scope": 1514,
									"src": "499:87:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2890ee5c",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContributorById",
									"nameLocation": "603:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "_contributorId",
												"nameLocation": "630:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "622:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:25:3"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "_contributor",
												"nameLocation": "689:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "670:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
													"typeString": "struct Contributor"
												},
												"typeName": {
													"id": 1468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1467,
														"name": "Contributor",
														"nameLocations": [
															"670:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1634,
														"src": "670:11:3"
													},
													"referencedDeclaration": 1634,
													"src": "670:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Contributor_$1634_storage_ptr",
														"typeString": "struct Contributor"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "669:33:3"
									},
									"scope": 1514,
									"src": "594:109:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "779a5a7f",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContributorByAddress",
									"nameLocation": "720:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "_contributorWallet",
												"nameLocation": "752:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "744:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:28:3"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "_contributor",
												"nameLocation": "814:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "795:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Contributor_$1634_memory_ptr",
													"typeString": "struct Contributor"
												},
												"typeName": {
													"id": 1476,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1475,
														"name": "Contributor",
														"nameLocations": [
															"795:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1634,
														"src": "795:11:3"
													},
													"referencedDeclaration": 1634,
													"src": "795:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Contributor_$1634_storage_ptr",
														"typeString": "struct Contributor"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:33:3"
									},
									"scope": 1514,
									"src": "711:117:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "190fdcbd",
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDeliverableById",
									"nameLocation": "845:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_deliverableId",
												"nameLocation": "872:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "864:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:24:3"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "_deliverable",
												"nameLocation": "930:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "911:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Deliverable_$1692_memory_ptr",
													"typeString": "struct Deliverable"
												},
												"typeName": {
													"id": 1484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1483,
														"name": "Deliverable",
														"nameLocations": [
															"911:11:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1692,
														"src": "911:11:3"
													},
													"referencedDeclaration": 1692,
													"src": "911:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deliverable_$1692_storage_ptr",
														"typeString": "struct Deliverable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:33:3"
									},
									"scope": 1514,
									"src": "836:108:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "04c325be",
									"id": 1497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePayoutStatus",
									"nameLocation": "961:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "_deliverableId",
												"nameLocation": "988:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "980:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "1017:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1004:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PayoutStatus_$1615",
													"typeString": "enum PayoutStatus"
												},
												"typeName": {
													"id": 1491,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1490,
														"name": "PayoutStatus",
														"nameLocations": [
															"1004:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1615,
														"src": "1004:12:3"
													},
													"referencedDeclaration": 1615,
													"src": "1004:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PayoutStatus_$1615",
														"typeString": "enum PayoutStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:46:3"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "_updated",
												"nameLocation": "1049:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "1044:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1044:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:15:3"
									},
									"scope": 1514,
									"src": "952:107:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f3cda72c",
									"id": 1506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reAssignDeliverable",
									"nameLocation": "1076:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "_deliverableId",
												"nameLocation": "1104:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1096:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "_newContributorId",
												"nameLocation": "1128:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1120:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:51:3"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "_updated",
												"nameLocation": "1171:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1166:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1166:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:15:3"
									},
									"scope": 1514,
									"src": "1067:114:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "caffe061",
									"id": 1513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "amendBudget",
									"nameLocation": "1198:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "_newBudget",
												"nameLocation": "1218:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1210:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:20:3"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "_amendmentAmount",
												"nameLocation": "1255:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "1248:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1510,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1248:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:25:3"
									},
									"scope": 1514,
									"src": "1189:84:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1515,
							"src": "182:1094:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:1236:3"
				},
				"id": 3
			},
			"contracts/interfaces/IMRegister.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMRegister.sol",
					"exportedSymbols": {
						"DestinationConfig": [
							1592
						],
						"IMRegister": [
							1546
						]
					},
					"id": 1547,
					"license": "APACHE 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1516,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:4"
						},
						{
							"absolutePath": "contracts/interfaces/IMStructs.sol",
							"file": "./IMStructs.sol",
							"id": 1518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1547,
							"sourceUnit": 1693,
							"src": "68:50:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1517,
										"name": "DestinationConfig",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1592,
										"src": "76:17:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMRegister",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1546,
							"linearizedBaseContracts": [
								1546
							],
							"name": "IMRegister",
							"nameLocation": "134:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3408e470",
									"id": 1523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getChainId",
									"nameLocation": "163:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:2:4"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "_chainId",
												"nameLocation": "207:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "199:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "198:18:4"
									},
									"scope": 1546,
									"src": "154:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bf40fac1",
									"id": 1530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "234:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "259:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "245:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1524,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "245:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:21:4"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "297:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "289:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:18:4"
									},
									"scope": 1546,
									"src": "225:82:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5fd4b08a",
									"id": 1537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "324:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "340:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "332:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:18:4"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "387:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "373:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1534,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:21:4"
									},
									"scope": 1546,
									"src": "315:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cea27c36",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDestinationConfig",
									"nameLocation": "411:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "_chainId",
												"nameLocation": "440:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "432:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:18:4"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "_dConfig",
												"nameLocation": "498:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "473:33:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DestinationConfig_$1592_memory_ptr",
													"typeString": "struct DestinationConfig"
												},
												"typeName": {
													"id": 1542,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1541,
														"name": "DestinationConfig",
														"nameLocations": [
															"473:17:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1592,
														"src": "473:17:4"
													},
													"referencedDeclaration": 1592,
													"src": "473:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DestinationConfig_$1592_storage_ptr",
														"typeString": "struct DestinationConfig"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:35:4"
									},
									"scope": 1546,
									"src": "402:106:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1547,
							"src": "124:389:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:473:4"
				},
				"id": 4
			},
			"contracts/interfaces/IMStructs.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMStructs.sol",
					"exportedSymbols": {
						"Contributor": [
							1634
						],
						"ContributorAssignment": [
							1624
						],
						"Deliverable": [
							1692
						],
						"DeliverableStatus": [
							1609
						],
						"DestinationConfig": [
							1592
						],
						"Gilt": [
							1563
						],
						"GiltClaim": [
							1580
						],
						"Metadata": [
							2461
						],
						"PaymentDirective": [
							1674
						],
						"PayoutStatus": [
							1615
						],
						"Project": [
							1653
						],
						"ProjectAllocation": [
							1658
						],
						"SendStatement": [
							1603
						],
						"TransmittedGilt": [
							1573
						]
					},
					"id": 1693,
					"license": "APACHE 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1548,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:5"
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol",
							"file": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol",
							"id": 1550,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 2462,
							"src": "68:114:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1549,
										"name": "Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2461,
										"src": "76:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "Gilt",
							"id": 1563,
							"members": [
								{
									"constant": false,
									"id": 1552,
									"mutability": "mutable",
									"name": "erc20",
									"nameLocation": "213:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1563,
									"src": "205:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1551,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "205:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1554,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "234:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1563,
									"src": "226:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1553,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "226:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1556,
									"mutability": "mutable",
									"name": "creationDate",
									"nameLocation": "256:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1563,
									"src": "248:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1555,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "248:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1558,
									"mutability": "mutable",
									"name": "chainId",
									"nameLocation": "284:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1563,
									"src": "276:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1557,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "276:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1560,
									"mutability": "mutable",
									"name": "giltContract",
									"nameLocation": "307:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1563,
									"src": "299:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1559,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "299:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1562,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "335:2:5",
									"nodeType": "VariableDeclaration",
									"scope": 1563,
									"src": "327:10:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1561,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "327:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Gilt",
							"nameLocation": "193:4:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "186:156:5",
							"visibility": "public"
						},
						{
							"canonicalName": "TransmittedGilt",
							"id": 1573,
							"members": [
								{
									"constant": false,
									"id": 1566,
									"mutability": "mutable",
									"name": "gilt",
									"nameLocation": "382:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1573,
									"src": "377:9:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Gilt_$1563_storage_ptr",
										"typeString": "struct Gilt"
									},
									"typeName": {
										"id": 1565,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1564,
											"name": "Gilt",
											"nameLocations": [
												"377:4:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1563,
											"src": "377:4:5"
										},
										"referencedDeclaration": 1563,
										"src": "377:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Gilt_$1563_storage_ptr",
											"typeString": "struct Gilt"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1568,
									"mutability": "mutable",
									"name": "alloProfileId",
									"nameLocation": "402:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1573,
									"src": "394:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1567,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "394:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1570,
									"mutability": "mutable",
									"name": "projectId",
									"nameLocation": "430:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1573,
									"src": "422:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1569,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "422:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1572,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "454:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1573,
									"src": "446:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1571,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "446:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "TransmittedGilt",
							"nameLocation": "353:15:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "346:118:5",
							"visibility": "public"
						},
						{
							"canonicalName": "GiltClaim",
							"id": 1580,
							"members": [
								{
									"constant": false,
									"id": 1575,
									"mutability": "mutable",
									"name": "projectId",
									"nameLocation": "501:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1580,
									"src": "493:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1574,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1577,
									"mutability": "mutable",
									"name": "giltId",
									"nameLocation": "526:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1580,
									"src": "518:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1576,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "518:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1579,
									"mutability": "mutable",
									"name": "chainId",
									"nameLocation": "548:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1580,
									"src": "540:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1578,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "540:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "GiltClaim",
							"nameLocation": "475:9:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "468:92:5",
							"visibility": "public"
						},
						{
							"canonicalName": "DestinationConfig",
							"id": 1592,
							"members": [
								{
									"constant": false,
									"id": 1582,
									"mutability": "mutable",
									"name": "chainId",
									"nameLocation": "604:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1592,
									"src": "596:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "596:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1584,
									"mutability": "mutable",
									"name": "ccipChainSelector",
									"nameLocation": "626:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1592,
									"src": "619:24:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1583,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "619:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1586,
									"mutability": "mutable",
									"name": "routerAddress",
									"nameLocation": "659:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1592,
									"src": "651:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1585,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "651:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1589,
									"mutability": "mutable",
									"name": "feeTokens",
									"nameLocation": "691:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1592,
									"src": "680:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1587,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "680:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1588,
										"nodeType": "ArrayTypeName",
										"src": "680:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1591,
									"mutability": "mutable",
									"name": "giltReciever",
									"nameLocation": "716:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1592,
									"src": "708:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1590,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "708:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "DestinationConfig",
							"nameLocation": "571:17:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "564:169:5",
							"visibility": "public"
						},
						{
							"canonicalName": "SendStatement",
							"id": 1603,
							"members": [
								{
									"constant": false,
									"id": 1594,
									"mutability": "mutable",
									"name": "sendId",
									"nameLocation": "774:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "766:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1593,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "766:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1596,
									"mutability": "mutable",
									"name": "fees",
									"nameLocation": "795:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "787:12:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "787:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1598,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "815:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "807:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1597,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "807:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1600,
									"mutability": "mutable",
									"name": "sendDate",
									"nameLocation": "836:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "828:16:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1599,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "828:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1602,
									"mutability": "mutable",
									"name": "ccipMesssageId",
									"nameLocation": "859:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1603,
									"src": "851:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1601,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "SendStatement",
							"nameLocation": "744:13:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "737:140:5",
							"visibility": "public"
						},
						{
							"canonicalName": "DeliverableStatus",
							"id": 1609,
							"members": [
								{
									"id": 1604,
									"name": "PROPOSED",
									"nameLocation": "905:8:5",
									"nodeType": "EnumValue",
									"src": "905:8:5"
								},
								{
									"id": 1605,
									"name": "AGREED",
									"nameLocation": "915:6:5",
									"nodeType": "EnumValue",
									"src": "915:6:5"
								},
								{
									"id": 1606,
									"name": "DELIVERED",
									"nameLocation": "923:9:5",
									"nodeType": "EnumValue",
									"src": "923:9:5"
								},
								{
									"id": 1607,
									"name": "SUSPENDED",
									"nameLocation": "934:9:5",
									"nodeType": "EnumValue",
									"src": "934:9:5"
								},
								{
									"id": 1608,
									"name": "CANCELLED",
									"nameLocation": "945:9:5",
									"nodeType": "EnumValue",
									"src": "945:9:5"
								}
							],
							"name": "DeliverableStatus",
							"nameLocation": "886:17:5",
							"nodeType": "EnumDefinition",
							"src": "881:74:5"
						},
						{
							"canonicalName": "PayoutStatus",
							"id": 1615,
							"members": [
								{
									"id": 1610,
									"name": "AGREED",
									"nameLocation": "978:6:5",
									"nodeType": "EnumValue",
									"src": "978:6:5"
								},
								{
									"id": 1611,
									"name": "PENDING",
									"nameLocation": "986:7:5",
									"nodeType": "EnumValue",
									"src": "986:7:5"
								},
								{
									"id": 1612,
									"name": "PAID",
									"nameLocation": "995:4:5",
									"nodeType": "EnumValue",
									"src": "995:4:5"
								},
								{
									"id": 1613,
									"name": "SUSPENDED",
									"nameLocation": "1001:9:5",
									"nodeType": "EnumValue",
									"src": "1001:9:5"
								},
								{
									"id": 1614,
									"name": "CANCELLED",
									"nameLocation": "1012:9:5",
									"nodeType": "EnumValue",
									"src": "1012:9:5"
								}
							],
							"name": "PayoutStatus",
							"nameLocation": "964:12:5",
							"nodeType": "EnumDefinition",
							"src": "959:63:5"
						},
						{
							"canonicalName": "ContributorAssignment",
							"id": 1624,
							"members": [
								{
									"constant": false,
									"id": 1617,
									"mutability": "mutable",
									"name": "project",
									"nameLocation": "1071:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1624,
									"src": "1063:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1616,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1063:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1620,
									"mutability": "mutable",
									"name": "contributor",
									"nameLocation": "1098:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1624,
									"src": "1086:23:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Contributor_$1634_storage_ptr",
										"typeString": "struct Contributor"
									},
									"typeName": {
										"id": 1619,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1618,
											"name": "Contributor",
											"nameLocations": [
												"1086:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1634,
											"src": "1086:11:5"
										},
										"referencedDeclaration": 1634,
										"src": "1086:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Contributor_$1634_storage_ptr",
											"typeString": "struct Contributor"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1623,
									"mutability": "mutable",
									"name": "initialAssignments",
									"nameLocation": "1128:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1624,
									"src": "1117:29:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1621,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1622,
										"nodeType": "ArrayTypeName",
										"src": "1117:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ContributorAssignment",
							"nameLocation": "1033:21:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "1026:127:5",
							"visibility": "public"
						},
						{
							"canonicalName": "Contributor",
							"id": 1634,
							"members": [
								{
									"constant": false,
									"id": 1626,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "1214:2:5",
									"nodeType": "VariableDeclaration",
									"scope": 1634,
									"src": "1206:10:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1625,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1206:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1628,
									"mutability": "mutable",
									"name": "homeChain",
									"nameLocation": "1232:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1634,
									"src": "1224:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1627,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1224:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1630,
									"mutability": "mutable",
									"name": "wallet",
									"nameLocation": "1257:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1634,
									"src": "1249:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1629,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1249:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1633,
									"mutability": "mutable",
									"name": "metadata",
									"nameLocation": "1279:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1634,
									"src": "1270:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
										"typeString": "struct Metadata"
									},
									"typeName": {
										"id": 1632,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1631,
											"name": "Metadata",
											"nameLocations": [
												"1270:8:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2461,
											"src": "1270:8:5"
										},
										"referencedDeclaration": 2461,
										"src": "1270:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
											"typeString": "struct Metadata"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Contributor",
							"nameLocation": "1187:11:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "1180:111:5",
							"visibility": "public"
						},
						{
							"canonicalName": "Project",
							"id": 1653,
							"members": [
								{
									"constant": false,
									"id": 1636,
									"mutability": "mutable",
									"name": "projectId",
									"nameLocation": "1326:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1318:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1635,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1318:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1638,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1350:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1343:11:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1637,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1343:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1640,
									"mutability": "mutable",
									"name": "alloPoolId",
									"nameLocation": "1370:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1362:18:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1639,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1362:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1642,
									"mutability": "mutable",
									"name": "alloProfileId",
									"nameLocation": "1395:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1387:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1641,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1387:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1644,
									"mutability": "mutable",
									"name": "payoutCurrency",
									"nameLocation": "1425:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1417:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1643,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1417:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1646,
									"mutability": "mutable",
									"name": "budget",
									"nameLocation": "1455:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1447:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1645,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1447:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1649,
									"mutability": "mutable",
									"name": "deliverableIds",
									"nameLocation": "1479:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1468:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1647,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1468:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1648,
										"nodeType": "ArrayTypeName",
										"src": "1468:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1652,
									"mutability": "mutable",
									"name": "contributors",
									"nameLocation": "1512:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1653,
									"src": "1501:23:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1650,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1501:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1651,
										"nodeType": "ArrayTypeName",
										"src": "1501:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Project",
							"nameLocation": "1302:7:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "1295:234:5",
							"visibility": "public"
						},
						{
							"canonicalName": "ProjectAllocation",
							"id": 1658,
							"members": [
								{
									"constant": false,
									"id": 1655,
									"mutability": "mutable",
									"name": "project",
									"nameLocation": "1573:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "1565:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1654,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1565:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1657,
									"mutability": "mutable",
									"name": "newAllocation",
									"nameLocation": "1596:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1658,
									"src": "1588:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1656,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1588:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ProjectAllocation",
							"nameLocation": "1540:17:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "1533:81:5",
							"visibility": "public"
						},
						{
							"canonicalName": "PaymentDirective",
							"id": 1674,
							"members": [
								{
									"constant": false,
									"id": 1660,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "1657:2:5",
									"nodeType": "VariableDeclaration",
									"scope": 1674,
									"src": "1649:10:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1659,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1649:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1663,
									"mutability": "mutable",
									"name": "contributor",
									"nameLocation": "1679:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1674,
									"src": "1667:23:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Contributor_$1634_storage_ptr",
										"typeString": "struct Contributor"
									},
									"typeName": {
										"id": 1662,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1661,
											"name": "Contributor",
											"nameLocations": [
												"1667:11:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1634,
											"src": "1667:11:5"
										},
										"referencedDeclaration": 1634,
										"src": "1667:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Contributor_$1634_storage_ptr",
											"typeString": "struct Contributor"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1665,
									"mutability": "mutable",
									"name": "projectId",
									"nameLocation": "1706:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1674,
									"src": "1698:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1664,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1698:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1667,
									"mutability": "mutable",
									"name": "alloProfileId",
									"nameLocation": "1731:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1674,
									"src": "1723:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1666,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1669,
									"mutability": "mutable",
									"name": "deliverableId",
									"nameLocation": "1760:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1674,
									"src": "1752:21:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1668,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1671,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "1789:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1674,
									"src": "1781:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1670,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1781:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1673,
									"mutability": "mutable",
									"name": "erc20",
									"nameLocation": "1811:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1674,
									"src": "1803:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1672,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1803:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PaymentDirective",
							"nameLocation": "1625:16:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "1618:203:5",
							"visibility": "public"
						},
						{
							"canonicalName": "Deliverable",
							"id": 1692,
							"members": [
								{
									"constant": false,
									"id": 1676,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "1859:2:5",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "1851:10:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1675,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1851:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1678,
									"mutability": "mutable",
									"name": "projectId",
									"nameLocation": "1877:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "1869:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1677,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1869:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1680,
									"mutability": "mutable",
									"name": "payoutAmount",
									"nameLocation": "1902:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "1894:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1679,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1894:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1682,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "1928:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "1921:11:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1681,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1921:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1685,
									"mutability": "mutable",
									"name": "metadata",
									"nameLocation": "1949:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "1940:17:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
										"typeString": "struct Metadata"
									},
									"typeName": {
										"id": 1684,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1683,
											"name": "Metadata",
											"nameLocations": [
												"1940:8:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2461,
											"src": "1940:8:5"
										},
										"referencedDeclaration": 2461,
										"src": "1940:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
											"typeString": "struct Metadata"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1688,
									"mutability": "mutable",
									"name": "deliverableStatus",
									"nameLocation": "1982:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "1964:35:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_DeliverableStatus_$1609",
										"typeString": "enum DeliverableStatus"
									},
									"typeName": {
										"id": 1687,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1686,
											"name": "DeliverableStatus",
											"nameLocations": [
												"1964:17:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1609,
											"src": "1964:17:5"
										},
										"referencedDeclaration": 1609,
										"src": "1964:17:5",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_DeliverableStatus_$1609",
											"typeString": "enum DeliverableStatus"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1691,
									"mutability": "mutable",
									"name": "payoutStatus",
									"nameLocation": "2019:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "2006:25:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_PayoutStatus_$1615",
										"typeString": "enum PayoutStatus"
									},
									"typeName": {
										"id": 1690,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1689,
											"name": "PayoutStatus",
											"nameLocations": [
												"2006:12:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1615,
											"src": "2006:12:5"
										},
										"referencedDeclaration": 1615,
										"src": "2006:12:5",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_PayoutStatus_$1615",
											"typeString": "enum PayoutStatus"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Deliverable",
							"nameLocation": "1832:11:5",
							"nodeType": "StructDefinition",
							"scope": 1693,
							"src": "1825:211:5",
							"visibility": "public"
						}
					],
					"src": "40:1998:5"
				},
				"id": 5
			},
			"contracts/interfaces/IMVersion.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMVersion.sol",
					"exportedSymbols": {
						"IMVersion": [
							1705
						]
					},
					"id": 1706,
					"license": "APACHE 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMVersion",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "IMVersion",
							"nameLocation": "78:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17d7de7c",
									"id": 1699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "107:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:6"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "154:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "140:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "140:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "139:21:6"
									},
									"scope": 1705,
									"src": "98:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0d8e6e2c",
									"id": 1704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nameLocation": "178:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:2:6"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "_version",
												"nameLocation": "222:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "214:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "214:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "213:18:6"
									},
									"scope": 1705,
									"src": "169:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1706,
							"src": "68:167:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:195:6"
				},
				"id": 6
			},
			"contracts/interfaces/IMargari.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMargari.sol",
					"exportedSymbols": {
						"Gilt": [
							1563
						],
						"GiltClaim": [
							1580
						],
						"IMargari": [
							1749
						]
					},
					"id": 1750,
					"license": "APACHE 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:7"
						},
						{
							"absolutePath": "contracts/interfaces/IMStructs.sol",
							"file": "./IMStructs.sol",
							"id": 1710,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1750,
							"sourceUnit": 1693,
							"src": "68:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1708,
										"name": "Gilt",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1563,
										"src": "76:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1709,
										"name": "GiltClaim",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1580,
										"src": "82:9:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMargari",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1749,
							"linearizedBaseContracts": [
								1749
							],
							"name": "IMargari",
							"nameLocation": "130:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "352ae5dc",
									"id": 1724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendGilt",
									"nameLocation": "201:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "_gilt",
												"nameLocation": "222:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "210:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Gilt_$1563_memory_ptr",
													"typeString": "struct Gilt"
												},
												"typeName": {
													"id": 1712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1711,
														"name": "Gilt",
														"nameLocations": [
															"210:4:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1563,
														"src": "210:4:7"
													},
													"referencedDeclaration": 1563,
													"src": "210:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Gilt_$1563_storage_ptr",
														"typeString": "struct Gilt"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "_alloProfileId",
												"nameLocation": "237:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "229:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "261:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "253:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "_destinationChainId",
												"nameLocation": "281:19:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "273:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "209:92:7"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "_sendId",
												"nameLocation": "328:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "320:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:17:7"
									},
									"scope": 1749,
									"src": "192:145:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c1ee37e2",
									"id": 1741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendFunds",
									"nameLocation": "470:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "_chainId",
												"nameLocation": "488:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "480:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "_erc20",
												"nameLocation": "506:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "498:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "522:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "514:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "_remoteRecipient",
												"nameLocation": "539:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "531:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "_alloProfileId",
												"nameLocation": "565:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "557:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1733,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "589:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "581:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "479:121:7"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "_sendId",
												"nameLocation": "635:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "627:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:17:7"
									},
									"scope": 1749,
									"src": "461:183:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "351cd8b2",
									"id": 1748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimGilts",
									"nameLocation": "727:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:2:7"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "_giltClaims",
												"nameLocation": "778:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1748,
												"src": "758:31:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_GiltClaim_$1580_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct GiltClaim[]"
												},
												"typeName": {
													"baseType": {
														"id": 1744,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1743,
															"name": "GiltClaim",
															"nameLocations": [
																"758:9:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1580,
															"src": "758:9:7"
														},
														"referencedDeclaration": 1580,
														"src": "758:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GiltClaim_$1580_storage_ptr",
															"typeString": "struct GiltClaim"
														}
													},
													"id": 1745,
													"nodeType": "ArrayTypeName",
													"src": "758:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_GiltClaim_$1580_storage_$dyn_storage_ptr",
														"typeString": "struct GiltClaim[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "757:33:7"
									},
									"scope": 1749,
									"src": "718:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1750,
							"src": "120:676:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:756:7"
				},
				"id": 7
			},
			"contracts/interfaces/IMargariAlloStrategy.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IMargariAlloStrategy.sol",
					"exportedSymbols": {
						"IMargariAlloStrategy": [
							1752
						]
					},
					"id": 1753,
					"license": "APACHE 2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1751,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMargariAlloStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1752,
							"linearizedBaseContracts": [
								1752
							],
							"name": "IMargariAlloStrategy",
							"nameLocation": "80:20:8",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1753,
							"src": "70:40:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:70:8"
				},
				"id": 8
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol": {
				"ast": {
					"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol",
					"exportedSymbols": {
						"IAllo": [
							2089
						],
						"IRegistry": [
							2282
						],
						"IStrategy": [
							2451
						],
						"Metadata": [
							2461
						]
					},
					"id": 2090,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:9"
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol",
							"file": "./IRegistry.sol",
							"id": 1756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2090,
							"sourceUnit": 2283,
							"src": "82:42:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1755,
										"name": "IRegistry",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2282,
										"src": "90:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol",
							"file": "./IStrategy.sol",
							"id": 1758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2090,
							"sourceUnit": 2452,
							"src": "125:42:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1757,
										"name": "IStrategy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2451,
										"src": "133:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol",
							"file": "../libraries/Metadata.sol",
							"id": 1760,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2090,
							"sourceUnit": 2462,
							"src": "190:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1759,
										"name": "Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2461,
										"src": "198:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAllo",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1761,
								"nodeType": "StructuredDocumentation",
								"src": "4234:297:9",
								"text": "@title Allo Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Interface for the Allo contract. It exposes all functions needed to use the Allo protocol."
							},
							"fullyImplemented": false,
							"id": 2089,
							"linearizedBaseContracts": [
								2089
							],
							"name": "IAllo",
							"nameLocation": "4541:5:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IAllo.Pool",
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "4647:66:9",
										"text": "@notice the Pool struct that all strategy pools are based from"
									},
									"id": 1777,
									"members": [
										{
											"constant": false,
											"id": 1764,
											"mutability": "mutable",
											"name": "profileId",
											"nameLocation": "4748:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "4740:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1763,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4740:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1767,
											"mutability": "mutable",
											"name": "strategy",
											"nameLocation": "4777:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "4767:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IStrategy_$2451",
												"typeString": "contract IStrategy"
											},
											"typeName": {
												"id": 1766,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1765,
													"name": "IStrategy",
													"nameLocations": [
														"4767:9:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2451,
													"src": "4767:9:9"
												},
												"referencedDeclaration": 2451,
												"src": "4767:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IStrategy_$2451",
													"typeString": "contract IStrategy"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1769,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "4803:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "4795:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1768,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4795:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1772,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "4827:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "4818:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
												"typeString": "struct Metadata"
											},
											"typeName": {
												"id": 1771,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1770,
													"name": "Metadata",
													"nameLocations": [
														"4818:8:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2461,
													"src": "4818:8:9"
												},
												"referencedDeclaration": 2461,
												"src": "4818:8:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
													"typeString": "struct Metadata"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1774,
											"mutability": "mutable",
											"name": "managerRole",
											"nameLocation": "4853:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "4845:19:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1773,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4845:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1776,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "4882:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1777,
											"src": "4874:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1775,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "4874:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pool",
									"nameLocation": "4725:4:9",
									"nodeType": "StructDefinition",
									"scope": 2089,
									"src": "4718:180:9",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "4998:402:9",
										"text": "@notice Event emitted when a new pool is created\n @param poolId ID of the pool created\n @param profileId ID of the profile the pool is associated with\n @param strategy Address of the strategy contract\n @param token Address of the token pool was funded with when created\n @param amount Amount pool was funded with when created\n @param metadata Pool metadata"
									},
									"eventSelector": "69bcb5a6cf6a3c95185cbb451e77787240c866dd2e8332597e3013ff18a1aba1",
									"id": 1794,
									"name": "PoolCreated",
									"nameLocation": "5411:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5448:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "5432:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5432:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5480:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "5464:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1781,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5464:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "5509:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "5499:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IStrategy_$2451",
													"typeString": "contract IStrategy"
												},
												"typeName": {
													"id": 1784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1783,
														"name": "IStrategy",
														"nameLocations": [
															"5499:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2451,
														"src": "5499:9:9"
													},
													"referencedDeclaration": 2451,
													"src": "5499:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IStrategy_$2451",
														"typeString": "contract IStrategy"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5535:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "5527:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5527:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5558:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "5550:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5550:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5583:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "5574:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 1791,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1790,
														"name": "Metadata",
														"nameLocations": [
															"5574:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2461,
														"src": "5574:8:9"
													},
													"referencedDeclaration": 2461,
													"src": "5574:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5422:175:9"
									},
									"src": "5405:193:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "5604:152:9",
										"text": "@notice Emitted when a pools metadata is updated\n @param poolId ID of the pool updated\n @param metadata Pool metadata that was updated"
									},
									"eventSelector": "14f52b76bda9e4c482842cefda2968d332933577988f224e80aae18fba10edf0",
									"id": 1802,
									"name": "PoolMetadataUpdated",
									"nameLocation": "5767:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5803:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "5787:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5820:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "5811:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 1799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1798,
														"name": "Metadata",
														"nameLocations": [
															"5811:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2461,
														"src": "5811:8:9"
													},
													"referencedDeclaration": 2461,
													"src": "5811:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:43:9"
									},
									"src": "5761:69:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "5836:191:9",
										"text": "@notice Emitted when a pool is funded\n @param poolId ID of the pool funded\n @param amount Amount funded to the pool\n @param fee Amount of the fee paid to the treasury"
									},
									"eventSelector": "bf59838198f4ea92f663f5c1fc697f151a1b746b7dff86d564f250a55cbb4851",
									"id": 1811,
									"name": "PoolFunded",
									"nameLocation": "6038:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6065:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "6049:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6049:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6081:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "6073:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6073:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "6097:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "6089:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6048:53:9"
									},
									"src": "6032:70:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1812,
										"nodeType": "StructuredDocumentation",
										"src": "6108:158:9",
										"text": "@notice Emitted when the base fee is paid\n @param poolId ID of the pool the base fee was paid for\n @param amount Amount of the base fee paid"
									},
									"eventSelector": "02e340b51c6ae66fd22509c9b016f224c47a54063d4259fe3d860958e9eaac72",
									"id": 1818,
									"name": "BaseFeePaid",
									"nameLocation": "6277:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"indexed": true,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "6305:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6289:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6321:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "6313:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6288:40:9"
									},
									"src": "6271:58:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "6335:108:9",
										"text": "@notice Emitted when the treasury address is updated\n @param treasury Address of the new treasury"
									},
									"eventSelector": "7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d1",
									"id": 1823,
									"name": "TreasuryUpdated",
									"nameLocation": "6454:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"indexed": false,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "6478:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "6470:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:18:9"
									},
									"src": "6448:40:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "6494:104:9",
										"text": "@notice Emitted when the percent fee is updated\n @param percentFee New percentage for the fee"
									},
									"eventSelector": "9e826789de2de708fd9f09edea1182545e543893caa8ff71f8eb3aab50a4b065",
									"id": 1828,
									"name": "PercentFeeUpdated",
									"nameLocation": "6609:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"indexed": false,
												"mutability": "mutable",
												"name": "percentFee",
												"nameLocation": "6635:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "6627:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6626:20:9"
									},
									"src": "6603:44:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "6653:91:9",
										"text": "@notice Emitted when the base fee is updated\n @param baseFee New base fee amount"
									},
									"eventSelector": "803bee7e92bbc6ae7a1551f9f4ed3e31a8ea8df32e93332f41b0028f1091f9c3",
									"id": 1833,
									"name": "BaseFeeUpdated",
									"nameLocation": "6755:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseFee",
												"nameLocation": "6778:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "6770:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6770:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6769:17:9"
									},
									"src": "6749:38:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "6793:108:9",
										"text": "@notice Emitted when the registry address is updated\n @param registry Address of the new registry"
									},
									"eventSelector": "d6ceddf6d2a22f21c7c81675c518004eff43bc5c8a6fc32a0b748e69d58671cd",
									"id": 1838,
									"name": "RegistryUpdated",
									"nameLocation": "6912:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"indexed": false,
												"mutability": "mutable",
												"name": "registry",
												"nameLocation": "6936:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "6928:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6927:18:9"
									},
									"src": "6906:40:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "6952:142:9",
										"text": "@notice Emitted when a strategy is approved and added to the cloneable strategies\n @param strategy Address of the strategy approved"
									},
									"eventSelector": "960dd94cbb79169f09a4e445d58b895df2d9bffa5b31055d0932d801724a20d1",
									"id": 1843,
									"name": "StrategyApproved",
									"nameLocation": "7105:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7130:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "7122:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7122:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7121:18:9"
									},
									"src": "7099:41:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "7146:132:9",
										"text": "@notice Emitted when a strategy is removed from the cloneable strategies\n @param strategy Address of the strategy removed"
									},
									"eventSelector": "09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea4",
									"id": 1848,
									"name": "StrategyRemoved",
									"nameLocation": "7289:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"indexed": false,
												"mutability": "mutable",
												"name": "strategy",
												"nameLocation": "7313:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "7305:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7305:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7304:18:9"
									},
									"src": "7283:40:9"
								},
								{
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "7465:280:9",
										"text": "@notice Initialize the Allo contract\n @param _owner Address of the owner\n @param _registry Address of the registry contract\n @param _treasury Address of the treasury\n @param _percentFee Percentage for the fee\n @param _baseFee Base fee amount"
									},
									"functionSelector": "a6b63eb8",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "7759:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "7787:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "7779:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7779:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "7811:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "7803:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7803:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "7846:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "7830:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7830:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "_percentFee",
												"nameLocation": "7873:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "7865:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7865:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "7902:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "7894:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7894:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7769:147:9"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7925:0:9"
									},
									"scope": 2089,
									"src": "7750:176:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "7932:186:9",
										"text": "@notice Updates a pools metadata.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to update\n @param _metadata The new metadata to set"
									},
									"functionSelector": "5f9ca138",
									"id": 1871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePoolMetadata",
									"nameLocation": "8132:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "8159:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "8151:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8151:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "8184:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "8168:25:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 1867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1866,
														"name": "Metadata",
														"nameLocations": [
															"8168:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2461,
														"src": "8168:8:9"
													},
													"referencedDeclaration": 2461,
													"src": "8168:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8150:44:9"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8203:0:9"
									},
									"scope": 2089,
									"src": "8123:81:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "8210:149:9",
										"text": "@notice Update the registry address.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _registry The new registry address"
									},
									"functionSelector": "1a5da6c8",
									"id": 1877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateRegistry",
									"nameLocation": "8373:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "_registry",
												"nameLocation": "8396:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "8388:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8388:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8387:19:9"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8415:0:9"
									},
									"scope": 2089,
									"src": "8364:52:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "8422:150:9",
										"text": "@notice Updates the treasury address.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _treasury The new treasury address"
									},
									"functionSelector": "7f51bb1f",
									"id": 1883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateTreasury",
									"nameLocation": "8586:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "8617:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "8601:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8601:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:27:9"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8636:0:9"
									},
									"scope": 2089,
									"src": "8577:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "8643:164:9",
										"text": "@notice Updates the percentage for the fee.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _percentFee The new percentage for the fee"
									},
									"functionSelector": "f54fc4a0",
									"id": 1889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePercentFee",
									"nameLocation": "8821:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "_percentFee",
												"nameLocation": "8846:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "8838:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8838:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:21:9"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8867:0:9"
									},
									"scope": 2089,
									"src": "8812:56:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "8874:133:9",
										"text": "@notice Updates the base fee.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _baseFee The new base fee"
									},
									"functionSelector": "8e690186",
									"id": 1895,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateBaseFee",
									"nameLocation": "9021:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "_baseFee",
												"nameLocation": "9043:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "9035:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9035:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9034:18:9"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9061:0:9"
									},
									"scope": 2089,
									"src": "9012:50:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "9068:175:9",
										"text": "@notice Adds a strategy to the cloneable strategies.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _strategy The address of the strategy to add"
									},
									"functionSelector": "41bba0b4",
									"id": 1901,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToCloneableStrategies",
									"nameLocation": "9257:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "9290:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "9282:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9282:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9281:19:9"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9309:0:9"
									},
									"scope": 2089,
									"src": "9248:62:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "9316:183:9",
										"text": "@notice Removes a strategy from the cloneable strategies.\n @dev 'msg.sender' must be the Allo contract owner.\n @param _strategy The address of the strategy to remove"
									},
									"functionSelector": "031e2fa1",
									"id": 1907,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromCloneableStrategies",
									"nameLocation": "9513:29:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "9551:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "9543:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9543:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9542:19:9"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9570:0:9"
									},
									"scope": 2089,
									"src": "9504:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "9577:214:9",
										"text": "@notice Adds a pool manager to the pool.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to add the manager to\n @param _manager The address of the manager to add"
									},
									"functionSelector": "2cf682b0",
									"id": 1915,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addPoolManager",
									"nameLocation": "9805:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "9828:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "9820:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9820:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "_manager",
												"nameLocation": "9845:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "9837:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9837:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9819:35:9"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9863:0:9"
									},
									"scope": 2089,
									"src": "9796:68:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "9870:227:9",
										"text": "@notice Removes a pool manager from the pool.\n @dev 'msg.sender' must be a pool admin.\n @param _poolId The ID of the pool to remove the manager from\n @param _manager The address of the manager to remove"
									},
									"functionSelector": "7f5a70bd",
									"id": 1923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removePoolManager",
									"nameLocation": "10111:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "10137:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "10129:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10129:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "_manager",
												"nameLocation": "10154:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "10146:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10146:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10128:35:9"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10172:0:9"
									},
									"scope": 2089,
									"src": "10102:71:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "10179:199:9",
										"text": "@notice Recovers funds from a pool.\n @dev 'msg.sender' must be a pool admin.\n @param _token The token to recover\n @param _recipient The address to send the recovered funds to"
									},
									"functionSelector": "24ae6a27",
									"id": 1931,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recoverFunds",
									"nameLocation": "10392:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "10413:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "10405:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10405:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "10429:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "10421:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10404:36:9"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10449:0:9"
									},
									"scope": 2089,
									"src": "10383:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "10456:197:9",
										"text": "@notice Registers a recipient and emits {Registered} event if successful and may be handled differently by each strategy.\n @param _poolId The ID of the pool to register the recipient for"
									},
									"functionSelector": "075c0e9c",
									"id": 1941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerRecipient",
									"nameLocation": "10667:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "10693:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "10685:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10685:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10715:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "10702:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1935,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10702:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10684:37:9"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "10748:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10748:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10747:9:9"
									},
									"scope": 2089,
									"src": "10658:99:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "10763:215:9",
										"text": "@notice Registers a batch of recipients.\n @param _poolIds The pool ID's to register the recipients for\n @param _data The data to pass to the strategy and may be handled differently by each strategy"
									},
									"functionSelector": "1a20bd88",
									"id": 1954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchRegisterRecipient",
									"nameLocation": "10992:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "_poolIds",
												"nameLocation": "11032:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "11015:25:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1943,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11015:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1944,
													"nodeType": "ArrayTypeName",
													"src": "11015:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11057:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "11042:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1946,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "11042:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1947,
													"nodeType": "ArrayTypeName",
													"src": "11042:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11014:49:9"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "11098:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1950,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11098:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1951,
													"nodeType": "ArrayTypeName",
													"src": "11098:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11097:18:9"
									},
									"scope": 2089,
									"src": "10983:133:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1955,
										"nodeType": "StructuredDocumentation",
										"src": "11122:300:9",
										"text": "@notice Funds a pool.\n @dev 'msg.value' must be greater than 0 if the token is the native token\n       or '_amount' must be greater than 0 if the token is not the native token.\n @param _poolId The ID of the pool to fund\n @param _amount The amount to fund the pool with"
									},
									"functionSelector": "5acd6fac",
									"id": 1962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fundPool",
									"nameLocation": "11436:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "11453:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "11445:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "11470:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "11462:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11462:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11444:34:9"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11495:0:9"
									},
									"scope": 2089,
									"src": "11427:69:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "11502:287:9",
										"text": "@notice Allocates funds to a recipient.\n @dev Each strategy will handle the allocation of funds differently.\n @param _poolId The ID of the pool to allocate funds from\n @param _data The data to pass to the strategy and may be handled differently by each strategy."
									},
									"functionSelector": "2ec38188",
									"id": 1970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allocate",
									"nameLocation": "11803:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "11820:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "11812:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11812:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "11842:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "11829:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11829:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11811:37:9"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11865:0:9"
									},
									"scope": 2089,
									"src": "11794:72:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "11872:126:9",
										"text": "@notice Allocates funds to multiple recipients.\n @dev Each strategy will handle the allocation of funds differently"
									},
									"functionSelector": "c6dff1cf",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchAllocate",
									"nameLocation": "12012:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "_poolIds",
												"nameLocation": "12045:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "12026:27:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1972,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12026:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1973,
													"nodeType": "ArrayTypeName",
													"src": "12026:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "_datas",
												"nameLocation": "12070:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "12055:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1975,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "12055:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1976,
													"nodeType": "ArrayTypeName",
													"src": "12055:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12025:52:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12086:0:9"
									},
									"scope": 2089,
									"src": "12003:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "12093:391:9",
										"text": "@notice Distributes funds to recipients and emits {Distributed} event if successful\n @dev Each strategy will handle the distribution of funds differently\n @param _poolId The ID of the pool to distribute from\n @param _recipientIds The recipient ids to distribute to\n @param _data The data to pass to the strategy and may be handled differently by each strategy"
									},
									"functionSelector": "3a5fbd92",
									"id": 1991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nameLocation": "12498:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "12517:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "12509:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12509:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "12543:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "12526:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1984,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12526:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1985,
													"nodeType": "ArrayTypeName",
													"src": "12526:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12571:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "12558:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12558:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12508:69:9"
									},
									"returnParameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12586:0:9"
									},
									"scope": 2089,
									"src": "12489:98:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "12696:221:9",
										"text": "@notice Checks if an address is a pool admin.\n @param _poolId The ID of the pool to check\n @param _address The address to check\n @return 'true' if the '_address' is a pool admin, otherwise 'false'"
									},
									"functionSelector": "ab3febc6",
									"id": 2001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolAdmin",
									"nameLocation": "12931:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "12951:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "12943:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12943:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "12968:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "12960:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12960:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12942:35:9"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "13001:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13001:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13000:6:9"
									},
									"scope": 2089,
									"src": "12922:85:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "13013:225:9",
										"text": "@notice Checks if an address is a pool manager.\n @param _poolId The ID of the pool to check\n @param _address The address to check\n @return 'true' if the '_address' is a pool manager, otherwise 'false'"
									},
									"functionSelector": "29e40d4b",
									"id": 2011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolManager",
									"nameLocation": "13252:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "13274:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "13266:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13266:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "13291:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "13283:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13283:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13265:35:9"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "13324:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13324:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13323:6:9"
									},
									"scope": 2089,
									"src": "13243:87:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2012,
										"nodeType": "StructuredDocumentation",
										"src": "13336:222:9",
										"text": "@notice Checks if a strategy is cloneable (is in the cloneableStrategies mapping).\n @param _strategy The address of the strategy to check\n @return 'true' if the '_strategy' is cloneable, otherwise 'false'"
									},
									"functionSelector": "ab2ec589",
									"id": 2019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isCloneableStrategy",
									"nameLocation": "13572:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "13600:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "13592:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13592:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13591:19:9"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2019,
												"src": "13634:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13634:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13633:6:9"
									},
									"scope": 2089,
									"src": "13563:77:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2020,
										"nodeType": "StructuredDocumentation",
										"src": "13646:205:9",
										"text": "@notice Returns the address of the strategy for a given 'poolId'\n @param _poolId The ID of the pool to check\n @return strategy The address of the strategy for the ID of the pool passed in"
									},
									"functionSelector": "cfc0cc34",
									"id": 2027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategy",
									"nameLocation": "13865:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "13885:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "13877:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13877:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13876:17:9"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "13917:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13917:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13916:9:9"
									},
									"scope": 2089,
									"src": "13856:70:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "13932:105:9",
										"text": "@notice Returns the current percent fee\n @return percentFee The current percentage for the fee"
									},
									"functionSelector": "4edbaadc",
									"id": 2033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPercentFee",
									"nameLocation": "14051:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14064:2:9"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "14090:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14090:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14089:9:9"
									},
									"scope": 2089,
									"src": "14042:57:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "14105:85:9",
										"text": "@notice Returns the current base fee\n @return baseFee The current base fee"
									},
									"functionSelector": "15e812ad",
									"id": 2039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBaseFee",
									"nameLocation": "14204:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14214:2:9"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "14240:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14240:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14239:9:9"
									},
									"scope": 2089,
									"src": "14195:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "14255:102:9",
										"text": "@notice Returns the current treasury address\n @return treasury The current treasury address"
									},
									"functionSelector": "3b19e84a",
									"id": 2045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTreasury",
									"nameLocation": "14371:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14382:2:9"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "14408:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14408:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14407:17:9"
									},
									"scope": 2089,
									"src": "14362:63:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2046,
										"nodeType": "StructuredDocumentation",
										"src": "14431:102:9",
										"text": "@notice Returns the current registry address\n @return registry The current registry address"
									},
									"functionSelector": "5ab1bd53",
									"id": 2052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRegistry",
									"nameLocation": "14547:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14558:2:9"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "14584:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IRegistry_$2282",
													"typeString": "contract IRegistry"
												},
												"typeName": {
													"id": 2049,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2048,
														"name": "IRegistry",
														"nameLocations": [
															"14584:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2282,
														"src": "14584:9:9"
													},
													"referencedDeclaration": 2282,
													"src": "14584:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IRegistry_$2282",
														"typeString": "contract IRegistry"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14583:11:9"
									},
									"scope": 2089,
									"src": "14538:57:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "14601:181:9",
										"text": "@notice Returns the 'Pool' struct for a given 'poolId'\n @param _poolId The ID of the pool to check\n @return pool The 'Pool' struct for the ID of the pool passed in"
									},
									"functionSelector": "068bcd8d",
									"id": 2061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "14796:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "14812:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "14804:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14804:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14803:17:9"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "14844:11:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Pool_$1777_memory_ptr",
													"typeString": "struct IAllo.Pool"
												},
												"typeName": {
													"id": 2058,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2057,
														"name": "Pool",
														"nameLocations": [
															"14844:4:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1777,
														"src": "14844:4:9"
													},
													"referencedDeclaration": 1777,
													"src": "14844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pool_$1777_storage_ptr",
														"typeString": "struct IAllo.Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14843:13:9"
									},
									"scope": 2089,
									"src": "14787:70:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "14863:140:9",
										"text": "@notice Returns the current fee denominator\n @dev 1e18 represents 100%\n @return feeDenominator The current fee denominator"
									},
									"functionSelector": "f4e1fc41",
									"id": 2067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeDenominator",
									"nameLocation": "15017:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15034:2:9"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2067,
												"src": "15060:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15060:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15059:9:9"
									},
									"scope": 2089,
									"src": "15008:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e1007d4a",
									"id": 2088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPoolWithCustomStrategy",
									"nameLocation": "15084:28:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "15130:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "15122:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2068,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15122:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "_strategy",
												"nameLocation": "15158:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "15150:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15150:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "_initStrategyData",
												"nameLocation": "15190:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "15177:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15177:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "15225:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "15217:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15217:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "15249:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "15241:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15241:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "15282:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "15266:25:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 2079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2078,
														"name": "Metadata",
														"nameLocations": [
															"15266:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2461,
														"src": "15266:8:9"
													},
													"referencedDeclaration": 2461,
													"src": "15266:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "_managers",
												"nameLocation": "15318:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "15301:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2081,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15301:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2082,
													"nodeType": "ArrayTypeName",
													"src": "15301:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15112:221:9"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "15368:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "15360:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15360:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15359:16:9"
									},
									"scope": 2089,
									"src": "15075:301:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2090,
							"src": "4531:10847:9",
							"usedErrors": [],
							"usedEvents": [
								1794,
								1802,
								1811,
								1818,
								1823,
								1828,
								1833,
								1838,
								1843,
								1848
							]
						}
					],
					"src": "42:15337:9"
				},
				"id": 9
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol": {
				"ast": {
					"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IRegistry.sol",
					"exportedSymbols": {
						"IRegistry": [
							2282
						],
						"Metadata": [
							2461
						]
					},
					"id": 2283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2091,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol",
							"file": "../libraries/Metadata.sol",
							"id": 2093,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2283,
							"sourceUnit": 2462,
							"src": "80:51:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2092,
										"name": "Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2461,
										"src": "88:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2094,
								"nodeType": "StructuredDocumentation",
								"src": "4124:931:10",
								"text": "@title IRegistry Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Interface for the Registry contract and exposes all functions needed to use the Registry\n         within the Allo protocol.\n @dev The Registry Interface is used to interact with the Allo protocol and create profiles\n      that can be used to interact with the Allo protocol. The Registry is the main contract\n      that all other contracts interact with to get the 'Profile' information needed to\n      interact with the Allo protocol. The Registry is also used to create new profiles\n      and update existing profiles. The Registry is also used to add and remove members\n      from a profile. The Registry will not always be used in a strategy and will depend on\n      the strategy being used."
							},
							"fullyImplemented": false,
							"id": 2282,
							"linearizedBaseContracts": [
								2282
							],
							"name": "IRegistry",
							"nameLocation": "5065:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IRegistry.Profile",
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "5175:60:10",
										"text": "@dev The Profile struct that all profiles are based from"
									},
									"id": 2109,
									"members": [
										{
											"constant": false,
											"id": 2097,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "5273:2:10",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "5265:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2096,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "5265:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2099,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "5293:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "5285:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2098,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5285:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2101,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "5315:4:10",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "5308:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2100,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "5308:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2104,
											"mutability": "mutable",
											"name": "metadata",
											"nameLocation": "5338:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "5329:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
												"typeString": "struct Metadata"
											},
											"typeName": {
												"id": 2103,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2102,
													"name": "Metadata",
													"nameLocations": [
														"5329:8:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2461,
													"src": "5329:8:10"
												},
												"referencedDeclaration": 2461,
												"src": "5329:8:10",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
													"typeString": "struct Metadata"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2106,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "5364:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "5356:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2105,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5356:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2108,
											"mutability": "mutable",
											"name": "anchor",
											"nameLocation": "5387:6:10",
											"nodeType": "VariableDeclaration",
											"scope": 2109,
											"src": "5379:14:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2107,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5379:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Profile",
									"nameLocation": "5247:7:10",
									"nodeType": "StructDefinition",
									"scope": 2282,
									"src": "5240:160:10",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "5500:81:10",
										"text": "@dev Emitted when a profile is created. This will return your anchor address."
									},
									"eventSelector": "1e28352ff00d67474b59b87e6817d6ba65daa0130446266db8640214d8b80609",
									"id": 2125,
									"name": "ProfileCreated",
									"nameLocation": "5592:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5632:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "5616:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "5651:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "5643:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5665:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "5658:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5658:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "5680:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "5671:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 2118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2117,
														"name": "Metadata",
														"nameLocations": [
															"5671:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2461,
														"src": "5671:8:10"
													},
													"referencedDeclaration": 2461,
													"src": "5671:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2121,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5698:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "5690:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5690:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"indexed": false,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "5713:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2125,
												"src": "5705:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5705:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5606:119:10"
									},
									"src": "5586:140:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2126,
										"nodeType": "StructuredDocumentation",
										"src": "5732:116:10",
										"text": "@dev Emitted when a profile name is updated. This will update the anchor when the name is updated and return it."
									},
									"eventSelector": "54cd733148631b9ff1cb945f2d0dcd33c0692e154763bfa2f35e2d10a76c432f",
									"id": 2134,
									"name": "ProfileNameUpdated",
									"nameLocation": "5859:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "5894:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "5878:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2127,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5878:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5912:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "5905:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2129,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5905:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"indexed": false,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "5926:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2134,
												"src": "5918:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5918:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5877:56:10"
									},
									"src": "5853:81:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2135,
										"nodeType": "StructuredDocumentation",
										"src": "5940:54:10",
										"text": "@dev Emitted when a profile's metadata is updated."
									},
									"eventSelector": "a366054a574e4f861cb295fd23b5440c5119c1ba329c36f5dfeb5643537cb0f3",
									"id": 2142,
									"name": "ProfileMetadataUpdated",
									"nameLocation": "6005:22:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6044:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "6028:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "6064:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "6055:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 2139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2138,
														"name": "Metadata",
														"nameLocations": [
															"6055:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2461,
														"src": "6055:8:10"
													},
													"referencedDeclaration": 2461,
													"src": "6055:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:46:10"
									},
									"src": "5999:75:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "6080:49:10",
										"text": "@dev Emitted when a profile owner is updated."
									},
									"eventSelector": "fd9ad63830df7bdf1586c8293dc88a30864cb43e9037e7afdb2c7210facf217d",
									"id": 2149,
									"name": "ProfileOwnerUpdated",
									"nameLocation": "6140:19:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6176:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "6160:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6195:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2149,
												"src": "6187:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6187:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:42:10"
									},
									"src": "6134:68:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2150,
										"nodeType": "StructuredDocumentation",
										"src": "6208:57:10",
										"text": "@dev Emitted when a profile pending owner is updated."
									},
									"eventSelector": "21fe5cd61055ef88f636a264885b927f3ec2b380b6053a6b4a7495a6336a95c8",
									"id": 2156,
									"name": "ProfilePendingOwnerUpdated",
									"nameLocation": "6276:26:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"indexed": true,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "6319:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "6303:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6303:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"indexed": false,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "6338:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "6330:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6330:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6302:49:10"
									},
									"src": "6270:82:10"
								},
								{
									"documentation": {
										"id": 2157,
										"nodeType": "StructuredDocumentation",
										"src": "6461:192:10",
										"text": "@dev Returns the 'Profile' for a '_profileId' passed\n @param _profileId The 'profileId' to return the 'Profile' for\n @return profile The 'Profile' for the '_profileId' passed"
									},
									"functionSelector": "0114cf0a",
									"id": 2165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfileById",
									"nameLocation": "6667:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "6690:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "6682:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6682:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6681:20:10"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "profile",
												"nameLocation": "6740:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2165,
												"src": "6725:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Profile_$2109_memory_ptr",
													"typeString": "struct IRegistry.Profile"
												},
												"typeName": {
													"id": 2162,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2161,
														"name": "Profile",
														"nameLocations": [
															"6725:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2109,
														"src": "6725:7:10"
													},
													"referencedDeclaration": 2109,
													"src": "6725:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Profile_$2109_storage_ptr",
														"typeString": "struct IRegistry.Profile"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6724:24:10"
									},
									"scope": 2282,
									"src": "6658:91:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "6755:181:10",
										"text": "@dev Returns the 'Profile' for an '_anchor' passed\n @param _anchor The 'anchor' to return the 'Profile' for\n @return profile The 'Profile' for the '_anchor' passed"
									},
									"functionSelector": "dd93da43",
									"id": 2174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProfileByAnchor",
									"nameLocation": "6950:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "_anchor",
												"nameLocation": "6977:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "6969:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6969:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:17:10"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "profile",
												"nameLocation": "7024:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "7009:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Profile_$2109_memory_ptr",
													"typeString": "struct IRegistry.Profile"
												},
												"typeName": {
													"id": 2171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2170,
														"name": "Profile",
														"nameLocations": [
															"7009:7:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2109,
														"src": "7009:7:10"
													},
													"referencedDeclaration": 2109,
													"src": "7009:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Profile_$2109_storage_ptr",
														"typeString": "struct IRegistry.Profile"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7008:24:10"
									},
									"scope": 2282,
									"src": "6941:92:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "7039:415:10",
										"text": "@dev Returns a boolean if the '_account' is a member or owner of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is a member or owner of\n @param _account The 'account' to check if they are a member or owner of the '_profileId' passed in\n @return isOwnerOrMemberOfProfile A boolean if the '_account' is a member or owner of the '_profileId' passed in"
									},
									"functionSelector": "5e8a7915",
									"id": 2184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOwnerOrMemberOfProfile",
									"nameLocation": "7468:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "7501:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "7493:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7493:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "7521:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "7513:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7513:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7492:38:10"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "isOwnerOrMemberOfProfile",
												"nameLocation": "7583:24:10",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "7578:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7578:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7577:31:10"
									},
									"scope": 2282,
									"src": "7459:150:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "7615:367:10",
										"text": "@dev Returns a boolean if the '_account' is an owner of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is an owner of\n @param _owner The 'owner' to check if they are an owner of the '_profileId' passed in\n @return isOwnerOfProfile A boolean if the '_account' is an owner of the '_profileId' passed in"
									},
									"functionSelector": "39b86b8c",
									"id": 2194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOwnerOfProfile",
									"nameLocation": "7996:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "8021:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "8013:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8013:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "8041:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "8033:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8033:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8012:36:10"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "isOwnerOfProfile",
												"nameLocation": "8077:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "8072:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8072:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8071:23:10"
									},
									"scope": 2282,
									"src": "7987:108:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "8101:370:10",
										"text": "@dev Returns a boolean if the '_account' is a member of the '_profileId' passed in\n @param _profileId The 'profileId' to check if the '_account' is a member of\n @param _member The 'member' to check if they are a member of the '_profileId' passed in\n @return isMemberOfProfile A boolean if the '_account' is a member of the '_profileId' passed in"
									},
									"functionSelector": "0ec1fbac",
									"id": 2204,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isMemberOfProfile",
									"nameLocation": "8485:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "8511:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "8503:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "_member",
												"nameLocation": "8531:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "8523:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8523:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8502:37:10"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "isMemberOfProfile",
												"nameLocation": "8568:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "8563:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8563:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8562:24:10"
									},
									"scope": 2282,
									"src": "8476:111:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "8729:677:10",
										"text": "@dev Creates a new 'Profile' and returns the 'profileId' of the new profile\n Note: The 'name' and 'nonce' are used to generate the 'anchor' address\n Requirements: None, anyone can create a new profile\n @param _nonce The nonce to use to generate the 'anchor' address\n @param _name The name to use to generate the 'anchor' address\n @param _metadata The 'Metadata' to use to generate the 'anchor' address\n @param _owner The 'owner' to use to generate the 'anchor' address\n @param _members The 'members' to use to generate the 'anchor' address\n @return profileId The 'profileId' of the new profile"
									},
									"functionSelector": "3a92f65f",
									"id": 2222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createProfile",
									"nameLocation": "9420:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "9451:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "9443:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "9481:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "9467:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9467:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "9512:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "9496:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 2211,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2210,
														"name": "Metadata",
														"nameLocations": [
															"9496:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2461,
														"src": "9496:8:10"
													},
													"referencedDeclaration": 2461,
													"src": "9496:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "9539:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "9531:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9531:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "9572:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "9555:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2215,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9555:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2216,
													"nodeType": "ArrayTypeName",
													"src": "9555:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9433:153:10"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "profileId",
												"nameLocation": "9613:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "9605:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9605:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9604:19:10"
									},
									"scope": 2282,
									"src": "9411:213:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2223,
										"nodeType": "StructuredDocumentation",
										"src": "9630:625:10",
										"text": "@dev Updates the 'name' of the '_profileId' passed in and returns the new 'anchor' address\n Requirements: Only the 'Profile' owner can update the name\n Note: The 'name' and 'nonce' are used to generate the 'anchor' address and this will update the 'anchor'\n       so please use caution. You can always recreate your 'anchor' address by updating the name back\n       to the original name used to create the profile.\n @param _profileId The 'profileId' to update the name for\n @param _name The new 'name' value\n @return anchor The new 'anchor' address"
									},
									"functionSelector": "cf189ff2",
									"id": 2232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfileName",
									"nameLocation": "10269:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "10295:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "10287:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2224,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10287:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "10321:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "10307:19:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2226,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10307:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10286:41:10"
									},
									"returnParameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "anchor",
												"nameLocation": "10354:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "10346:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10346:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10345:16:10"
									},
									"scope": 2282,
									"src": "10260:102:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "10368:267:10",
										"text": "@dev Updates the 'Metadata' of the '_profileId' passed in\n Requirements: Only the 'Profile' owner can update the metadata\n @param _profileId The 'profileId' to update the metadata for\n @param _metadata The new 'Metadata' value"
									},
									"functionSelector": "ac402839",
									"id": 2241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfileMetadata",
									"nameLocation": "10649:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "10679:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "10671:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10671:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "10707:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "10691:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Metadata_$2461_memory_ptr",
													"typeString": "struct Metadata"
												},
												"typeName": {
													"id": 2237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2236,
														"name": "Metadata",
														"nameLocations": [
															"10691:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2461,
														"src": "10691:8:10"
													},
													"referencedDeclaration": 2461,
													"src": "10691:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Metadata_$2461_storage_ptr",
														"typeString": "struct Metadata"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10670:47:10"
									},
									"returnParameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10726:0:10"
									},
									"scope": 2282,
									"src": "10640:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "10733:291:10",
										"text": "@dev Updates the pending 'owner' of the '_profileId' passed in\n Requirements: Only the 'Profile' owner can update the pending owner\n @param _profileId The 'profileId' to update the pending owner for\n @param _pendingOwner The new pending 'owner' value"
									},
									"functionSelector": "3b66dacd",
									"id": 2249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProfilePendingOwner",
									"nameLocation": "11038:25:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11072:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "11064:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "_pendingOwner",
												"nameLocation": "11092:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "11084:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11084:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11063:43:10"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11115:0:10"
									},
									"scope": 2282,
									"src": "11029:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "11122:222:10",
										"text": "@dev Accepts the pending 'owner' of the '_profileId' passed in\n Requirements: Only the pending owner can accept the ownership\n @param _profileId The 'profileId' to accept the ownership for"
									},
									"functionSelector": "2497f3c6",
									"id": 2255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptProfileOwnership",
									"nameLocation": "11358:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11389:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "11381:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2251,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11381:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11380:20:10"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11409:0:10"
									},
									"scope": 2282,
									"src": "11349:61:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "11416:263:10",
										"text": "@dev Adds members to the '_profileId' passed in\n Requirements: Only the 'Profile' owner can add members\n @param _profileId The 'profileId' to add members to\n @param _members The members to add to the '_profileId' passed in"
									},
									"functionSelector": "5063f361",
									"id": 2264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addMembers",
									"nameLocation": "11693:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "11712:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "11704:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11704:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "11741:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "11724:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2259,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11724:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2260,
													"nodeType": "ArrayTypeName",
													"src": "11724:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11703:47:10"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11759:0:10"
									},
									"scope": 2282,
									"src": "11684:76:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "11766:281:10",
										"text": "@dev Removes members from the '_profileId' passed in\n Requirements: Only the 'Profile' owner can remove members\n @param _profileId The 'profileId' to remove members from\n @param _members The members to remove from the '_profileId' passed in"
									},
									"functionSelector": "e0cf1e4c",
									"id": 2273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeMembers",
									"nameLocation": "12061:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "_profileId",
												"nameLocation": "12083:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "12075:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12075:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "_members",
												"nameLocation": "12112:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "12095:25:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2268,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "12095:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2269,
													"nodeType": "ArrayTypeName",
													"src": "12095:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12074:47:10"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12130:0:10"
									},
									"scope": 2282,
									"src": "12052:79:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "12137:230:10",
										"text": "@dev Recovers funds from the contract\n Requirements: Must be the Allo owner\n @param _token The token you want to use to recover funds\n @param _recipient The recipient of the recovered funds"
									},
									"functionSelector": "24ae6a27",
									"id": 2281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "recoverFunds",
									"nameLocation": "12381:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "12402:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "12394:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12394:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "12418:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "12410:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12410:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12393:36:10"
									},
									"returnParameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12438:0:10"
									},
									"scope": 2282,
									"src": "12372:67:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2283,
							"src": "5055:7386:10",
							"usedErrors": [],
							"usedEvents": [
								2125,
								2134,
								2142,
								2149,
								2156
							]
						}
					],
					"src": "32:12410:10"
				},
				"id": 10
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol": {
				"ast": {
					"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IStrategy.sol",
					"exportedSymbols": {
						"IAllo": [
							2089
						],
						"IStrategy": [
							2451
						]
					},
					"id": 2452,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:11"
						},
						{
							"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/interfaces/IAllo.sol",
							"file": "./IAllo.sol",
							"id": 2286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2452,
							"sourceUnit": 2090,
							"src": "82:34:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2285,
										"name": "IAllo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2089,
										"src": "90:5:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStrategy",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2287,
								"nodeType": "StructuredDocumentation",
								"src": "4109:368:11",
								"text": "@title IStrategy Interface\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co> @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice BaseStrategy is the base contract that all strategies should inherit from and uses this interface."
							},
							"fullyImplemented": false,
							"id": 2451,
							"linearizedBaseContracts": [
								2451
							],
							"name": "IStrategy",
							"nameLocation": "4488:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IStrategy.Status",
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "4598:62:11",
										"text": "@notice The Status enum that all recipients are based from"
									},
									"id": 2296,
									"members": [
										{
											"id": 2289,
											"name": "None",
											"nameLocation": "4687:4:11",
											"nodeType": "EnumValue",
											"src": "4687:4:11"
										},
										{
											"id": 2290,
											"name": "Pending",
											"nameLocation": "4701:7:11",
											"nodeType": "EnumValue",
											"src": "4701:7:11"
										},
										{
											"id": 2291,
											"name": "Accepted",
											"nameLocation": "4718:8:11",
											"nodeType": "EnumValue",
											"src": "4718:8:11"
										},
										{
											"id": 2292,
											"name": "Rejected",
											"nameLocation": "4736:8:11",
											"nodeType": "EnumValue",
											"src": "4736:8:11"
										},
										{
											"id": 2293,
											"name": "Appealed",
											"nameLocation": "4754:8:11",
											"nodeType": "EnumValue",
											"src": "4754:8:11"
										},
										{
											"id": 2294,
											"name": "InReview",
											"nameLocation": "4772:8:11",
											"nodeType": "EnumValue",
											"src": "4772:8:11"
										},
										{
											"id": 2295,
											"name": "Canceled",
											"nameLocation": "4790:8:11",
											"nodeType": "EnumValue",
											"src": "4790:8:11"
										}
									],
									"name": "Status",
									"nameLocation": "4670:6:11",
									"nodeType": "EnumDefinition",
									"src": "4665:139:11"
								},
								{
									"canonicalName": "IStrategy.PayoutSummary",
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "4810:57:11",
										"text": "@notice Payout summary struct to hold the payout data"
									},
									"id": 2302,
									"members": [
										{
											"constant": false,
											"id": 2299,
											"mutability": "mutable",
											"name": "recipientAddress",
											"nameLocation": "4911:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 2302,
											"src": "4903:24:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2298,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4903:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2301,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "4945:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2302,
											"src": "4937:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2300,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4937:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PayoutSummary",
									"nameLocation": "4879:13:11",
									"nodeType": "StructDefinition",
									"scope": 2451,
									"src": "4872:86:11",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "5058:155:11",
										"text": "@notice Emitted when strategy is initialized.\n @param poolId The ID of the pool\n @param data The data passed to the 'initialize' function"
									},
									"eventSelector": "91efa3d50feccde0d0d202f8ae5c41ca0b2be614cebcb2bd2f4b019396e6568a",
									"id": 2309,
									"name": "Initialized",
									"nameLocation": "5224:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"indexed": false,
												"mutability": "mutable",
												"name": "poolId",
												"nameLocation": "5244:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "5236:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5258:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2309,
												"src": "5252:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5252:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5235:28:11"
									},
									"src": "5218:46:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2310,
										"nodeType": "StructuredDocumentation",
										"src": "5270:207:11",
										"text": "@notice Emitted when a recipient is registered.\n @param recipientId The ID of the recipient\n @param data The data passed to the 'registerRecipient' function\n @param sender The sender"
									},
									"eventSelector": "a197306e3dd5494a61a695381aa809a53b8e377a685e84e404a85d5a8da6cc62",
									"id": 2318,
									"name": "Registered",
									"nameLocation": "5488:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "5515:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "5499:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5499:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5534:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "5528:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5528:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5548:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "5540:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5540:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5498:57:11"
									},
									"src": "5482:74:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2319,
										"nodeType": "StructuredDocumentation",
										"src": "5562:188:11",
										"text": "@notice Emitted when a recipient is allocated to.\n @param recipientId The ID of the recipient\n @param amount The amount allocated\n @param token The token allocated"
									},
									"eventSelector": "463ffc2cf8b1596445c417388ed30e53eb67cf6668cb2be7f0addf8a78c8441b",
									"id": 2329,
									"name": "Allocated",
									"nameLocation": "5761:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "5787:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "5771:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5771:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5808:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "5800:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5800:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5824:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "5816:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5839:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "5831:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5831:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5770:76:11"
									},
									"src": "5755:92:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2330,
										"nodeType": "StructuredDocumentation",
										"src": "5853:223:11",
										"text": "@notice Emitted when tokens are distributed.\n @param recipientId The ID of the recipient\n @param recipientAddress The recipient\n @param amount The amount distributed\n @param sender The sender"
									},
									"eventSelector": "b5b51454adfa840bd593658325a60a50b0216f12eb5d2937efe6cea935675b7d",
									"id": 2340,
									"name": "Distributed",
									"nameLocation": "6087:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientId",
												"nameLocation": "6115:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "6099:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6099:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2334,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipientAddress",
												"nameLocation": "6136:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "6128:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6128:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6162:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "6154:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6154:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6178:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "6170:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6098:87:11"
									},
									"src": "6081:105:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2341,
										"nodeType": "StructuredDocumentation",
										"src": "6192:99:11",
										"text": "@notice Emitted when pool is set to active status.\n @param active The status of the pool"
									},
									"eventSelector": "d94c9bc4d43c51d8dc345a016d8e3d994432fac68e72832e4cf3a616bd8efae0",
									"id": 2345,
									"name": "PoolActive",
									"nameLocation": "6302:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"indexed": false,
												"mutability": "mutable",
												"name": "active",
												"nameLocation": "6318:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "6313:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6313:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:13:11"
									},
									"src": "6296:30:11"
								},
								{
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "6426:92:11",
										"text": "@notice Getter for the address of the Allo contract.\n @return The 'Allo' contract"
									},
									"functionSelector": "15cc481e",
									"id": 2352,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllo",
									"nameLocation": "6532:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6539:2:11"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2352,
												"src": "6565:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAllo_$2089",
													"typeString": "contract IAllo"
												},
												"typeName": {
													"id": 2349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2348,
														"name": "IAllo",
														"nameLocations": [
															"6565:5:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2089,
														"src": "6565:5:11"
													},
													"referencedDeclaration": 2089,
													"src": "6565:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllo_$2089",
														"typeString": "contract IAllo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6564:7:11"
									},
									"scope": 2451,
									"src": "6523:49:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2353,
										"nodeType": "StructuredDocumentation",
										"src": "6578:89:11",
										"text": "@notice Getter for the 'poolId' for this strategy.\n @return The ID of the pool"
									},
									"functionSelector": "38fff2d0",
									"id": 2358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolId",
									"nameLocation": "6681:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6690:2:11"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "6716:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6715:9:11"
									},
									"scope": 2451,
									"src": "6672:53:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2359,
										"nodeType": "StructuredDocumentation",
										"src": "6731:87:11",
										"text": "@notice Getter for the 'id' of the strategy.\n @return The ID of the strategy"
									},
									"functionSelector": "42fda9c7",
									"id": 2364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getStrategyId",
									"nameLocation": "6832:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6845:2:11"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "6871:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6871:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6870:9:11"
									},
									"scope": 2451,
									"src": "6823:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2365,
										"nodeType": "StructuredDocumentation",
										"src": "6886:259:11",
										"text": "@notice Checks whether a allocator is valid or not, will usually be true for all strategies\n      and will depend on the strategy implementation.\n @param _allocator The allocator to check\n @return Whether the allocator is valid or not"
									},
									"functionSelector": "4d31d087",
									"id": 2372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidAllocator",
									"nameLocation": "7159:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "_allocator",
												"nameLocation": "7184:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "7176:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7176:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7175:20:11"
									},
									"returnParameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "7219:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7219:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7218:6:11"
									},
									"scope": 2451,
									"src": "7150:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "7231:85:11",
										"text": "@notice whether pool is active.\n @return Whether the pool is active or not"
									},
									"functionSelector": "df868ed3",
									"id": 2378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isPoolActive",
									"nameLocation": "7330:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7342:2:11"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "7363:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7363:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7362:6:11"
									},
									"scope": 2451,
									"src": "7321:48:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "7375:92:11",
										"text": "@notice Checks the amount of tokens in the pool.\n @return The balance of the pool"
									},
									"functionSelector": "4ab4ba42",
									"id": 2384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolAmount",
									"nameLocation": "7481:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7494:2:11"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "7520:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7520:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:9:11"
									},
									"scope": 2451,
									"src": "7472:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "7535:104:11",
										"text": "@notice Increases the balance of the pool.\n @param _amount The amount to increase the pool by"
									},
									"functionSelector": "f5b0dfb7",
									"id": 2390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increasePoolAmount",
									"nameLocation": "7653:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7680:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "7672:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7672:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7671:17:11"
									},
									"returnParameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7697:0:11"
									},
									"scope": 2451,
									"src": "7644:54:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2391,
										"nodeType": "StructuredDocumentation",
										"src": "7704:382:11",
										"text": "@notice Checks the status of a recipient probably tracked in a mapping, but will depend on the implementation\n      for example, the OpenSelfRegistration only maps users to bool, and then assumes Accepted for those\n      since there is no need for Pending or Rejected.\n @param _recipientId The ID of the recipient\n @return The status of the recipient"
									},
									"functionSelector": "eb11af93",
									"id": 2399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRecipientStatus",
									"nameLocation": "8100:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "_recipientId",
												"nameLocation": "8127:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "8119:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8119:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8118:22:11"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2399,
												"src": "8164:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$2296",
													"typeString": "enum IStrategy.Status"
												},
												"typeName": {
													"id": 2396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2395,
														"name": "Status",
														"nameLocations": [
															"8164:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2296,
														"src": "8164:6:11"
													},
													"referencedDeclaration": 2296,
													"src": "8164:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$2296",
														"typeString": "enum IStrategy.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8163:8:11"
									},
									"scope": 2451,
									"src": "8091:81:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2400,
										"nodeType": "StructuredDocumentation",
										"src": "8178:397:11",
										"text": "@notice Checks the amount allocated to a recipient for distribution.\n @dev Input the values you would send to distribute(), get the amounts each recipient in the array would receive.\n      The encoded '_data' will be determined by the strategy, and will be used to determine the payout.\n @param _recipientIds The IDs of the recipients\n @param _data The encoded data"
									},
									"functionSelector": "b2b878d0",
									"id": 2413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPayouts",
									"nameLocation": "8589:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "8617:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "8600:30:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2401,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8600:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2402,
													"nodeType": "ArrayTypeName",
													"src": "8600:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8647:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "8632:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2404,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "8632:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2405,
													"nodeType": "ArrayTypeName",
													"src": "8632:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8599:54:11"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "8701:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IStrategy.PayoutSummary[]"
												},
												"typeName": {
													"baseType": {
														"id": 2409,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2408,
															"name": "PayoutSummary",
															"nameLocations": [
																"8701:13:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2302,
															"src": "8701:13:11"
														},
														"referencedDeclaration": 2302,
														"src": "8701:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PayoutSummary_$2302_storage_ptr",
															"typeString": "struct IStrategy.PayoutSummary"
														}
													},
													"id": 2410,
													"nodeType": "ArrayTypeName",
													"src": "8701:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PayoutSummary_$2302_storage_$dyn_storage_ptr",
														"typeString": "struct IStrategy.PayoutSummary[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8700:24:11"
									},
									"scope": 2451,
									"src": "8580:145:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "8825:270:11",
										"text": "@notice\n @dev The default BaseStrategy version will not use the data  if a strategy wants to use it, they will overwrite it,\n      use it, and then call super.initialize().\n @param _poolId The ID of the pool\n @param _data The encoded data"
									},
									"functionSelector": "edd146cc",
									"id": 2421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "9109:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "_poolId",
												"nameLocation": "9128:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "9120:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9120:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9150:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "9137:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9137:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9119:37:11"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9165:0:11"
									},
									"scope": 2451,
									"src": "9100:66:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2422,
										"nodeType": "StructuredDocumentation",
										"src": "9172:655:11",
										"text": "@notice This will register a recipient, set their status (and any other strategy specific values), and\n         return the ID of the recipient.\n @dev Able to change status all the way up to 'Accepted', or to 'Pending' and if there are more steps, additional\n      functions should be added to allow the owner to check this. The owner could also check attestations directly\n      and then accept for instance. The '_data' will be determined by the strategy implementation.\n @param _data The data to use to register the recipient\n @param _sender The address of the sender\n @return The ID of the recipient"
									},
									"functionSelector": "2bbe0cae",
									"id": 2431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerRecipient",
									"nameLocation": "9841:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9872:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "9859:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9859:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "9887:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "9879:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9879:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9858:37:11"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "9922:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9922:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9921:9:11"
									},
									"scope": 2451,
									"src": "9832:99:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2432,
										"nodeType": "StructuredDocumentation",
										"src": "9937:245:11",
										"text": "@notice This will allocate to a recipient.\n @dev The encoded '_data' will be determined by the strategy implementation.\n @param _data The data to use to allocate to the recipient\n @param _sender The address of the sender"
									},
									"functionSelector": "ef2920fc",
									"id": 2439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allocate",
									"nameLocation": "10196:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10218:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10205:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2433,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10205:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10233:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2439,
												"src": "10225:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10225:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10204:37:11"
									},
									"returnParameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10258:0:11"
									},
									"scope": 2451,
									"src": "10187:72:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "10265:271:11",
										"text": "@notice This will distribute funds (tokens) to recipients.\n @dev most strategies will track a TOTAL amount per recipient, and a PAID amount, and pay the difference\n this contract will need to track the amount paid already, so that it doesn't double pay."
									},
									"functionSelector": "0a6f0ee9",
									"id": 2450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nameLocation": "10550:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "_recipientIds",
												"nameLocation": "10578:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "10561:30:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2441,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10561:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2442,
													"nodeType": "ArrayTypeName",
													"src": "10561:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "10606:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "10593:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10593:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "10621:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "10613:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10613:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10560:69:11"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10638:0:11"
									},
									"scope": 2451,
									"src": "10541:98:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2452,
							"src": "4478:6163:11",
							"usedErrors": [],
							"usedEvents": [
								2309,
								2318,
								2329,
								2340,
								2345
							]
						}
					],
					"src": "42:10600:11"
				},
				"id": 11
			},
			"https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/allo-protocol/allo-v2/blob/main/contracts/core/libraries/Metadata.sol",
					"exportedSymbols": {
						"Metadata": [
							2461
						]
					},
					"id": 2462,
					"license": "AGPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2453,
							"literals": [
								"solidity",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "42:23:12"
						},
						{
							"canonicalName": "Metadata",
							"documentation": {
								"id": 2454,
								"nodeType": "StructuredDocumentation",
								"src": "4058:293:12",
								"text": "@title Metadata\n @author @thelostone-mc <aditya@gitcoin.co>, @0xKurt <kurt@gitcoin.co>, @codenamejason <jason@gitcoin.co>, @0xZakk <zakk@gitcoin.co>, @nfrgosselin <nate@gitcoin.co>\n @notice Metadata is used to define the metadata for the protocol that is used throughout the system."
							},
							"id": 2461,
							"members": [
								{
									"constant": false,
									"id": 2457,
									"mutability": "mutable",
									"name": "protocol",
									"nameLocation": "4473:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "4465:16:12",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4465:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2460,
									"mutability": "mutable",
									"name": "pointer",
									"nameLocation": "4570:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 2461,
									"src": "4563:14:12",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2459,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4563:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Metadata",
							"nameLocation": "4358:8:12",
							"nodeType": "StructDefinition",
							"scope": 2462,
							"src": "4351:229:12",
							"visibility": "public"
						}
					],
					"src": "42:4539:12"
				},
				"id": 12
			}
		}
	}
}